{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTypeaheadContext } from '../core/Context';\nimport { getDisplayName, getMenuItemId, preventInputBlur } from '../utils';\nimport { optionType } from '../propTypes';\nvar propTypes = {\n  option: optionType.isRequired,\n  position: PropTypes.number\n};\nexport var useItem = function useItem(_ref) {\n  var label = _ref.label,\n      option = _ref.option,\n      position = _ref.position,\n      props = _objectWithoutPropertiesLoose(_ref, [\"label\", \"option\", \"position\"]);\n\n  var _useTypeaheadContext = useTypeaheadContext(),\n      activeIndex = _useTypeaheadContext.activeIndex,\n      id = _useTypeaheadContext.id,\n      isOnlyResult = _useTypeaheadContext.isOnlyResult,\n      onActiveItemChange = _useTypeaheadContext.onActiveItemChange,\n      onInitialItemChange = _useTypeaheadContext.onInitialItemChange,\n      onMenuItemClick = _useTypeaheadContext.onMenuItemClick,\n      setItem = _useTypeaheadContext.setItem;\n\n  var itemRef = useRef(null);\n  useEffect(function () {\n    if (position === 0) {\n      onInitialItemChange(option);\n    }\n  }, [position]);\n  useEffect(function () {\n    if (position === activeIndex) {\n      onActiveItemChange(option); // Automatically scroll the menu as the user keys through it.\n\n      var node = itemRef.current;\n      node && scrollIntoView(node, {\n        block: 'nearest',\n        boundary: node.parentNode,\n        inline: 'nearest',\n        scrollMode: 'if-needed'\n      });\n    }\n  }, [activeIndex, position]);\n  var onClick = useCallback(function (e) {\n    onMenuItemClick(option, e);\n    props.onClick && props.onClick(e);\n  });\n  var active = isOnlyResult || activeIndex === position; // Update the item's position in the item stack.\n\n  setItem(option, position);\n  return _extends({}, props, {\n    active: active,\n    'aria-label': label,\n    'aria-selected': active,\n    id: getMenuItemId(id, position),\n    onClick: onClick,\n    onMouseDown: preventInputBlur,\n    ref: itemRef,\n    role: 'option'\n  });\n};\n\nvar menuItemContainer = function menuItemContainer(Component) {\n  var displayName = \"menuItemContainer(\" + getDisplayName(Component) + \")\";\n\n  var WrappedMenuItem = function WrappedMenuItem(props) {\n    return /*#__PURE__*/React.createElement(Component, useItem(props));\n  };\n\n  WrappedMenuItem.displayName = displayName;\n  WrappedMenuItem.propTypes = propTypes;\n  return WrappedMenuItem;\n};\n\nexport default menuItemContainer;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/node_modules/react-bootstrap-typeahead/es/containers/menuItemContainer.js"],"names":["_extends","_objectWithoutPropertiesLoose","scrollIntoView","React","useCallback","useEffect","useRef","PropTypes","useTypeaheadContext","getDisplayName","getMenuItemId","preventInputBlur","optionType","propTypes","option","isRequired","position","number","useItem","_ref","label","props","_useTypeaheadContext","activeIndex","id","isOnlyResult","onActiveItemChange","onInitialItemChange","onMenuItemClick","setItem","itemRef","node","current","block","boundary","parentNode","inline","scrollMode","onClick","e","active","onMouseDown","ref","role","menuItemContainer","Component","displayName","WrappedMenuItem","createElement"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTypeaheadContext } from '../core/Context';\nimport { getDisplayName, getMenuItemId, preventInputBlur } from '../utils';\nimport { optionType } from '../propTypes';\nvar propTypes = {\n  option: optionType.isRequired,\n  position: PropTypes.number\n};\nexport var useItem = function useItem(_ref) {\n  var label = _ref.label,\n      option = _ref.option,\n      position = _ref.position,\n      props = _objectWithoutPropertiesLoose(_ref, [\"label\", \"option\", \"position\"]);\n\n  var _useTypeaheadContext = useTypeaheadContext(),\n      activeIndex = _useTypeaheadContext.activeIndex,\n      id = _useTypeaheadContext.id,\n      isOnlyResult = _useTypeaheadContext.isOnlyResult,\n      onActiveItemChange = _useTypeaheadContext.onActiveItemChange,\n      onInitialItemChange = _useTypeaheadContext.onInitialItemChange,\n      onMenuItemClick = _useTypeaheadContext.onMenuItemClick,\n      setItem = _useTypeaheadContext.setItem;\n\n  var itemRef = useRef(null);\n  useEffect(function () {\n    if (position === 0) {\n      onInitialItemChange(option);\n    }\n  }, [position]);\n  useEffect(function () {\n    if (position === activeIndex) {\n      onActiveItemChange(option); // Automatically scroll the menu as the user keys through it.\n\n      var node = itemRef.current;\n      node && scrollIntoView(node, {\n        block: 'nearest',\n        boundary: node.parentNode,\n        inline: 'nearest',\n        scrollMode: 'if-needed'\n      });\n    }\n  }, [activeIndex, position]);\n  var onClick = useCallback(function (e) {\n    onMenuItemClick(option, e);\n    props.onClick && props.onClick(e);\n  });\n  var active = isOnlyResult || activeIndex === position; // Update the item's position in the item stack.\n\n  setItem(option, position);\n  return _extends({}, props, {\n    active: active,\n    'aria-label': label,\n    'aria-selected': active,\n    id: getMenuItemId(id, position),\n    onClick: onClick,\n    onMouseDown: preventInputBlur,\n    ref: itemRef,\n    role: 'option'\n  });\n};\n\nvar menuItemContainer = function menuItemContainer(Component) {\n  var displayName = \"menuItemContainer(\" + getDisplayName(Component) + \")\";\n\n  var WrappedMenuItem = function WrappedMenuItem(props) {\n    return /*#__PURE__*/React.createElement(Component, useItem(props));\n  };\n\n  WrappedMenuItem.displayName = displayName;\n  WrappedMenuItem.propTypes = propTypes;\n  return WrappedMenuItem;\n};\n\nexport default menuItemContainer;"]},"metadata":{},"sourceType":"module"}