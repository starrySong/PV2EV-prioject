{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\apps\\\\Projects\\\\Gantt\\\\index.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Media, Button, ButtonGroup } from 'reactstrap';\nimport classNames from 'classnames';\nimport SimpleBar from 'simplebar-react';\nimport Gantt from 'frappe-gantt/src/';\nimport PageTitle from '../../../../components/PageTitle';\nimport { projects as projectsData, tasks as tasksData } from './data';\n\nvar Project = function Project(_ref) {\n  var project = _ref.project,\n      onSelectProject = _ref.onSelectProject,\n      selectedProject = _ref.selectedProject;\n  return /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"text-body\",\n    onClick: function onClick(e) {\n      return onSelectProject(project);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: classNames('mt-2', 'p-2', {\n      'bg-light': selectedProject && selectedProject.id === project.id\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, project.status === 'On-Track' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title bg-success-lighten rounded-circle text-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: classNames(project.icon, 'font-24'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  })), project.status === 'Locked' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title bg-warning-lighten rounded-circle text-warning\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: classNames(project.icon, 'font-24'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  })), project.status === 'Delayed' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title bg-danger-lighten rounded-circle text-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: classNames(project.icon, 'font-24'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"ml-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mt-0 mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, project.name, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames('badge', 'ml-1', {\n      'badge-success-lighten': project.status === 'On-Track',\n      'badge-warning-lighten': project.status === 'Locked',\n      'badge-danger-lighten': project.status === 'Delayed'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, project.status)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-1 mb-0 text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"ID: \", project.id))));\n};\n\nvar ProjectGannt = function ProjectGannt() {\n  var _useState = useState(_toConsumableArray(projectsData)),\n      _useState2 = _slicedToArray(_useState, 1),\n      projects = _useState2[0];\n\n  var _useState3 = useState(projectsData[1]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedProject = _useState4[0],\n      setSelectedProject = _useState4[1];\n\n  var _useState5 = useState('Week'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      gantt = _useState8[0],\n      setGantt = _useState8[1];\n\n  var modes = ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'];\n  useEffect(function () {\n    var gantt = new Gantt('#tasks-gantt', _toConsumableArray(tasksData), {\n      view_modes: ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'],\n      bar_height: 20,\n      padding: 18,\n      view_mode: 'Week',\n\n      custom_popup_html(task) {\n        return '<div class=\"popover fade show bs-popover-right gantt-task-details\" role=\"tooltip\">' + '<div class=\"arrow\"></div><div class=\"popover-body\">' + \"<h5>\".concat(task.name, \"</h5><p class=\\\"mb-2\\\">Expected to finish by \").concat(task.end_date, \"</p>\") + '<div class=\"progress mb-2\" style=\"height: 10px;\">' + // tslint:disable-next-line: max-line-length\n        \"<div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" style=\\\"width: \".concat(task.progress, \"%;\\\" aria-valuenow=\\\"\").concat(task.progress, \"\\\"\") + \" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">\".concat(task.progress, \"%</div>\") + '</div></div></div>';\n      }\n\n    });\n    setGantt(gantt);\n  }, []);\n  /**\n   * On mode change\n   * @param {*} mode\n   */\n\n  var changeMode = function changeMode(mode) {\n    setMode(mode);\n\n    if (gantt) {\n      gantt.change_view_mode(mode);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    breadCrumbItems: [{\n      label: 'Projects',\n      path: '/apps/projects'\n    }, {\n      label: 'Gantt',\n      path: '/apps/projects/gantt',\n      active: true\n    }],\n    title: 'Gantt',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 3,\n    lg: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pr-xl-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mt-0 mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group position-relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"search by name...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mdi mdi-magnify search-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(SimpleBar, {\n    style: {\n      maxHeight: '535px',\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 41\n    }\n  }, projects.map(function (project, idx) {\n    return /*#__PURE__*/React.createElement(Project, {\n      project: project,\n      key: idx,\n      selectedProject: selectedProject,\n      onSelectProject: function onSelectProject(p) {\n        return setSelectedProject(p);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 53\n      }\n    });\n  })))))), /*#__PURE__*/React.createElement(Col, {\n    xl: 9,\n    lg: 8,\n    className: \"mt-4 mt-xl-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pl-xl-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"col-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"btn btn-success btn-sm mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 41\n    }\n  }, \"Add New Task\")), /*#__PURE__*/React.createElement(Col, {\n    className: \"text-sm-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }, modes.map(function (m, idx) {\n    return /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      size: 'sm',\n      key: idx,\n      onClick: function onClick() {\n        return changeMode(m);\n      },\n      active: mode === m,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 53\n      }\n    }, m);\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"tasks-gantt\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 41\n    }\n  })))))))));\n};\n\nexport default ProjectGannt;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/apps/Projects/Gantt/index.js"],"names":["React","useState","useEffect","Link","Row","Col","Card","CardBody","Media","Button","ButtonGroup","classNames","SimpleBar","Gantt","PageTitle","projects","projectsData","tasks","tasksData","Project","project","onSelectProject","selectedProject","e","id","status","icon","name","ProjectGannt","setSelectedProject","mode","setMode","gantt","setGantt","modes","view_modes","bar_height","padding","view_mode","custom_popup_html","task","end_date","progress","changeMode","change_view_mode","label","path","active","maxHeight","width","map","idx","p","m"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Media, Button, ButtonGroup } from 'reactstrap';\nimport classNames from 'classnames';\nimport SimpleBar from 'simplebar-react';\nimport Gantt from 'frappe-gantt/src/';\n\nimport PageTitle from '../../../../components/PageTitle';\nimport { projects as projectsData, tasks as tasksData } from './data';\n\nconst Project = ({ project, onSelectProject, selectedProject }) => {\n    return (\n        <Link to=\"#\" className=\"text-body\" onClick={e => onSelectProject(project)}>\n            <Media\n                className={classNames('mt-2', 'p-2', {\n                    'bg-light': selectedProject && selectedProject.id === project.id,\n                })}>\n                <div className=\"avatar-sm\">\n                    {project.status === 'On-Track' && (\n                        <span className=\"avatar-title bg-success-lighten rounded-circle text-success\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n\n                    {project.status === 'Locked' && (\n                        <span className=\"avatar-title bg-warning-lighten rounded-circle text-warning\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n\n                    {project.status === 'Delayed' && (\n                        <span className=\"avatar-title bg-danger-lighten rounded-circle text-danger\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n                </div>\n                <Media body className=\"ml-2\">\n                    <h5 className=\"mt-0 mb-0\">\n                        {project.name}\n                        <span\n                            className={classNames('badge', 'ml-1', {\n                                'badge-success-lighten': project.status === 'On-Track',\n                                'badge-warning-lighten': project.status === 'Locked',\n                                'badge-danger-lighten': project.status === 'Delayed',\n                            })}>\n                            {project.status}\n                        </span>\n                    </h5>\n                    <p className=\"mt-1 mb-0 text-muted\">ID: {project.id}</p>\n                </Media>\n            </Media>\n        </Link>\n    );\n};\n\nconst ProjectGannt = () => {\n    const [projects] = useState([...projectsData]);\n    const [selectedProject, setSelectedProject] = useState(projectsData[1]);\n    const [mode, setMode] = useState('Week');\n    const [gantt, setGantt] = useState(null);\n\n    const modes = ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'];\n\n    useEffect(() => {\n        const gantt = new Gantt('#tasks-gantt', [...tasksData], {\n            view_modes: ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'],\n            bar_height: 20,\n            padding: 18,\n            view_mode: 'Week',\n            custom_popup_html(task) {\n                return (\n                    '<div class=\"popover fade show bs-popover-right gantt-task-details\" role=\"tooltip\">' +\n                    '<div class=\"arrow\"></div><div class=\"popover-body\">' +\n                    `<h5>${task.name}</h5><p class=\"mb-2\">Expected to finish by ${task.end_date}</p>` +\n                    '<div class=\"progress mb-2\" style=\"height: 10px;\">' +\n                    // tslint:disable-next-line: max-line-length\n                    `<div class=\"progress-bar\" role=\"progressbar\" style=\"width: ${task.progress}%;\" aria-valuenow=\"${task.progress}\"` +\n                    ` aria-valuemin=\"0\" aria-valuemax=\"100\">${task.progress}%</div>` +\n                    '</div></div></div>'\n                );\n            },\n        });\n        setGantt(gantt);\n    }, []);\n\n    /**\n     * On mode change\n     * @param {*} mode\n     */\n    const changeMode = mode => {\n        setMode(mode);\n        if (gantt) {\n            gantt.change_view_mode(mode);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Projects', path: '/apps/projects' },\n                    { label: 'Gantt', path: '/apps/projects/gantt', active: true },\n                ]}\n                title={'Gantt'}\n            />\n\n            <Card>\n                <CardBody>\n                    <Row>\n                        <Col xl={3} lg={4}>\n                            <div className=\"pr-xl-3\">\n                                <h5 className=\"mt-0 mb-3\">Projects</h5>\n                                <div className=\"app-search\">\n                                    <form>\n                                        <div className=\"form-group position-relative\">\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"search by name...\"\n                                            />\n                                            <span className=\"mdi mdi-magnify search-icon\"></span>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                <Row>\n                                    <Col>\n                                        <SimpleBar style={{ maxHeight: '535px', width: '100%' }}>\n                                            {projects.map((project, idx) => {\n                                                return (\n                                                    <Project\n                                                        project={project}\n                                                        key={idx}\n                                                        selectedProject={selectedProject}\n                                                        onSelectProject={p => setSelectedProject(p)}></Project>\n                                                );\n                                            })}\n                                        </SimpleBar>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n\n                        <Col xl={9} lg={8} className=\"mt-4 mt-xl-0\">\n                            <div className=\"pl-xl-3\">\n                                <Row>\n                                    <Col className=\"col-auto\">\n                                        <Link to=\"#\" className=\"btn btn-success btn-sm mb-2\">\n                                            Add New Task\n                                        </Link>\n                                    </Col>\n                                    <Col className=\"text-sm-right\">\n                                        <ButtonGroup>\n                                            {modes.map((m, idx) => {\n                                                return (\n                                                    <Button\n                                                        color=\"light\"\n                                                        size={'sm'}\n                                                        key={idx}\n                                                        onClick={() => changeMode(m)}\n                                                        active={mode === m}>\n                                                        {m}\n                                                    </Button>\n                                                );\n                                            })}\n                                        </ButtonGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col className=\"mt-3\">\n                                        <svg id=\"tasks-gantt\"></svg>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n                    </Row>\n                </CardBody>\n            </Card>\n        </React.Fragment>\n    );\n};\n\nexport default ProjectGannt;\n"]},"metadata":{},"sourceType":"module"}