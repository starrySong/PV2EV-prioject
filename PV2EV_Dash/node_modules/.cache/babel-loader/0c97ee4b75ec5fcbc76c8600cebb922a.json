{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\uikit\\\\Spinners.js\";\n\nimport React from 'react';\nimport { Row, Col, Card, CardBody, Button } from 'reactstrap';\nimport PageTitle from '../../components/PageTitle';\nimport Spinner from '../../components/Spinner';\nvar colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nvar BorderedSpinners = function BorderedSpinners() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-0 header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \"Border spinner\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"Use the border spinners for a lightweight loading indicator.\"), colors.map(function (color, index) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      key: index,\n      className: \"m-2\",\n      color: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 28\n      }\n    });\n  })));\n};\n\nvar GrowingSpinners = function GrowingSpinners() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-0 header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Growing spinner\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"You can go for growing spinner as well. While it doesn\\u2019t technically spin, it does repeatedly grow!\"), colors.map(function (color, index) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      key: index,\n      className: \"m-2\",\n      type: \"grow\",\n      color: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }\n    });\n  })));\n};\n\nvar SpinnersSizes = function SpinnersSizes() {\n  var sizes = ['lg', 'md', 'sm'];\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-0 header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Add \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"size\"), \" attribute to make spinner with sizes including lg, md or sm.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, sizes.map(function (size, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"col-lg-6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      className: \"text-primary m-2\",\n      size: size,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Spinner, {\n      className: \"text-primary m-2\",\n      type: \"grow\",\n      size: size,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }));\n  }))));\n};\n\nvar ButtonSpinners = function ButtonSpinners() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-0 header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Buttons spinner\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Use spinners within buttons to indicate an action is currently processing or taking place. You may also swap the text out of the spinner element and utilize button text as needed.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    className: \"spinner-border-sm\",\n    tag: \"span\",\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    className: \"spinner-border-sm mr-1\",\n    tag: \"span\",\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }), \"Loading...\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    className: \"spinner-grow-sm\",\n    tag: \"span\",\n    color: \"white\",\n    type: \"grow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    className: \"spinner-grow-sm mr-1\",\n    tag: \"span\",\n    color: \"white\",\n    type: \"grow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }), \"Loading...\"))))));\n};\n\nvar Spinners = function Spinners() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    breadCrumbItems: [{\n      label: 'UI',\n      path: '/ui/spinners'\n    }, {\n      label: 'Base UI',\n      path: '/ui/spinners'\n    }, {\n      label: 'Spinners',\n      path: '/ui/spinners',\n      active: true\n    }],\n    title: 'Spinners',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BorderedSpinners, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GrowingSpinners, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-0 header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, \"Alignment\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, \"Use flexbox utilities, float utilities, or text alignment utilities to place spinners exactly where you need them in any situation.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-0 header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, \"Placement\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, \"Use \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 37\n    }\n  }, \"flexbox utilities\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 69\n    }\n  }, \"float utilities\"), \", or\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, \"text alignment\"), \" utilities to place spinners exactly where you need them in any situation.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(Spinner, {\n    className: \"ml-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SpinnersSizes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonSpinners, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Spinners;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/uikit/Spinners.js"],"names":["React","Row","Col","Card","CardBody","Button","PageTitle","Spinner","colors","BorderedSpinners","map","color","index","GrowingSpinners","SpinnersSizes","sizes","size","ButtonSpinners","Spinners","label","path","active"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,QAAzB,EAAmCC,MAAnC,QAAiD,YAAjD;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,IAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,SAAzB,EAAoC,QAApC,EAA8C,SAA9C,EAAyD,MAAzD,EAAiE,OAAjE,EAA0E,MAA1E,CAAf;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAFJ,EAIKD,MAAM,CAACE,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC1B,wBAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,KAAd;AAAqB,MAAA,SAAS,EAAC,KAA/B;AAAqC,MAAA,KAAK,EAAED,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CAJL,CADJ,CADJ;AAYH,CAbD;;AAeA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAFJ,EAMKL,MAAM,CAACE,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC1B,wBAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,KAAd;AAAqB,MAAA,SAAS,EAAC,KAA/B;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAiD,MAAA,KAAK,EAAED,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CANL,CADJ,CADJ;AAcH,CAfD;;AAiBA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,MAAMC,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAd;AAEA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,kEAFJ,eAKI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACL,GAAN,CAAU,UAACM,IAAD,EAAOJ,KAAP,EAAiB;AACxB,wBACI;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAsC,MAAA,IAAI,EAAEI,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAsC,MAAA,IAAI,EAAC,MAA3C;AAAkD,MAAA,IAAI,EAAEA,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH,GAPA,CADL,CALJ,CADJ,CADJ;AAoBH,CAvBD;;AAyBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2LAFJ,eAMI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAuC,IAAA,GAAG,EAAC,MAA3C;AAAkD,IAAA,KAAK,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ,eAMI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,wBAAnB;AAA4C,IAAA,GAAG,EAAC,MAAhD;AAAuD,IAAA,KAAK,EAAC,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eANJ,CADJ,CADJ,eAcI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAgD,IAAA,KAAK,EAAC,OAAtD;AAA8D,IAAA,IAAI,EAAC,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ,eAMI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,sBAAnB;AAA0C,IAAA,GAAG,EAAC,MAA9C;AAAqD,IAAA,KAAK,EAAC,OAA3D;AAAmE,IAAA,IAAI,EAAC,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eANJ,CADJ,CAdJ,CANJ,CADJ,CADJ;AAuCH,CAxCD;;AA0CA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,eAAe,EAAE,CACb;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,IAAI,EAAE;AAArB,KADa,EAEb;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAFa,EAGb;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,IAAI,EAAE,cAA3B;AAA2CC,MAAAA,MAAM,EAAE;AAAnD,KAHa,CADrB;AAMI,IAAA,KAAK,EAAE,UANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CAVJ,eAoBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2IAFJ,eAMI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CADJ,CADJ,CADJ,eAgBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADR,qBACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADxC,UACyE,GADzE,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,+EAFJ,eAOI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPJ,CADJ,CADJ,CAhBJ,CApBJ,eAsDI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CAtDJ,CADJ;AAkEH,CAnED;;AAqEA,eAAeH,QAAf","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, CardBody, Button } from 'reactstrap';\n\nimport PageTitle from '../../components/PageTitle';\nimport Spinner from '../../components/Spinner';\n\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nconst BorderedSpinners = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"mt-0 header-title\">Border spinner</h4>\n                <p className=\"text-muted mb-4\">Use the border spinners for a lightweight loading indicator.</p>\n\n                {colors.map((color, index) => {\n                    return <Spinner key={index} className=\"m-2\" color={color} />;\n                })}\n            </CardBody>\n        </Card>\n    );\n};\n\nconst GrowingSpinners = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"mt-0 header-title\">Growing spinner</h4>\n                <p className=\"text-muted mb-4\">\n                    You can go for growing spinner as well. While it doesn’t technically spin, it does repeatedly grow!\n                </p>\n\n                {colors.map((color, index) => {\n                    return <Spinner key={index} className=\"m-2\" type=\"grow\" color={color} />;\n                })}\n            </CardBody>\n        </Card>\n    );\n};\n\nconst SpinnersSizes = () => {\n    const sizes = ['lg', 'md', 'sm'];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"mt-0 header-title\">Size</h4>\n                <p className=\"text-muted mb-4\">\n                    Add <code>size</code> attribute to make spinner with sizes including lg, md or sm.\n                </p>\n                <div className=\"row\">\n                    {sizes.map((size, index) => {\n                        return (\n                            <div key={index} className=\"col-lg-6\">\n                                <Spinner className=\"text-primary m-2\" size={size} />\n                                <Spinner className=\"text-primary m-2\" type=\"grow\" size={size} />\n                            </div>\n                        );\n                    })}\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst ButtonSpinners = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"mt-0 header-title\">Buttons spinner</h4>\n                <p className=\"text-muted mb-4\">\n                    Use spinners within buttons to indicate an action is currently processing or taking place. You may\n                    also swap the text out of the spinner element and utilize button text as needed.\n                </p>\n                <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                        <div className=\"button-list\">\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-border-sm\" tag=\"span\" color=\"white\" />\n                                <span className=\"sr-only\">Loading...</span>\n                            </Button>\n\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-border-sm mr-1\" tag=\"span\" color=\"white\" />\n                                Loading...\n                            </Button>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-6\">\n                        <div className=\"button-list\">\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-grow-sm\" tag=\"span\" color=\"white\" type=\"grow\" />\n                                <span className=\"sr-only\">Loading...</span>\n                            </Button>\n\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-grow-sm mr-1\" tag=\"span\" color=\"white\" type=\"grow\" />\n                                Loading...\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Spinners = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'UI', path: '/ui/spinners' },\n                    { label: 'Base UI', path: '/ui/spinners' },\n                    { label: 'Spinners', path: '/ui/spinners', active: true },\n                ]}\n                title={'Spinners'}\n            />\n\n            <Row>\n                <Col md={6}>\n                    <BorderedSpinners />\n                </Col>\n\n                <Col md={6}>\n                    <GrowingSpinners />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={6}>\n                    <Card>\n                        <CardBody>\n                            <h4 className=\"mt-0 header-title\">Alignment</h4>\n                            <p className=\"text-muted mb-4\">\n                                Use flexbox utilities, float utilities, or text alignment utilities to place spinners\n                                exactly where you need them in any situation.\n                            </p>\n                            <div className=\"d-flex justify-content-center\">\n                                <Spinner />\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Col>\n\n                <Col md={6}>\n                    <Card>\n                        <CardBody>\n                            <h4 className=\"mt-0 header-title\">Placement</h4>\n                            <p className=\"text-muted mb-4\">\n                                Use <code>flexbox utilities</code>, <code>float utilities</code>, or{' '}\n                                <code>text alignment</code> utilities to place spinners exactly where you need them in\n                                any situation.\n                            </p>\n                            <div className=\"d-flex align-items-center\">\n                                <strong>Loading...</strong>\n                                <Spinner className=\"ml-auto\" />\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={6}>\n                    <SpinnersSizes />\n                </Col>\n\n                <Col md={6}>\n                    <ButtonSpinners />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Spinners;\n"]},"metadata":{},"sourceType":"module"}