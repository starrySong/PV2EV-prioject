{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\uikit\\\\DragDrop.js\";\n\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\nimport PageTitle from '../../components/PageTitle';\n\nvar Item = function Item(_ref) {\n  var color = _ref.color;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classNames('mb-0', 'mt-3', 'text-white', 'bg-' + color),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"blockquote\", {\n    className: \"card-bodyquote mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\"), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, \"Someone famous in \", /*#__PURE__*/React.createElement(\"cite\", {\n    title: \"Source Title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 43\n    }\n  }, \"Source Title\")))));\n};\n/**\n * Reorders the list\n * @param {*} list\n * @param {*} startIndex\n * @param {*} endIndex\n */\n\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n}; // DragDrop\n\n\nvar DragDrop = /*#__PURE__*/function (_Component) {\n  _inherits(DragDrop, _Component);\n\n  var _super = _createSuper(DragDrop);\n\n  function DragDrop(props) {\n    var _this2;\n\n    _classCallCheck(this, DragDrop);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      items: []\n    };\n    _this2.onDragEnd = _this2.onDragEnd.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n  /**\n   * On drag ends\n   * @param {3} result\n   */\n\n\n  _createClass(DragDrop, [{\n    key: \"onDragEnd\",\n    value: function onDragEnd(result) {\n      // dropped outside the list\n      if (!result.destination) {\n        return;\n      }\n\n      var items = reorder(this.state.items, result.source.index, result.destination.index);\n      this.setState({\n        items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PageTitle, {\n        breadCrumbItems: [{\n          label: 'UI',\n          path: '/ui/dragdrop'\n        }, {\n          label: 'Extended UI',\n          path: '/ui/dragdrop'\n        }, {\n          label: 'Drag and Drop',\n          path: '/ui/dragdrop',\n          active: true\n        }],\n        title: 'Drag and Drop',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"droppable\",\n        direction: \"horizontal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 45\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          ref: provided.innerRef,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"header-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 57\n          }\n        }, \"Simple Drag and Drop Example\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-muted font-14\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 57\n          }\n        }, \"Drag and drop cards in a list\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 57\n          }\n        }, ['primary', 'success', 'info', 'danger'].map(function (color, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: color,\n            draggableId: color,\n            index: index,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 69\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              className: \"mr-2\",\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 77\n              }\n            }), /*#__PURE__*/React.createElement(Item, {\n              color: color,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 81\n              }\n            }));\n          });\n        }), provided.placeholder));\n      })))))))));\n    }\n  }]);\n\n  return DragDrop;\n}(Component);\n\nexport default DragDrop;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/uikit/DragDrop.js"],"names":["React","Component","Row","Col","Card","CardBody","DragDropContext","Droppable","Draggable","classNames","PageTitle","Item","color","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","DragDrop","props","state","items","onDragEnd","bind","destination","source","index","setState","label","path","active","provided","snapshot","innerRef","map","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\n\nimport PageTitle from '../../components/PageTitle';\n\nconst Item = ({ color }) => {\n    return (\n        <Card className={classNames('mb-0', 'mt-3', 'text-white', 'bg-' + color)}>\n            <CardBody>\n                <blockquote className=\"card-bodyquote mb-0\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                    <footer>\n                        Someone famous in <cite title=\"Source Title\">Source Title</cite>\n                    </footer>\n                </blockquote>\n            </CardBody>\n        </Card>\n    );\n};\n\n/**\n * Reorders the list\n * @param {*} list\n * @param {*} startIndex\n * @param {*} endIndex\n */\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n// DragDrop\nclass DragDrop extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: [],\n        };\n\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n\n    /**\n     * On drag ends\n     * @param {3} result\n     */\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const items = reorder(this.state.items, result.source.index, result.destination.index);\n\n        this.setState({\n            items,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageTitle\n                    breadCrumbItems={[\n                        { label: 'UI', path: '/ui/dragdrop' },\n                        { label: 'Extended UI', path: '/ui/dragdrop' },\n                        { label: 'Drag and Drop', path: '/ui/dragdrop', active: true },\n                    ]}\n                    title={'Drag and Drop'}\n                />\n\n                <Row>\n                    <Col>\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            <Row>\n                                <Col>\n                                    <Card>\n                                        <CardBody>\n                                            <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n                                                {(provided, snapshot) => (\n                                                    <div ref={provided.innerRef}>\n                                                        <h4 className=\"header-title\">Simple Drag and Drop Example</h4>\n                                                        <p className=\"text-muted font-14\">\n                                                            Drag and drop cards in a list\n                                                        </p>\n                                                        <div className=\"d-flex\">\n                                                            {['primary', 'success', 'info', 'danger'].map(\n                                                                (color, index) => (\n                                                                    <Draggable\n                                                                        key={color}\n                                                                        draggableId={color}\n                                                                        index={index}>\n                                                                        {(provided, snapshot) => (\n                                                                            <div\n                                                                                className=\"mr-2\"\n                                                                                ref={provided.innerRef}\n                                                                                {...provided.draggableProps}\n                                                                                {...provided.dragHandleProps}>\n                                                                                <Item color={color} />\n                                                                            </div>\n                                                                        )}\n                                                                    </Draggable>\n                                                                )\n                                                            )}\n                                                            {provided.placeholder}\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </Droppable>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </DragDropContext>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DragDrop;\n"]},"metadata":{},"sourceType":"module"}