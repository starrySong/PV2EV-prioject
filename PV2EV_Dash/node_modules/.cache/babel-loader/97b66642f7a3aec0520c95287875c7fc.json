{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { TypeaheadContext } from './Context';\nimport { getHintText, getInputProps, getInputText, getIsOnlyResult, pick } from '../utils';\nimport { RETURN } from '../constants';\nvar inputPropKeys = ['activeIndex', 'disabled', 'id', 'inputRef', 'isFocused', 'isMenuShown', 'multiple', 'onBlur', 'onChange', 'onFocus', 'onKeyDown', 'placeholder'];\nvar propKeys = ['activeIndex', 'hideMenu', 'isMenuShown', 'labelKey', 'onClear', 'onHide', 'onRemove', 'results', 'selected', 'text', 'toggleMenu'];\nvar contextKeys = ['activeIndex', 'id', 'initialItem', 'inputNode', 'onActiveItemChange', 'onAdd', 'onInitialItemChange', 'onMenuItemClick', 'selectHintOnEnter', 'setItem'];\n\nfunction usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nvar TypeaheadManager = function TypeaheadManager(props) {\n  var allowNew = props.allowNew,\n      children = props.children,\n      initialItem = props.initialItem,\n      isMenuShown = props.isMenuShown,\n      onAdd = props.onAdd,\n      onInitialItemChange = props.onInitialItemChange,\n      onKeyDown = props.onKeyDown,\n      onMenuToggle = props.onMenuToggle,\n      results = props.results;\n  var prevProps = usePrevious(props);\n  useEffect(function () {\n    // Clear the initial item when there are no results.\n    if (!(allowNew || results.length)) {\n      onInitialItemChange(null);\n    }\n  });\n  useEffect(function () {\n    if (prevProps && prevProps.isMenuShown !== isMenuShown) {\n      onMenuToggle(isMenuShown);\n    }\n  });\n  var handleKeyDown = useCallback(function (e) {\n    switch (e.keyCode) {\n      case RETURN:\n        if (initialItem && getIsOnlyResult(props)) {\n          onAdd(initialItem);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    onKeyDown(e);\n  });\n\n  var childProps = _extends({}, pick(props, propKeys), {\n    getInputProps: getInputProps(_extends({}, pick(props, inputPropKeys), {\n      onKeyDown: handleKeyDown,\n      value: getInputText(props)\n    }))\n  });\n\n  var contextValue = _extends({}, pick(props, contextKeys), {\n    hintText: getHintText(props),\n    isOnlyResult: getIsOnlyResult(props)\n  });\n\n  return /*#__PURE__*/React.createElement(TypeaheadContext.Provider, {\n    value: contextValue\n  }, children(childProps));\n};\n\nexport default TypeaheadManager;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/node_modules/react-bootstrap-typeahead/es/core/TypeaheadManager.js"],"names":["_extends","React","useCallback","useEffect","useRef","TypeaheadContext","getHintText","getInputProps","getInputText","getIsOnlyResult","pick","RETURN","inputPropKeys","propKeys","contextKeys","usePrevious","value","ref","current","TypeaheadManager","props","allowNew","children","initialItem","isMenuShown","onAdd","onInitialItemChange","onKeyDown","onMenuToggle","results","prevProps","length","handleKeyDown","e","keyCode","childProps","contextValue","hintText","isOnlyResult","createElement","Provider"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { TypeaheadContext } from './Context';\nimport { getHintText, getInputProps, getInputText, getIsOnlyResult, pick } from '../utils';\nimport { RETURN } from '../constants';\nvar inputPropKeys = ['activeIndex', 'disabled', 'id', 'inputRef', 'isFocused', 'isMenuShown', 'multiple', 'onBlur', 'onChange', 'onFocus', 'onKeyDown', 'placeholder'];\nvar propKeys = ['activeIndex', 'hideMenu', 'isMenuShown', 'labelKey', 'onClear', 'onHide', 'onRemove', 'results', 'selected', 'text', 'toggleMenu'];\nvar contextKeys = ['activeIndex', 'id', 'initialItem', 'inputNode', 'onActiveItemChange', 'onAdd', 'onInitialItemChange', 'onMenuItemClick', 'selectHintOnEnter', 'setItem'];\n\nfunction usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nvar TypeaheadManager = function TypeaheadManager(props) {\n  var allowNew = props.allowNew,\n      children = props.children,\n      initialItem = props.initialItem,\n      isMenuShown = props.isMenuShown,\n      onAdd = props.onAdd,\n      onInitialItemChange = props.onInitialItemChange,\n      onKeyDown = props.onKeyDown,\n      onMenuToggle = props.onMenuToggle,\n      results = props.results;\n  var prevProps = usePrevious(props);\n  useEffect(function () {\n    // Clear the initial item when there are no results.\n    if (!(allowNew || results.length)) {\n      onInitialItemChange(null);\n    }\n  });\n  useEffect(function () {\n    if (prevProps && prevProps.isMenuShown !== isMenuShown) {\n      onMenuToggle(isMenuShown);\n    }\n  });\n  var handleKeyDown = useCallback(function (e) {\n    switch (e.keyCode) {\n      case RETURN:\n        if (initialItem && getIsOnlyResult(props)) {\n          onAdd(initialItem);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    onKeyDown(e);\n  });\n\n  var childProps = _extends({}, pick(props, propKeys), {\n    getInputProps: getInputProps(_extends({}, pick(props, inputPropKeys), {\n      onKeyDown: handleKeyDown,\n      value: getInputText(props)\n    }))\n  });\n\n  var contextValue = _extends({}, pick(props, contextKeys), {\n    hintText: getHintText(props),\n    isOnlyResult: getIsOnlyResult(props)\n  });\n\n  return /*#__PURE__*/React.createElement(TypeaheadContext.Provider, {\n    value: contextValue\n  }, children(childProps));\n};\n\nexport default TypeaheadManager;"]},"metadata":{},"sourceType":"module"}