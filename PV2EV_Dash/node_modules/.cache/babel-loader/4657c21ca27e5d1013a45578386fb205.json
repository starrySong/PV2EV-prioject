{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\dashboards\\\\PV2EVDash2\\\\Statistics.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport StatisticsWidget from '../../../components/StatisticsWidget';\n\nvar Statistics = function Statistics() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      todayCostPV = _useState2[0],\n      setTodayCostPV = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      retio = _useState4[0],\n      setRetio = _useState4[1];\n\n  useEffect(function () {\n    // POST request using fetch inside useEffect React hook\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(0)\n    };\n    fetch('http://127.0.0.1:5000/value2', requestOptions).then(function (response) {\n      response.json().then(function (data) {\n        setTodayCostPV(data[0]);\n        setRetio(data[1]); // json형식 데이터에 접근할 때는 forEach를 사용한다.\n      });\n    });\n  }, []);\n\n  function percent(x) {\n    var results = String(x) + \" %\";\n    return results;\n  }\n\n  function redGreen(x) {\n    if (x > 0) {\n      return 'text-success';\n    } else {\n      return 'text-danger';\n    }\n  }\n\n  function upDown(x) {\n    if (x > 0) {\n      return 'mdi mdi-arrow-up-bold';\n    } else {\n      return 'mdi mdi-arrow-down-bold';\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n    icon: \"mdi mdi-cart-plus\",\n    description: \"Growth\",\n    title: \"\\uC808\\uC57D \\uBE44\\uC6A9 (\\uC6D0)\",\n    stats: todayCostPV,\n    trend: {\n      textClass: redGreen(retio),\n      icon: upDown(retio),\n      value: percent(retio),\n      time: 'Since yesterday'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/dashboards/PV2EVDash2/Statistics.js"],"names":["React","useEffect","useState","Row","Col","StatisticsWidget","Statistics","todayCostPV","setTodayCostPV","retio","setRetio","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","percent","x","results","String","redGreen","upDown","textClass","icon","value","time"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AAEA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACgBJ,QAAQ,CAAC,CAAD,CADxB;AAAA;AAAA,MACdK,WADc;AAAA,MACFC,cADE;;AAAA,mBAEIN,QAAQ,CAAC,CAAD,CAFZ;AAAA;AAAA,MAEdO,KAFc;AAAA,MAERC,QAFQ;;AAIrBT,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA,QAAMU,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,CAAf;AAHa,KAAvB;AAMAC,IAAAA,KAAK,CAAC,8BAAD,EAAiCN,cAAjC,CAAL,CACKO,IADL,CACU,UAACC,QAAD,EAAc;AAChBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAASG,IAAT,EAAe;AAChCb,QAAAA,cAAc,CAACa,IAAI,CAAC,CAAD,CAAL,CAAd;AACAX,QAAAA,QAAQ,CAACW,IAAI,CAAC,CAAD,CAAL,CAAR,CAFgC,CAGpC;AACH,OAJG;AAKP,KAPD;AASH,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,WAASC,OAAT,CAAiBC,CAAjB,EAAmB;AACf,QAAMC,OAAO,GAAGC,MAAM,CAACF,CAAD,CAAN,GAAY,IAA5B;AACA,WAAQC,OAAR;AACH;;AAED,WAASE,QAAT,CAAkBH,CAAlB,EAAoB;AAChB,QAAIA,CAAC,GAAG,CAAR,EAAU;AACN,aAAQ,cAAR;AACH,KAFD,MAGI;AACA,aAAQ,aAAR;AACH;AACJ;;AACD,WAASI,MAAT,CAAgBJ,CAAhB,EAAkB;AACd,QAAIA,CAAC,GAAG,CAAR,EAAU;AACN,aAAQ,uBAAR;AACH,KAFD,MAGI;AACA,aAAQ,yBAAR;AACH;AACJ;;AAED,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,IAAI,EAAC,mBADT;AAEI,IAAA,WAAW,EAAC,QAFhB;AAGI,IAAA,KAAK,EAAC,oCAHV;AAII,IAAA,KAAK,EAAGhB,WAJZ;AAKI,IAAA,KAAK,EAAE;AACHqB,MAAAA,SAAS,EAAEF,QAAQ,CAACjB,KAAD,CADhB;AAEHoB,MAAAA,IAAI,EAAEF,MAAM,CAAClB,KAAD,CAFT;AAGHqB,MAAAA,KAAK,EAAER,OAAO,CAACb,KAAD,CAHX;AAIHsB,MAAAA,IAAI,EAAE;AAJH,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ;AAoBH,CAjED;;AAmEA,eAAezB,UAAf","sourcesContent":["// @flow\nimport React, {useEffect, useState} from 'react';\nimport { Row, Col } from 'reactstrap';\n\nimport StatisticsWidget from '../../../components/StatisticsWidget';\n\nconst Statistics = () => {\n    const [todayCostPV,setTodayCostPV] = useState(0);\n    const [retio,setRetio] = useState(0);\n\n    useEffect(() => {\n        // POST request using fetch inside useEffect React hook\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(0)\n        };\n\n        fetch('http://127.0.0.1:5000/value2', requestOptions)\n            .then((response) => {\n                response.json().then(function(data) {\n                    setTodayCostPV(data[0])\n                    setRetio(data[1])\n                // json형식 데이터에 접근할 때는 forEach를 사용한다.\n            })\n        })\n\n    }, []);\n\n    function percent(x){\n        const results = String(x) + \" %\";\n        return (results);\n    }\n\n    function redGreen(x){\n        if (x > 0){\n            return ('text-success');\n        }\n        else{\n            return ('text-danger');\n        }\n    }\n    function upDown(x){\n        if (x > 0){\n            return ('mdi mdi-arrow-up-bold');\n        }\n        else{\n            return ('mdi mdi-arrow-down-bold');\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col lg={6}>\n                    <StatisticsWidget\n                        icon=\"mdi mdi-cart-plus\"\n                        description=\"Growth\"\n                        title=\"절약 비용 (원)\"\n                        stats= {todayCostPV}\n                        trend={{\n                            textClass: redGreen(retio),\n                            icon: upDown(retio),\n                            value: percent(retio),\n                            time: 'Since yesterday',\n                        }}>\n                    </StatisticsWidget>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}