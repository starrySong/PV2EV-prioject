{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\dashboards\\\\Project\\\\GoogleMaps.js\";\n\n/*global kakao*/\nimport React, { useEffect, useCallback, useState } from 'react';\nimport BarChart from './BarChart';\nimport axios from 'axios';\n\nvar Location = function Location() {\n  var _useState = useState({\n    tempDate: '1/10/2017',\n    //사용할 문자열들을 저장하는 객체 형태로 관리!\n    tempPlace: '세종시폐기물매립장태양광'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1]; //그리고 나중에 쓰기 편하게 비구조화 할당!\n\n\n  var tempDate = inputs.tempDate,\n      tempPlace = inputs.tempPlace;\n\n  var onChange = function onChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      [name]: value\n    }));\n  }; //onChange함수\n\n  /*useEffect(()=>{\n      axios.post('http://127.0.0.1:5000/value',{\n          tempPlace: tempPlace,\n          tempDate: tempDate\n      }).then((res)=>{\n          console.log(res.data)\n      })\n  })*/\n\n\n  useEffect(function () {\n    // POST request using fetch inside useEffect React hook\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        tempPlace: tempPlace,\n        tempDate: tempDate\n      })\n    };\n    fetch('http://127.0.0.1:5000/value', requestOptions).then(function (response) {\n      response.json().then(function (data) {\n        console.log(data);\n        var getPVData = data; // type = Object로 들고온다.\n\n        console.log(typeof getPVData);\n        console.log(\"Got Data : \" + data.key); // json형식 데이터에 접근할 때는 forEach를 사용한다.\n      });\n    });\n  }, []);\n\n  var onReset = function onReset() {\n    setInputs({\n      tempDate: '',\n      tempPlace: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }, \"\\uCC3E\\uB294 \\uACF3\\uC758 \\uC704\\uCE58\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\uC6D0\\uD558\\uB294 \\uB370\\uC774\\uD130 \\uC785\\uB825\",\n    name: \"tempPlace\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }\n  }), \"\\uB0A0\\uC9DC\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"2018-01-01\\uD615\\uC2DD\\uC73C\\uB85C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    name: \"tempDate\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onReset: onReset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }\n  }, \"\\uAC80\\uC0C9\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(BarChart, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 18\n    }\n  })));\n};\n\nexport default Location;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/dashboards/Project/GoogleMaps.js"],"names":["React","useEffect","useCallback","useState","BarChart","axios","Location","tempDate","tempPlace","inputs","setInputs","onChange","e","target","name","value","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","console","log","getPVData","key","onReset"],"mappings":"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","sourcesContent":["/*global kakao*/\nimport React, { useEffect, useCallback, useState } from 'react'\nimport BarChart from './BarChart'\nimport axios from 'axios'\nconst Location=()=>{\n\n    const [inputs, setInputs] = useState({\n      tempDate: '1/10/2017', \t//사용할 문자열들을 저장하는 객체 형태로 관리!\n      tempPlace: '세종시폐기물매립장태양광',\n    });\n\n    //그리고 나중에 쓰기 편하게 비구조화 할당!\n    const { tempDate, tempPlace } = inputs;\n\n    const onChange = e => {\n        const {name, value} = e.target;\n        setInputs({\n            ...inputs,\n            [name]: value,\n        });\n\n   }//onChange함수\n\n   /*useEffect(()=>{\n       axios.post('http://127.0.0.1:5000/value',{\n           tempPlace: tempPlace,\n           tempDate: tempDate\n       }).then((res)=>{\n           console.log(res.data)\n       })\n   })*/\n\n    useEffect(() => {\n        // POST request using fetch inside useEffect React hook\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ tempPlace: tempPlace,\n            tempDate: tempDate})\n        };\n        fetch('http://127.0.0.1:5000/value', requestOptions)\n            .then((response) => {\n                response.json().then(function(data) {\n                console.log(data);\n                const getPVData = data; // type = Object로 들고온다.\n                console.log(typeof (getPVData));\n                console.log(\"Got Data : \" + data.key);\n                // json형식 데이터에 접근할 때는 forEach를 사용한다.\n            })\n        })\n    }, []);\n\n    const onReset = () => {\n      setInputs({\n        tempDate: '',\n        tempPlace: '',\n      });\n    };\n\n    return (\n        <div>\n        <div>\n            <br/>\n           <form>\n               찾는 곳의 위치를 입력해주세요.<br/>\n               <input placeholder = \"원하는 데이터 입력\"  name=\"tempPlace\" onChange={onChange}/>\n               <br/>날짜<br/>\n               <input type = \"text\" placeholder=\"2018-01-01형식으로 입력하세요\"\n                      name=\"tempDate\"\n                      onChange={onChange}/>\n               <button type=\"submit\" onReset={onReset}>검색</button>\n           </form>\n        </div>\n\n        <div><p/><BarChart/></div>\n        </div>\n    )\n}\n\nexport default Location;"]},"metadata":{},"sourceType":"module"}