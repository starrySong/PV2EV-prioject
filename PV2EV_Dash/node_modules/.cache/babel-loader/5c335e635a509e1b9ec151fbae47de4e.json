{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\dashboards\\\\Analytics\\\\MapContainer.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport LineChart from \"./LineChart\";\nvar _window = window,\n    kakao = _window.kakao;\n\nvar MapContainer = function MapContainer(_ref) {\n  var searchPlace = _ref.searchPlace;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      pvdata0 = _useState2[0],\n      setPvdata0 = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pvdata1 = _useState4[0],\n      setPvdata1 = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pvdata2 = _useState6[0],\n      setPvdata2 = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pvdata3 = _useState8[0],\n      setPvdata3 = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pvdata4 = _useState10[0],\n      setPvdata4 = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      pvdata5 = _useState12[0],\n      setPvdata5 = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      pvdata6 = _useState14[0],\n      setPvdata6 = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      pvdata7 = _useState16[0],\n      setPvdata7 = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      pvdata8 = _useState18[0],\n      setPvdata8 = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      pvdata9 = _useState20[0],\n      setPvdata9 = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      pvdata10 = _useState22[0],\n      setPvdata10 = _useState22[1];\n\n  var _useState23 = useState(0),\n      _useState24 = _slicedToArray(_useState23, 2),\n      pvdata11 = _useState24[0],\n      setPvdata11 = _useState24[1];\n\n  var _useState25 = useState(0),\n      _useState26 = _slicedToArray(_useState25, 2),\n      pvdata12 = _useState26[0],\n      setPvdata12 = _useState26[1];\n\n  var _useState27 = useState(0),\n      _useState28 = _slicedToArray(_useState27, 2),\n      pvdata13 = _useState28[0],\n      setPvdata13 = _useState28[1];\n\n  var _useState29 = useState(0),\n      _useState30 = _slicedToArray(_useState29, 2),\n      pvdata14 = _useState30[0],\n      setPvdata14 = _useState30[1];\n\n  var _useState31 = useState(0),\n      _useState32 = _slicedToArray(_useState31, 2),\n      pvdata15 = _useState32[0],\n      setPvdata15 = _useState32[1];\n\n  var _useState33 = useState(0),\n      _useState34 = _slicedToArray(_useState33, 2),\n      pvdata16 = _useState34[0],\n      setPvdata16 = _useState34[1];\n\n  var _useState35 = useState(0),\n      _useState36 = _slicedToArray(_useState35, 2),\n      pvdata17 = _useState36[0],\n      setPvdata17 = _useState36[1];\n\n  var _useState37 = useState(0),\n      _useState38 = _slicedToArray(_useState37, 2),\n      pvdata18 = _useState38[0],\n      setPvdata18 = _useState38[1];\n\n  var _useState39 = useState(0),\n      _useState40 = _slicedToArray(_useState39, 2),\n      pvdata19 = _useState40[0],\n      setPvdata19 = _useState40[1];\n\n  var _useState41 = useState(0),\n      _useState42 = _slicedToArray(_useState41, 2),\n      pvdata20 = _useState42[0],\n      setPvdata20 = _useState42[1];\n\n  var _useState43 = useState(0),\n      _useState44 = _slicedToArray(_useState43, 2),\n      pvdata21 = _useState44[0],\n      setPvdata21 = _useState44[1];\n\n  var _useState45 = useState(0),\n      _useState46 = _slicedToArray(_useState45, 2),\n      pvdata22 = _useState46[0],\n      setPvdata22 = _useState46[1];\n\n  var _useState47 = useState(0),\n      _useState48 = _slicedToArray(_useState47, 2),\n      pvdata23 = _useState48[0],\n      setPvdata23 = _useState48[1];\n\n  var _useState49 = useState(0),\n      _useState50 = _slicedToArray(_useState49, 2),\n      getlat = _useState50[0],\n      setGetlat = _useState50[1];\n\n  var _useState51 = useState(0),\n      _useState52 = _slicedToArray(_useState51, 2),\n      getlon = _useState52[0],\n      setGetlon = _useState52[1];\n\n  var _useState53 = useState(0),\n      _useState54 = _slicedToArray(_useState53, 2),\n      getarea = _useState54[0],\n      setGetarea = _useState54[1];\n\n  useEffect(function () {\n    var container = document.getElementById(\"myMap\");\n    var options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3\n    };\n    var map = new kakao.maps.Map(container, options);\n    var markerPosition = new kakao.maps.LatLng(37.365264512305174, 127.10676860117488);\n    var marker = new kakao.maps.Marker({\n      position: markerPosition\n    });\n    var ps = new kakao.maps.services.Places();\n    var mapTypeControl = new kakao.maps.MapTypeControl(); // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\n\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT); // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n\n    var zoomControl = new kakao.maps.ZoomControl();\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n    var drawingFlag = false; // 다각형이 그려지고 있는 상태를 가지고 있을 변수입니다\n\n    var drawingPolygon; // 그려지고 있는 다각형을 표시할 다각형 객체입니다\n\n    var polygon; // 그리기가 종료됐을 때 지도에 표시할 다각형 객체입니다\n\n    var areaOverlay; // 다각형의 면적정보를 표시할 커스텀오버레이 입니다\n\n    ps.keywordSearch(searchPlace, placesSearchCB);\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        var bounds = new kakao.maps.LatLngBounds();\n\n        for (var i = 0; i < data.length; i++) {\n          //displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        }\n\n        map.setBounds(bounds);\n      }\n\n      setGetlat(data[0].y);\n      setGetlon(data[0].x);\n      debugger;\n      console.log(getlat);\n    }\n\n    function displayMarker(place) {\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x)\n      });\n    }\n\n    kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\n      // 마우스로 클릭한 위치입니다\n      var clickPosition = mouseEvent.latLng; // 지도 클릭이벤트가 발생했는데 다각형이 그려지고 있는 상태가 아니면\n\n      if (!drawingFlag) {\n        // 상태를 true로, 다각형을 그리고 있는 상태로 변경합니다\n        drawingFlag = true; // 지도 위에 다각형이 표시되고 있다면 지도에서 제거합니다\n\n        if (polygon) {\n          polygon.setMap(null);\n          polygon = null;\n        } // 지도 위에 면적정보 커스텀오버레이가 표시되고 있다면 지도에서 제거합니다\n\n\n        if (areaOverlay) {\n          areaOverlay.setMap(null);\n          areaOverlay = null;\n        } // 그려지고 있는 다각형을 표시할 다각형을 생성하고 지도에 표시합니다\n\n\n        drawingPolygon = new kakao.maps.Polygon({\n          map: map,\n          // 다각형을 표시할 지도입니다\n          path: [clickPosition],\n          // 다각형을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\n          strokeWeight: 3,\n          // 선의 두께입니다\n          strokeColor: '#00a0e9',\n          // 선의 색깔입니다\n          strokeOpacity: 1,\n          // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\n          strokeStyle: 'solid',\n          // 선의 스타일입니다\n          fillColor: '#00a0e9',\n          // 채우기 색깔입니다\n          fillOpacity: 0.2 // 채우기 불투명도입니다\n\n        }); // 그리기가 종료됐을때 지도에 표시할 다각형을 생성합니다\n\n        polygon = new kakao.maps.Polygon({\n          path: [clickPosition],\n          // 다각형을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\n          strokeWeight: 3,\n          // 선의 두께입니다\n          strokeColor: '#00a0e9',\n          // 선의 색깔입니다\n          strokeOpacity: 1,\n          // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\n          strokeStyle: 'solid',\n          // 선의 스타일입니다\n          fillColor: '#00a0e9',\n          // 채우기 색깔입니다\n          fillOpacity: 0.2 // 채우기 불투명도입니다\n\n        });\n      } else {\n        // 다각형이 그려지고 있는 상태이면\n        // 그려지고 있는 다각형의 좌표에 클릭위치를 추가합니다\n        // 다각형의 좌표 배열을 얻어옵니다\n        var drawingPath = drawingPolygon.getPath(); // 좌표 배열에 클릭한 위치를 추가하고\n\n        drawingPath.push(clickPosition); // 다시 다각형 좌표 배열을 설정합니다\n\n        drawingPolygon.setPath(drawingPath); // 그리기가 종료됐을때 지도에 표시할 다각형의 좌표에 클릭 위치를 추가합니다\n        // 다각형의 좌표 배열을 얻어옵니다\n\n        var path = polygon.getPath(); // 좌표 배열에 클릭한 위치를 추가하고\n\n        path.push(clickPosition); // 다시 다각형 좌표 배열을 설정합니다\n\n        polygon.setPath(path);\n      }\n    }); // 지도에 마우스무브 이벤트를 등록합니다\n    // 다각형을 그리고있는 상태에서 마우스무브 이벤트가 발생하면 그려질 다각형의 위치를 동적으로 보여주도록 합니다\n\n    kakao.maps.event.addListener(map, 'mousemove', function (mouseEvent) {\n      // 지도 마우스무브 이벤트가 발생했는데 다각형을 그리고있는 상태이면\n      if (drawingFlag) {\n        // 마우스 커서의 현재 위치를 얻어옵니다\n        var mousePosition = mouseEvent.latLng; // 그려지고있는 다각형의 좌표배열을 얻어옵니다\n\n        var path = drawingPolygon.getPath(); // 마우스무브로 추가된 마지막 좌표를 제거합니다\n\n        if (path.length > 1) {\n          path.pop();\n        } // 마우스의 커서 위치를 좌표 배열에 추가합니다\n\n\n        path.push(mousePosition); // 그려지고 있는 다각형의 좌표를 다시 설정합니다\n\n        drawingPolygon.setPath(path);\n      }\n    }); // 지도에 마우스 오른쪽 클릭 이벤트를 등록합니다\n    // 다각형을 그리고있는 상태에서 마우스 오른쪽 클릭 이벤트가 발생하면 그리기를 종료합니다\n\n    kakao.maps.event.addListener(map, 'rightclick', function (mouseEvent) {\n      // 지도 오른쪽 클릭 이벤트가 발생했는데 다각형을 그리고있는 상태이면\n      if (drawingFlag) {\n        // 그려지고있는 다각형을  지도에서 제거합니다\n        drawingPolygon.setMap(null);\n        drawingPolygon = null; // 클릭된 죄표로 그릴 다각형의 좌표배열을 얻어옵니다\n\n        var path = polygon.getPath(); // 다각형을 구성하는 좌표의 개수가 3개 이상이면\n\n        if (path.length > 2) {\n          // 지도에 다각형을 표시합니다\n          polygon.setMap(map);\n          var area = Math.round(polygon.getArea()),\n              // 다각형의 총면적을 계산합니다\n          content = '<div class=\"info\">총면적 <span class=\"number\"> ' + area + '</span> m<sup>2</sup></div>'; // 커스텀오버레이에 추가될 내용입니다\n\n          setGetarea(area); // 면적정보를 지도에 표시합니다\n\n          areaOverlay = new kakao.maps.CustomOverlay({\n            map: map,\n            // 커스텀오버레이를 표시할 지도입니다\n            content: content,\n            // 커스텀오버레이에 표시할 내용입니다\n            xAnchor: 0,\n            yAnchor: 0,\n            position: path[path.length - 1] // 커스텀오버레이를 표시할 위치입니다. 위치는 다각형의 마지막 좌표로 설정합니다\n\n          });\n        } else {\n          // 다각형을 구성하는 좌표가 2개 이하이면 다각형을 지도에 표시하지 않습니다\n          polygon = null;\n        } // 상태를 false로, 그리지 않고 있는 상태로 변경합니다\n\n\n        drawingFlag = false;\n      }\n    });\n    marker.setMap(map);\n  }, [searchPlace]);\n  useEffect(function () {\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        lat: getlat,\n        lon: getlon,\n        area: getarea\n      })\n    };\n    fetch('http://127.0.0.1:5000/map', requestOptions).then(function (response) {\n      response.json().then(function (data) {\n        setPvdata0(data[0]);\n        setPvdata1(data[1]);\n        setPvdata2(data[2]);\n        setPvdata3(data[3]);\n        setPvdata4(data[4]);\n        setPvdata5(data[5]);\n        setPvdata6(data[6]);\n        setPvdata7(data[7]);\n        setPvdata8(data[8]);\n        setPvdata9(data[9]);\n        setPvdata10(data[10]);\n        setPvdata11(data[11]);\n        setPvdata12(data[12]);\n        setPvdata13(data[13]);\n        setPvdata14(data[14]);\n        setPvdata15(data[15]);\n        setPvdata16(data[16]);\n        setPvdata17(data[17]);\n        setPvdata18(data[18]);\n        setPvdata19(data[19]);\n        setPvdata20(data[20]);\n        setPvdata21(data[21]);\n        setPvdata22(data[22]);\n        setPvdata23(data[23]); // json형식 데이터에 접근할 때는 forEach를 사용한다.\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myMap\",\n    style: {\n      width: '500px',\n      height: '500px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    title: '오늘 pv 예측량',\n    zero: pvdata0,\n    one: pvdata1,\n    two: pvdata2,\n    three: pvdata3,\n    four: pvdata4,\n    five: pvdata5,\n    six: pvdata6,\n    seven: pvdata7,\n    eight: pvdata8,\n    nine: pvdata9,\n    ten: pvdata10,\n    eleven: pvdata11,\n    twelve: pvdata12,\n    thirteen: pvdata13,\n    fourteen: pvdata14,\n    fifteen: pvdata15,\n    sixteen: pvdata16,\n    seventeen: pvdata17,\n    eighteen: pvdata18,\n    nineteen: pvdata19,\n    twenty: pvdata20,\n    twentyOne: pvdata21,\n    twentyTwo: pvdata22,\n    twentyTree: pvdata23,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default MapContainer;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/dashboards/Analytics/MapContainer.js"],"names":["React","useState","useEffect","LineChart","window","kakao","MapContainer","searchPlace","pvdata0","setPvdata0","pvdata1","setPvdata1","pvdata2","setPvdata2","pvdata3","setPvdata3","pvdata4","setPvdata4","pvdata5","setPvdata5","pvdata6","setPvdata6","pvdata7","setPvdata7","pvdata8","setPvdata8","pvdata9","setPvdata9","pvdata10","setPvdata10","pvdata11","setPvdata11","pvdata12","setPvdata12","pvdata13","setPvdata13","pvdata14","setPvdata14","pvdata15","setPvdata15","pvdata16","setPvdata16","pvdata17","setPvdata17","pvdata18","setPvdata18","pvdata19","setPvdata19","pvdata20","setPvdata20","pvdata21","setPvdata21","pvdata22","setPvdata22","pvdata23","setPvdata23","getlat","setGetlat","getlon","setGetlon","getarea","setGetarea","container","document","getElementById","options","center","maps","LatLng","level","map","Map","markerPosition","marker","Marker","position","ps","services","Places","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","drawingFlag","drawingPolygon","polygon","areaOverlay","keywordSearch","placesSearchCB","data","status","pagination","Status","OK","bounds","LatLngBounds","i","length","extend","y","x","setBounds","console","log","displayMarker","place","event","addListener","mouseEvent","clickPosition","latLng","setMap","Polygon","path","strokeWeight","strokeColor","strokeOpacity","strokeStyle","fillColor","fillOpacity","drawingPath","getPath","push","setPath","mousePosition","pop","area","Math","round","getArea","content","CustomOverlay","xAnchor","yAnchor","requestOptions","method","headers","body","JSON","stringify","lat","lon","fetch","then","response","json","width","height"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport LineChart from \"./LineChart\";\r\nconst { kakao } = window;\r\n\r\nconst MapContainer = ({ searchPlace }) => {\r\n    const [pvdata0, setPvdata0] = useState(0)\r\n    const [pvdata1, setPvdata1] = useState(0)\r\n    const [pvdata2, setPvdata2] = useState(0)\r\n    const [pvdata3, setPvdata3] = useState(0)\r\n    const [pvdata4, setPvdata4] = useState(0)\r\n    const [pvdata5, setPvdata5] = useState(0)\r\n    const [pvdata6, setPvdata6] = useState(0)\r\n    const [pvdata7, setPvdata7] = useState(0)\r\n    const [pvdata8, setPvdata8] = useState(0)\r\n    const [pvdata9, setPvdata9] = useState(0)\r\n    const [pvdata10, setPvdata10] = useState(0)\r\n    const [pvdata11, setPvdata11] = useState(0)\r\n    const [pvdata12, setPvdata12] = useState(0)\r\n    const [pvdata13, setPvdata13] = useState(0)\r\n    const [pvdata14, setPvdata14] = useState(0)\r\n    const [pvdata15, setPvdata15] = useState(0)\r\n    const [pvdata16, setPvdata16] = useState(0)\r\n    const [pvdata17, setPvdata17] = useState(0)\r\n    const [pvdata18, setPvdata18] = useState(0)\r\n    const [pvdata19, setPvdata19] = useState(0)\r\n    const [pvdata20, setPvdata20] = useState(0)\r\n    const [pvdata21, setPvdata21] = useState(0)\r\n    const [pvdata22, setPvdata22] = useState(0)\r\n    const [pvdata23, setPvdata23] = useState(0)\r\n    const [getlat,setGetlat] = useState(0)\r\n    const [getlon,setGetlon] = useState(0)\r\n    const [getarea,setGetarea] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"myMap\");\r\n    const options = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      level: 3,\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n    var markerPosition  = new kakao.maps.LatLng(37.365264512305174, 127.10676860117488);\r\n    var marker = new kakao.maps.Marker({\r\n      position: markerPosition\r\n  });\r\n\r\n    const ps = new kakao.maps.services.Places();\r\n    var mapTypeControl = new kakao.maps.MapTypeControl();\r\n\r\n    // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\r\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\r\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n\r\n    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\r\n    var zoomControl = new kakao.maps.ZoomControl();\r\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n\r\n    var drawingFlag = false; // 다각형이 그려지고 있는 상태를 가지고 있을 변수입니다\r\n    var drawingPolygon; // 그려지고 있는 다각형을 표시할 다각형 객체입니다\r\n    var polygon; // 그리기가 종료됐을 때 지도에 표시할 다각형 객체입니다\r\n    var areaOverlay; // 다각형의 면적정보를 표시할 커스텀오버레이 입니다\r\n\r\n    ps.keywordSearch(searchPlace, placesSearchCB);\r\n\r\n    function placesSearchCB(data, status, pagination) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        let bounds = new kakao.maps.LatLngBounds();\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            //displayMarker(data[i]);\r\n            bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n        }\r\n        map.setBounds(bounds);\r\n\r\n      }\r\n      setGetlat(data[0].y);\r\n      setGetlon(data[0].x);\r\n      debugger;\r\n      console.log(getlat);\r\n\r\n    }\r\n\r\n    function displayMarker(place) {\r\n      let marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: new kakao.maps.LatLng(place.y, place.x),\r\n      });\r\n    }\r\n    kakao.maps.event.addListener(map, 'click', function(mouseEvent) {\r\n\r\n        // 마우스로 클릭한 위치입니다\r\n        var clickPosition = mouseEvent.latLng;\r\n\r\n        // 지도 클릭이벤트가 발생했는데 다각형이 그려지고 있는 상태가 아니면\r\n        if (!drawingFlag) {\r\n\r\n            // 상태를 true로, 다각형을 그리고 있는 상태로 변경합니다\r\n            drawingFlag = true;\r\n\r\n            // 지도 위에 다각형이 표시되고 있다면 지도에서 제거합니다\r\n            if (polygon) {\r\n                polygon.setMap(null);\r\n                polygon = null;\r\n            }\r\n\r\n            // 지도 위에 면적정보 커스텀오버레이가 표시되고 있다면 지도에서 제거합니다\r\n            if (areaOverlay) {\r\n                areaOverlay.setMap(null);\r\n                areaOverlay = null;\r\n            }\r\n\r\n            // 그려지고 있는 다각형을 표시할 다각형을 생성하고 지도에 표시합니다\r\n            drawingPolygon = new kakao.maps.Polygon({\r\n                map: map, // 다각형을 표시할 지도입니다\r\n                path: [clickPosition], // 다각형을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\r\n                strokeWeight: 3, // 선의 두께입니다\r\n                strokeColor: '#00a0e9', // 선의 색깔입니다\r\n                strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid', // 선의 스타일입니다\r\n                fillColor: '#00a0e9', // 채우기 색깔입니다\r\n                fillOpacity: 0.2 // 채우기 불투명도입니다\r\n            });\r\n\r\n            // 그리기가 종료됐을때 지도에 표시할 다각형을 생성합니다\r\n            polygon = new kakao.maps.Polygon({\r\n                path: [clickPosition], // 다각형을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\r\n                strokeWeight: 3, // 선의 두께입니다\r\n                strokeColor: '#00a0e9', // 선의 색깔입니다\r\n                strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid', // 선의 스타일입니다\r\n                fillColor: '#00a0e9', // 채우기 색깔입니다\r\n                fillOpacity: 0.2 // 채우기 불투명도입니다\r\n            });\r\n\r\n\r\n        } else { // 다각형이 그려지고 있는 상태이면\r\n\r\n            // 그려지고 있는 다각형의 좌표에 클릭위치를 추가합니다\r\n            // 다각형의 좌표 배열을 얻어옵니다\r\n            var drawingPath = drawingPolygon.getPath();\r\n\r\n            // 좌표 배열에 클릭한 위치를 추가하고\r\n            drawingPath.push(clickPosition);\r\n\r\n            // 다시 다각형 좌표 배열을 설정합니다\r\n            drawingPolygon.setPath(drawingPath);\r\n\r\n\r\n            // 그리기가 종료됐을때 지도에 표시할 다각형의 좌표에 클릭 위치를 추가합니다\r\n            // 다각형의 좌표 배열을 얻어옵니다\r\n            var path = polygon.getPath();\r\n\r\n            // 좌표 배열에 클릭한 위치를 추가하고\r\n            path.push(clickPosition);\r\n\r\n            // 다시 다각형 좌표 배열을 설정합니다\r\n            polygon.setPath(path);\r\n        }\r\n\r\n    });\r\n\r\n    // 지도에 마우스무브 이벤트를 등록합니다\r\n    // 다각형을 그리고있는 상태에서 마우스무브 이벤트가 발생하면 그려질 다각형의 위치를 동적으로 보여주도록 합니다\r\n    kakao.maps.event.addListener(map, 'mousemove', function (mouseEvent) {\r\n\r\n        // 지도 마우스무브 이벤트가 발생했는데 다각형을 그리고있는 상태이면\r\n        if (drawingFlag){\r\n\r\n            // 마우스 커서의 현재 위치를 얻어옵니다\r\n            var mousePosition = mouseEvent.latLng;\r\n\r\n            // 그려지고있는 다각형의 좌표배열을 얻어옵니다\r\n            var path = drawingPolygon.getPath();\r\n\r\n            // 마우스무브로 추가된 마지막 좌표를 제거합니다\r\n            if (path.length > 1) {\r\n                path.pop();\r\n            }\r\n\r\n            // 마우스의 커서 위치를 좌표 배열에 추가합니다\r\n            path.push(mousePosition);\r\n\r\n            // 그려지고 있는 다각형의 좌표를 다시 설정합니다\r\n            drawingPolygon.setPath(path);\r\n        }\r\n    });\r\n\r\n    // 지도에 마우스 오른쪽 클릭 이벤트를 등록합니다\r\n    // 다각형을 그리고있는 상태에서 마우스 오른쪽 클릭 이벤트가 발생하면 그리기를 종료합니다\r\n    kakao.maps.event.addListener(map, 'rightclick', function (mouseEvent) {\r\n\r\n        // 지도 오른쪽 클릭 이벤트가 발생했는데 다각형을 그리고있는 상태이면\r\n        if (drawingFlag) {\r\n\r\n            // 그려지고있는 다각형을  지도에서 제거합니다\r\n            drawingPolygon.setMap(null);\r\n            drawingPolygon = null;\r\n\r\n            // 클릭된 죄표로 그릴 다각형의 좌표배열을 얻어옵니다\r\n            var path = polygon.getPath();\r\n\r\n            // 다각형을 구성하는 좌표의 개수가 3개 이상이면\r\n            if (path.length > 2) {\r\n\r\n                // 지도에 다각형을 표시합니다\r\n                polygon.setMap(map);\r\n\r\n                var area = Math.round(polygon.getArea()), // 다각형의 총면적을 계산합니다\r\n                    content = '<div class=\"info\">총면적 <span class=\"number\"> ' + area + '</span> m<sup>2</sup></div>'; // 커스텀오버레이에 추가될 내용입니다\r\n                setGetarea(area);\r\n                // 면적정보를 지도에 표시합니다\r\n                areaOverlay = new kakao.maps.CustomOverlay({\r\n                    map: map, // 커스텀오버레이를 표시할 지도입니다\r\n                    content: content,  // 커스텀오버레이에 표시할 내용입니다\r\n                    xAnchor: 0,\r\n                    yAnchor: 0,\r\n                    position: path[path.length-1]  // 커스텀오버레이를 표시할 위치입니다. 위치는 다각형의 마지막 좌표로 설정합니다\r\n                });\r\n\r\n\r\n            } else {\r\n\r\n                // 다각형을 구성하는 좌표가 2개 이하이면 다각형을 지도에 표시하지 않습니다\r\n                polygon = null;\r\n            }\r\n\r\n            // 상태를 false로, 그리지 않고 있는 상태로 변경합니다\r\n            drawingFlag = false;\r\n        }\r\n    });\r\n  marker.setMap(map);\r\n\r\n  }, [searchPlace]);\r\n\r\n    useEffect(()=>{\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({lat:getlat, lon:getlon, area:getarea} )\r\n        };\r\n        fetch('http://127.0.0.1:5000/map', requestOptions)\r\n            .then((response) => {\r\n                response.json().then(function(data) {\r\n                    setPvdata0(data[0])\r\n                    setPvdata1(data[1])\r\n                    setPvdata2(data[2])\r\n                    setPvdata3(data[3])\r\n                    setPvdata4(data[4])\r\n                    setPvdata5(data[5])\r\n                    setPvdata6(data[6])\r\n                    setPvdata7(data[7])\r\n                    setPvdata8(data[8])\r\n                    setPvdata9(data[9])\r\n                    setPvdata10(data[10])\r\n                    setPvdata11(data[11])\r\n                    setPvdata12(data[12])\r\n                    setPvdata13(data[13])\r\n                    setPvdata14(data[14])\r\n                    setPvdata15(data[15])\r\n                    setPvdata16(data[16])\r\n                    setPvdata17(data[17])\r\n                    setPvdata18(data[18])\r\n                    setPvdata19(data[19])\r\n                    setPvdata20(data[20])\r\n                    setPvdata21(data[21])\r\n                    setPvdata22(data[22])\r\n                    setPvdata23(data[23])\r\n                // json형식 데이터에 접근할 때는 forEach를 사용한다.\r\n            })\r\n        })\r\n    },[]);\r\n\r\n    return (\r\n        <div>\r\n            <div id='myMap' style={{\r\n                width: '500px',\r\n                height: '500px'\r\n            }}></div>\r\n            <div>\r\n                <LineChart title = {'오늘 pv 예측량'}\r\n                                   zero = {pvdata0} one = {pvdata1} two = {pvdata2} three = {pvdata3} four = {pvdata4} five = {pvdata5}\r\n                                   six = {pvdata6} seven = {pvdata7} eight = {pvdata8} nine = {pvdata9} ten = {pvdata10} eleven = {pvdata11} twelve = {pvdata12}\r\n                                   thirteen = {pvdata13} fourteen = {pvdata14} fifteen = {pvdata15} sixteen = {pvdata16} seventeen = {pvdata17} eighteen = {pvdata18} nineteen = {pvdata19}\r\n                                   twenty = {pvdata20} twentyOne = {pvdata21} twentyTwo = {pvdata22} twentyTree = {pvdata23}\r\n                        />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapContainer;"]},"metadata":{},"sourceType":"module"}