{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\dashboards\\\\CRM\\\\KakaoMap.js\";\n\n/*global kakao*/\nimport React, { useEffect } from 'react';\n\nvar Location = function Location() {\n  useEffect(function () {\n    var container = document.getElementById('map');\n    var options = {\n      center: new kakao.maps.LatLng(37.365264512305174, 127.10676860117488),\n      level: 3\n    };\n    var map = new kakao.maps.Map(container, options);\n    var markerPosition = new kakao.maps.LatLng(37.365264512305174, 127.10676860117488);\n    var marker = new kakao.maps.Marker({\n      position: markerPosition\n    }); // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\n\n    var mapTypeControl = new kakao.maps.MapTypeControl(); // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\n\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT); // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n\n    var zoomControl = new kakao.maps.ZoomControl();\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n    var drawingFlag = false; // 다각형이 그려지고 있는 상태를 가지고 있을 변수입니다\n\n    var drawingPolygon; // 그려지고 있는 다각형을 표시할 다각형 객체입니다\n\n    var polygon; // 그리기가 종료됐을 때 지도에 표시할 다각형 객체입니다\n\n    var areaOverlay; // 다각형의 면적정보를 표시할 커스텀오버레이 입니다\n    // 마우스 클릭 이벤트가 발생하고나면 drawingFlag가 그려지고 있는 상태인 ture 값으로 바뀝니다\n    // 그려지고 있는 상태인 경우 drawingPolygon 으로 그려지고 있는 다각형을 지도에 표시합니다\n    // 마우스 오른쪽 클릭 이벤트가 발생하면 drawingFlag가 그리기가 종료된 상태인 false 값으로 바뀌고\n    // polygon 으로 다 그려진 다각형을 지도에 표시합니다\n    // 지도에 마우스 클릭 이벤트를 등록합니다\n    // 지도를 클릭하면 다각형 그리기가 시작됩니다 그려진 다각형이 있으면 지우고 다시 그립니다\n\n    kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\n      // 마우스로 클릭한 위치입니다\n      var clickPosition = mouseEvent.latLng; // 지도 클릭이벤트가 발생했는데 다각형이 그려지고 있는 상태가 아니면\n\n      if (!drawingFlag) {\n        // 상태를 true로, 다각형을 그리고 있는 상태로 변경합니다\n        drawingFlag = true; // 지도 위에 다각형이 표시되고 있다면 지도에서 제거합니다\n\n        if (polygon) {\n          polygon.setMap(null);\n          polygon = null;\n        } // 지도 위에 면적정보 커스텀오버레이가 표시되고 있다면 지도에서 제거합니다\n\n\n        if (areaOverlay) {\n          areaOverlay.setMap(null);\n          areaOverlay = null;\n        } // 그려지고 있는 다각형을 표시할 다각형을 생성하고 지도에 표시합니다\n\n\n        drawingPolygon = new kakao.maps.Polygon({\n          map: map,\n          // 다각형을 표시할 지도입니다\n          path: [clickPosition],\n          // 다각형을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\n          strokeWeight: 3,\n          // 선의 두께입니다\n          strokeColor: '#00a0e9',\n          // 선의 색깔입니다\n          strokeOpacity: 1,\n          // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\n          strokeStyle: 'solid',\n          // 선의 스타일입니다\n          fillColor: '#00a0e9',\n          // 채우기 색깔입니다\n          fillOpacity: 0.2 // 채우기 불투명도입니다\n\n        }); // 그리기가 종료됐을때 지도에 표시할 다각형을 생성합니다\n\n        polygon = new kakao.maps.Polygon({\n          path: [clickPosition],\n          // 다각형을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\n          strokeWeight: 3,\n          // 선의 두께입니다\n          strokeColor: '#00a0e9',\n          // 선의 색깔입니다\n          strokeOpacity: 1,\n          // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\n          strokeStyle: 'solid',\n          // 선의 스타일입니다\n          fillColor: '#00a0e9',\n          // 채우기 색깔입니다\n          fillOpacity: 0.2 // 채우기 불투명도입니다\n\n        });\n      } else {\n        // 다각형이 그려지고 있는 상태이면\n        // 그려지고 있는 다각형의 좌표에 클릭위치를 추가합니다\n        // 다각형의 좌표 배열을 얻어옵니다\n        var drawingPath = drawingPolygon.getPath(); // 좌표 배열에 클릭한 위치를 추가하고\n\n        drawingPath.push(clickPosition); // 다시 다각형 좌표 배열을 설정합니다\n\n        drawingPolygon.setPath(drawingPath); // 그리기가 종료됐을때 지도에 표시할 다각형의 좌표에 클릭 위치를 추가합니다\n        // 다각형의 좌표 배열을 얻어옵니다\n\n        var path = polygon.getPath(); // 좌표 배열에 클릭한 위치를 추가하고\n\n        path.push(clickPosition); // 다시 다각형 좌표 배열을 설정합니다\n\n        polygon.setPath(path);\n      }\n    }); // 지도에 마우스무브 이벤트를 등록합니다\n    // 다각형을 그리고있는 상태에서 마우스무브 이벤트가 발생하면 그려질 다각형의 위치를 동적으로 보여주도록 합니다\n\n    kakao.maps.event.addListener(map, 'mousemove', function (mouseEvent) {\n      // 지도 마우스무브 이벤트가 발생했는데 다각형을 그리고있는 상태이면\n      if (drawingFlag) {\n        // 마우스 커서의 현재 위치를 얻어옵니다\n        var mousePosition = mouseEvent.latLng; // 그려지고있는 다각형의 좌표배열을 얻어옵니다\n\n        var path = drawingPolygon.getPath(); // 마우스무브로 추가된 마지막 좌표를 제거합니다\n\n        if (path.length > 1) {\n          path.pop();\n        } // 마우스의 커서 위치를 좌표 배열에 추가합니다\n\n\n        path.push(mousePosition); // 그려지고 있는 다각형의 좌표를 다시 설정합니다\n\n        drawingPolygon.setPath(path);\n      }\n    }); // 지도에 마우스 오른쪽 클릭 이벤트를 등록합니다\n    // 다각형을 그리고있는 상태에서 마우스 오른쪽 클릭 이벤트가 발생하면 그리기를 종료합니다\n\n    kakao.maps.event.addListener(map, 'rightclick', function (mouseEvent) {\n      // 지도 오른쪽 클릭 이벤트가 발생했는데 다각형을 그리고있는 상태이면\n      if (drawingFlag) {\n        // 그려지고있는 다각형을  지도에서 제거합니다\n        drawingPolygon.setMap(null);\n        drawingPolygon = null; // 클릭된 죄표로 그릴 다각형의 좌표배열을 얻어옵니다\n\n        var path = polygon.getPath(); // 다각형을 구성하는 좌표의 개수가 3개 이상이면\n\n        if (path.length > 2) {\n          // 지도에 다각형을 표시합니다\n          polygon.setMap(map);\n          var area = Math.round(polygon.getArea()),\n              // 다각형의 총면적을 계산합니다\n          content = '<div class=\"info\">총면적 <span class=\"number\"> ' + area + '</span> m<sup>2</sup></div>'; // 커스텀오버레이에 추가될 내용입니다\n          // 면적정보를 지도에 표시합니다\n\n          areaOverlay = new kakao.maps.CustomOverlay({\n            map: map,\n            // 커스텀오버레이를 표시할 지도입니다\n            content: content,\n            // 커스텀오버레이에 표시할 내용입니다\n            xAnchor: 0,\n            yAnchor: 0,\n            position: path[path.length - 1] // 커스텀오버레이를 표시할 위치입니다. 위치는 다각형의 마지막 좌표로 설정합니다\n\n          });\n        } else {\n          // 다각형을 구성하는 좌표가 2개 이하이면 다각형을 지도에 표시하지 않습니다\n          polygon = null;\n        } // 상태를 false로, 그리지 않고 있는 상태로 변경합니다\n\n\n        drawingFlag = false;\n      }\n    });\n    marker.setMap(map);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"500px\",\n      height: \"400px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Location;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/dashboards/CRM/KakaoMap.js"],"names":["React","useEffect","Location","container","document","getElementById","options","center","kakao","maps","LatLng","level","map","Map","markerPosition","marker","Marker","position","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","drawingFlag","drawingPolygon","polygon","areaOverlay","event","addListener","mouseEvent","clickPosition","latLng","setMap","Polygon","path","strokeWeight","strokeColor","strokeOpacity","strokeStyle","fillColor","fillOpacity","drawingPath","getPath","push","setPath","mousePosition","length","pop","area","Math","round","getArea","content","CustomOverlay","xAnchor","yAnchor","width","height"],"mappings":"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","sourcesContent":["/*global kakao*/\r\nimport React, { useEffect } from 'react'\r\n\r\n\r\n\r\nconst Location=()=>{\r\n\r\n  useEffect(()=>{\r\n    var container = document.getElementById('map');\r\n    var options = {\r\n      center: new kakao.maps.LatLng(37.365264512305174, 127.10676860117488),\r\n      level: 3\r\n    };\r\n\r\n    var map = new kakao.maps.Map(container, options);\r\n    var markerPosition  = new kakao.maps.LatLng(37.365264512305174, 127.10676860117488);\r\n    var marker = new kakao.maps.Marker({\r\n      position: markerPosition\r\n  });\r\n\r\n\r\n    // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\r\n    var mapTypeControl = new kakao.maps.MapTypeControl();\r\n\r\n    // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\r\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\r\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n\r\n    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\r\n    var zoomControl = new kakao.maps.ZoomControl();\r\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n\r\n    var drawingFlag = false; // 다각형이 그려지고 있는 상태를 가지고 있을 변수입니다\r\n    var drawingPolygon; // 그려지고 있는 다각형을 표시할 다각형 객체입니다\r\n    var polygon; // 그리기가 종료됐을 때 지도에 표시할 다각형 객체입니다\r\n    var areaOverlay; // 다각형의 면적정보를 표시할 커스텀오버레이 입니다\r\n\r\n    // 마우스 클릭 이벤트가 발생하고나면 drawingFlag가 그려지고 있는 상태인 ture 값으로 바뀝니다\r\n    // 그려지고 있는 상태인 경우 drawingPolygon 으로 그려지고 있는 다각형을 지도에 표시합니다\r\n    // 마우스 오른쪽 클릭 이벤트가 발생하면 drawingFlag가 그리기가 종료된 상태인 false 값으로 바뀌고\r\n    // polygon 으로 다 그려진 다각형을 지도에 표시합니다\r\n\r\n\r\n    // 지도에 마우스 클릭 이벤트를 등록합니다\r\n    // 지도를 클릭하면 다각형 그리기가 시작됩니다 그려진 다각형이 있으면 지우고 다시 그립니다\r\n    kakao.maps.event.addListener(map, 'click', function(mouseEvent) {\r\n\r\n        // 마우스로 클릭한 위치입니다\r\n        var clickPosition = mouseEvent.latLng;\r\n\r\n        // 지도 클릭이벤트가 발생했는데 다각형이 그려지고 있는 상태가 아니면\r\n        if (!drawingFlag) {\r\n\r\n            // 상태를 true로, 다각형을 그리고 있는 상태로 변경합니다\r\n            drawingFlag = true;\r\n\r\n            // 지도 위에 다각형이 표시되고 있다면 지도에서 제거합니다\r\n            if (polygon) {\r\n                polygon.setMap(null);\r\n                polygon = null;\r\n            }\r\n\r\n            // 지도 위에 면적정보 커스텀오버레이가 표시되고 있다면 지도에서 제거합니다\r\n            if (areaOverlay) {\r\n                areaOverlay.setMap(null);\r\n                areaOverlay = null;\r\n            }\r\n\r\n            // 그려지고 있는 다각형을 표시할 다각형을 생성하고 지도에 표시합니다\r\n            drawingPolygon = new kakao.maps.Polygon({\r\n                map: map, // 다각형을 표시할 지도입니다\r\n                path: [clickPosition], // 다각형을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\r\n                strokeWeight: 3, // 선의 두께입니다\r\n                strokeColor: '#00a0e9', // 선의 색깔입니다\r\n                strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid', // 선의 스타일입니다\r\n                fillColor: '#00a0e9', // 채우기 색깔입니다\r\n                fillOpacity: 0.2 // 채우기 불투명도입니다\r\n            });\r\n\r\n            // 그리기가 종료됐을때 지도에 표시할 다각형을 생성합니다\r\n            polygon = new kakao.maps.Polygon({\r\n                path: [clickPosition], // 다각형을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\r\n                strokeWeight: 3, // 선의 두께입니다\r\n                strokeColor: '#00a0e9', // 선의 색깔입니다\r\n                strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\r\n                strokeStyle: 'solid', // 선의 스타일입니다\r\n                fillColor: '#00a0e9', // 채우기 색깔입니다\r\n                fillOpacity: 0.2 // 채우기 불투명도입니다\r\n            });\r\n\r\n\r\n        } else { // 다각형이 그려지고 있는 상태이면\r\n\r\n            // 그려지고 있는 다각형의 좌표에 클릭위치를 추가합니다\r\n            // 다각형의 좌표 배열을 얻어옵니다\r\n            var drawingPath = drawingPolygon.getPath();\r\n\r\n            // 좌표 배열에 클릭한 위치를 추가하고\r\n            drawingPath.push(clickPosition);\r\n\r\n            // 다시 다각형 좌표 배열을 설정합니다\r\n            drawingPolygon.setPath(drawingPath);\r\n\r\n\r\n            // 그리기가 종료됐을때 지도에 표시할 다각형의 좌표에 클릭 위치를 추가합니다\r\n            // 다각형의 좌표 배열을 얻어옵니다\r\n            var path = polygon.getPath();\r\n\r\n            // 좌표 배열에 클릭한 위치를 추가하고\r\n            path.push(clickPosition);\r\n\r\n            // 다시 다각형 좌표 배열을 설정합니다\r\n            polygon.setPath(path);\r\n        }\r\n\r\n    });\r\n\r\n    // 지도에 마우스무브 이벤트를 등록합니다\r\n    // 다각형을 그리고있는 상태에서 마우스무브 이벤트가 발생하면 그려질 다각형의 위치를 동적으로 보여주도록 합니다\r\n    kakao.maps.event.addListener(map, 'mousemove', function (mouseEvent) {\r\n\r\n        // 지도 마우스무브 이벤트가 발생했는데 다각형을 그리고있는 상태이면\r\n        if (drawingFlag){\r\n\r\n            // 마우스 커서의 현재 위치를 얻어옵니다\r\n            var mousePosition = mouseEvent.latLng;\r\n\r\n            // 그려지고있는 다각형의 좌표배열을 얻어옵니다\r\n            var path = drawingPolygon.getPath();\r\n\r\n            // 마우스무브로 추가된 마지막 좌표를 제거합니다\r\n            if (path.length > 1) {\r\n                path.pop();\r\n            }\r\n\r\n            // 마우스의 커서 위치를 좌표 배열에 추가합니다\r\n            path.push(mousePosition);\r\n\r\n            // 그려지고 있는 다각형의 좌표를 다시 설정합니다\r\n            drawingPolygon.setPath(path);\r\n        }\r\n    });\r\n\r\n    // 지도에 마우스 오른쪽 클릭 이벤트를 등록합니다\r\n    // 다각형을 그리고있는 상태에서 마우스 오른쪽 클릭 이벤트가 발생하면 그리기를 종료합니다\r\n    kakao.maps.event.addListener(map, 'rightclick', function (mouseEvent) {\r\n\r\n        // 지도 오른쪽 클릭 이벤트가 발생했는데 다각형을 그리고있는 상태이면\r\n        if (drawingFlag) {\r\n\r\n            // 그려지고있는 다각형을  지도에서 제거합니다\r\n            drawingPolygon.setMap(null);\r\n            drawingPolygon = null;\r\n\r\n            // 클릭된 죄표로 그릴 다각형의 좌표배열을 얻어옵니다\r\n            var path = polygon.getPath();\r\n\r\n            // 다각형을 구성하는 좌표의 개수가 3개 이상이면\r\n            if (path.length > 2) {\r\n\r\n                // 지도에 다각형을 표시합니다\r\n                polygon.setMap(map);\r\n\r\n                var area = Math.round(polygon.getArea()), // 다각형의 총면적을 계산합니다\r\n                    content = '<div class=\"info\">총면적 <span class=\"number\"> ' + area + '</span> m<sup>2</sup></div>'; // 커스텀오버레이에 추가될 내용입니다\r\n\r\n                // 면적정보를 지도에 표시합니다\r\n                areaOverlay = new kakao.maps.CustomOverlay({\r\n                    map: map, // 커스텀오버레이를 표시할 지도입니다\r\n                    content: content,  // 커스텀오버레이에 표시할 내용입니다\r\n                    xAnchor: 0,\r\n                    yAnchor: 0,\r\n                    position: path[path.length-1]  // 커스텀오버레이를 표시할 위치입니다. 위치는 다각형의 마지막 좌표로 설정합니다\r\n                });\r\n\r\n\r\n            } else {\r\n\r\n                // 다각형을 구성하는 좌표가 2개 이하이면 다각형을 지도에 표시하지 않습니다\r\n                polygon = null;\r\n            }\r\n\r\n            // 상태를 false로, 그리지 않고 있는 상태로 변경합니다\r\n            drawingFlag = false;\r\n        }\r\n    });\r\n  marker.setMap(map);\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div id=\"map\" style={{width:\"500px\", height:\"400px\"}}></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Location;"]},"metadata":{},"sourceType":"module"}