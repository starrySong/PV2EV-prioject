{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\dashboards\\\\Analytics\\\\MapContainer.js\";\n\nimport React, { useEffect } from 'react';\nvar _window = window,\n    kakao = _window.kakao;\n\nvar MapContainer = function MapContainer(_ref) {\n  var searchPlace = _ref.searchPlace;\n  useEffect(function () {\n    var container = document.getElementById(\"myMap\");\n    var options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3\n    };\n    var map = new kakao.maps.Map(container, options);\n    var ps = new kakao.maps.services.Places();\n    var mapTypeControl = new kakao.maps.MapTypeControl(); // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\n\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT); // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n\n    var zoomControl = new kakao.maps.ZoomControl();\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n    var drawingFlag = false; // 다각형이 그려지고 있는 상태를 가지고 있을 변수입니다\n\n    var drawingPolygon; // 그려지고 있는 다각형을 표시할 다각형 객체입니다\n\n    var polygon; // 그리기가 종료됐을 때 지도에 표시할 다각형 객체입니다\n\n    var areaOverlay; // 다각형의 면적정보를 표시할 커스텀오버레이 입니다\n\n    ps.keywordSearch(searchPlace, placesSearchCB);\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        var bounds = new kakao.maps.LatLngBounds();\n\n        for (var i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        }\n\n        map.setBounds(bounds);\n      }\n    }\n\n    function displayMarker(place) {\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x)\n      });\n    }\n  }, [searchPlace]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myMap\",\n    style: {\n      width: '500px',\n      height: '500px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default MapContainer;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/dashboards/Analytics/MapContainer.js"],"names":["React","useEffect","window","kakao","MapContainer","searchPlace","container","document","getElementById","options","center","maps","LatLng","level","map","Map","ps","services","Places","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","drawingFlag","drawingPolygon","polygon","areaOverlay","keywordSearch","placesSearchCB","data","status","pagination","Status","OK","bounds","LatLngBounds","i","length","displayMarker","extend","y","x","setBounds","place","marker","Marker","position","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nconst { kakao } = window;\r\n\r\nconst MapContainer = ({ searchPlace }) => {\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"myMap\");\r\n    const options = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      level: 3,\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n\r\n    const ps = new kakao.maps.services.Places();\r\n    var mapTypeControl = new kakao.maps.MapTypeControl();\r\n\r\n    // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\r\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\r\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n\r\n    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\r\n    var zoomControl = new kakao.maps.ZoomControl();\r\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n\r\n    var drawingFlag = false; // 다각형이 그려지고 있는 상태를 가지고 있을 변수입니다\r\n    var drawingPolygon; // 그려지고 있는 다각형을 표시할 다각형 객체입니다\r\n    var polygon; // 그리기가 종료됐을 때 지도에 표시할 다각형 객체입니다\r\n    var areaOverlay; // 다각형의 면적정보를 표시할 커스텀오버레이 입니다\r\n\r\n    ps.keywordSearch(searchPlace, placesSearchCB);\r\n\r\n    function placesSearchCB(data, status, pagination) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        let bounds = new kakao.maps.LatLngBounds();\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n          displayMarker(data[i]);\r\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n        }\r\n\r\n        map.setBounds(bounds);\r\n      }\r\n    }\r\n\r\n    function displayMarker(place) {\r\n      let marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: new kakao.maps.LatLng(place.y, place.x),\r\n      });\r\n    }\r\n  }, [searchPlace]);\r\n\r\n    return (\r\n        <div id='myMap' style={{\r\n            width: '500px',\r\n            height: '500px'\r\n        }}></div>\r\n    );\r\n}\r\n\r\nexport default MapContainer;"]},"metadata":{},"sourceType":"module"}