{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\auth\\\\ForgetPassword.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Container, Row, Col, Card, CardBody, FormGroup, Button, Alert } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { forgetPassword } from '../../redux/actions';\nimport { isUserAuthenticated } from '../../helpers/authUtils';\nimport LoaderWidget from '../../components/Loader';\nimport logo from '../../assets/images/logo.png';\n\nvar ForgetPassword = /*#__PURE__*/function (_Component) {\n  _inherits(ForgetPassword, _Component);\n\n  var _super = _createSuper(ForgetPassword);\n\n  function ForgetPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ForgetPassword);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n\n    _this.handleValidSubmit = function (event, values) {\n      _this.props.forgetPassword(values.username);\n    };\n\n    _this.renderRedirectToRoot = function () {\n      var isAuthTokenValid = isUserAuthenticated();\n\n      if (isAuthTokenValid) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    _this.handleValidSubmit = _this.handleValidSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ForgetPassword, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n    /**\n     * Handles the submit\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isAuthTokenValid = isUserAuthenticated();\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, this.renderRedirectToRoot(), (this._isMounted || !isAuthTokenValid) && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"account-pages mt-5 mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-header pt-4 pb-4 text-center bg-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"\",\n        height: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 53\n        }\n      })))), /*#__PURE__*/React.createElement(CardBody, {\n        className: \"p-4 position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }\n      }, this.props.loading && /*#__PURE__*/React.createElement(LoaderWidget, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 68\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center w-75 m-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"text-dark-50 text-center mt-0 font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 49\n        }\n      }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 49\n        }\n      }, \"Enter your email address and we'll send you an email with instructions to reset your password\")), this.props.passwordResetStatus && /*#__PURE__*/React.createElement(Alert, {\n        color: \"success\",\n        isOpen: this.props.passwordResetStatus ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 49\n        }\n      }, this.props.passwordResetStatus), this.props.error && /*#__PURE__*/React.createElement(Alert, {\n        color: \"danger\",\n        isOpen: this.props.error ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 49\n        }\n      }, this.props.error), /*#__PURE__*/React.createElement(AvForm, {\n        onValidSubmit: this.handleValidSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(AvField, {\n        type: \"text\",\n        name: \"username\",\n        label: \"Your Username\",\n        placeholder: \"Enter your username\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 53\n        }\n      }, \"Submit\"))))))), /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"col-12 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        }\n      }, \"Back to\", ' ', /*#__PURE__*/React.createElement(Link, {\n        to: \"/account/login\",\n        className: \"text-muted ml-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 45\n        }\n      }, \"Sign In\"))))))));\n    }\n  }]);\n\n  return ForgetPassword;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$Auth = state.Auth,\n      passwordResetStatus = _state$Auth.passwordResetStatus,\n      loading = _state$Auth.loading,\n      error = _state$Auth.error;\n  return {\n    passwordResetStatus,\n    loading,\n    error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  forgetPassword\n})(ForgetPassword);","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/auth/ForgetPassword.js"],"names":["React","Component","connect","Redirect","Link","Container","Row","Col","Card","CardBody","FormGroup","Button","Alert","AvForm","AvField","forgetPassword","isUserAuthenticated","LoaderWidget","logo","ForgetPassword","props","_isMounted","handleValidSubmit","event","values","username","renderRedirectToRoot","isAuthTokenValid","bind","state","loading","passwordResetStatus","error","mapStateToProps","Auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\n\nimport { Container, Row, Col, Card, CardBody, FormGroup, Button, Alert } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\n\nimport { forgetPassword } from '../../redux/actions';\nimport { isUserAuthenticated } from '../../helpers/authUtils';\nimport LoaderWidget from '../../components/Loader';\nimport logo from '../../assets/images/logo.png';\n\nclass ForgetPassword extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n\n        this.handleValidSubmit = this.handleValidSubmit.bind(this);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    /**\n     * Handles the submit\n     */\n    handleValidSubmit = (event, values) => {\n        this.props.forgetPassword(values.username);\n    };\n\n    /**\n     * Redirect to root\n     */\n    renderRedirectToRoot = () => {\n        const isAuthTokenValid = isUserAuthenticated();\n        if (isAuthTokenValid) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n\n    render() {\n        const isAuthTokenValid = isUserAuthenticated();\n        return (\n            <React.Fragment>\n                {this.renderRedirectToRoot()}\n\n                {(this._isMounted || !isAuthTokenValid) && (\n                    <div className=\"account-pages mt-5 mb-5\">\n                        <Container>\n                            <Row className=\"justify-content-center\">\n                                <Col lg={5}>\n                                    <Card>\n                                        <div className=\"card-header pt-4 pb-4 text-center bg-primary\">\n                                            <Link to=\"/\">\n                                                <span>\n                                                    <img src={logo} alt=\"\" height=\"18\" />\n                                                </span>\n                                            </Link>\n                                        </div>\n\n                                        <CardBody className=\"p-4 position-relative\">\n                                            {/* preloader */}\n                                            {this.props.loading && <LoaderWidget />}\n\n                                            <div className=\"text-center w-75 m-auto\">\n                                                <h4 className=\"text-dark-50 text-center mt-0 font-weight-bold\">\n                                                    Reset Password\n                                                </h4>\n                                                <p className=\"text-muted mb-4\">\n                                                    Enter your email address and we'll send you an email with\n                                                    instructions to reset your password\n                                                </p>\n                                            </div>\n\n                                            {this.props.passwordResetStatus && (\n                                                <Alert\n                                                    color=\"success\"\n                                                    isOpen={this.props.passwordResetStatus ? true : false}>\n                                                    {this.props.passwordResetStatus}\n                                                </Alert>\n                                            )}\n\n                                            {this.props.error && (\n                                                <Alert color=\"danger\" isOpen={this.props.error ? true : false}>\n                                                    {this.props.error}\n                                                </Alert>\n                                            )}\n\n                                            <AvForm onValidSubmit={this.handleValidSubmit}>\n                                                <AvField\n                                                    type=\"text\"\n                                                    name=\"username\"\n                                                    label=\"Your Username\"\n                                                    placeholder=\"Enter your username\"\n                                                    required\n                                                />\n\n                                                <FormGroup>\n                                                    <Button color=\"success\">Submit</Button>\n                                                </FormGroup>\n                                            </AvForm>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"mt-1\">\n                                <Col className=\"col-12 text-center\">\n                                    <p className=\"text-muted\">\n                                        Back to{' '}\n                                        <Link to=\"/account/login\" className=\"text-muted ml-1\">\n                                            <b>Sign In</b>\n                                        </Link>\n                                    </p>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { passwordResetStatus, loading, error } = state.Auth;\n    return { passwordResetStatus, loading, error };\n};\n\nexport default connect(\n    mapStateToProps,\n    { forgetPassword }\n)(ForgetPassword);\n"]},"metadata":{},"sourceType":"module"}