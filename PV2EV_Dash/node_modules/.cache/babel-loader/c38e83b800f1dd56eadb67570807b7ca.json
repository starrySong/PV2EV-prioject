{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2020, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.marked = factory());\n})(this, function () {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n  var defaults_1 = defaults.defaults;\n  var defaults_2 = defaults.getDefaults;\n  var defaults_3 = defaults.changeDefaults;\n  /**\n   * Helpers\n   */\n\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation\n  };\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n    em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n  }; // list of punctuation marks from common mark spec\n  // without ` and ] to workaround Rule 17 (inline code blocks/links)\n\n  inline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\n  inline.em = edit$1(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', block._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n  var defaults$1 = defaults.defaults;\n  var block$1 = rules.block;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      escape$1 = helpers.escape;\n  /**\n   * Block Lexer\n   */\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$1;\n      this.rules = block$1.normal;\n\n      if (this.options.pedantic) {\n        this.rules = block$1.pedantic;\n      } else if (this.options.gfm) {\n        this.rules = block$1.gfm;\n      }\n    }\n    /**\n     * Expose Block Rules\n     */\n\n    /**\n     * Static Lex Method\n     */\n\n\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    };\n\n    var _proto = Lexer.prototype;\n    /**\n     * Preprocessing\n     */\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      return this.token(src, true);\n    };\n    /**\n     * Lexing\n     */\n\n\n    _proto.token = function token(src, top) {\n      src = src.replace(/^ +$/gm, '');\n      var next, loose, cap, bull, b, item, listStart, listItems, t, space, i, tag, l, isordered, istask, ischecked;\n\n      while (src) {\n        // newline\n        if (cap = this.rules.newline.exec(src)) {\n          src = src.substring(cap[0].length);\n\n          if (cap[0].length > 1) {\n            this.tokens.push({\n              type: 'space'\n            });\n          }\n        } // code\n\n\n        if (cap = this.rules.code.exec(src)) {\n          var lastToken = this.tokens[this.tokens.length - 1];\n          src = src.substring(cap[0].length); // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.text += '\\n' + cap[0].trimRight();\n          } else {\n            cap = cap[0].replace(/^ {4}/gm, '');\n            this.tokens.push({\n              type: 'code',\n              codeBlockStyle: 'indented',\n              text: !this.options.pedantic ? rtrim$1(cap, '\\n') : cap\n            });\n          }\n\n          continue;\n        } // fences\n\n\n        if (cap = this.rules.fences.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'code',\n            lang: cap[2] ? cap[2].trim() : cap[2],\n            text: cap[3] || ''\n          });\n          continue;\n        } // heading\n\n\n        if (cap = this.rules.heading.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'heading',\n            depth: cap[1].length,\n            text: cap[2]\n          });\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (cap = this.rules.nptable.exec(src)) {\n          item = {\n            type: 'table',\n            header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n            align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n            cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n          };\n\n          if (item.header.length === item.align.length) {\n            src = src.substring(cap[0].length);\n\n            for (i = 0; i < item.align.length; i++) {\n              if (/^ *-+: *$/.test(item.align[i])) {\n                item.align[i] = 'right';\n              } else if (/^ *:-+: *$/.test(item.align[i])) {\n                item.align[i] = 'center';\n              } else if (/^ *:-+ *$/.test(item.align[i])) {\n                item.align[i] = 'left';\n              } else {\n                item.align[i] = null;\n              }\n            }\n\n            for (i = 0; i < item.cells.length; i++) {\n              item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n            }\n\n            this.tokens.push(item);\n            continue;\n          }\n        } // hr\n\n\n        if (cap = this.rules.hr.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'hr'\n          });\n          continue;\n        } // blockquote\n\n\n        if (cap = this.rules.blockquote.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'blockquote_start'\n          });\n          cap = cap[0].replace(/^ *> ?/gm, ''); // Pass `top` to keep the current\n          // \"toplevel\" state. This is exactly\n          // how markdown.pl works.\n\n          this.token(cap, top);\n          this.tokens.push({\n            type: 'blockquote_end'\n          });\n          continue;\n        } // list\n\n\n        if (cap = this.rules.list.exec(src)) {\n          src = src.substring(cap[0].length);\n          bull = cap[2];\n          isordered = bull.length > 1;\n          listStart = {\n            type: 'list_start',\n            ordered: isordered,\n            start: isordered ? +bull : '',\n            loose: false\n          };\n          this.tokens.push(listStart); // Get each top-level item.\n\n          cap = cap[0].match(this.rules.item);\n          listItems = [];\n          next = false;\n          l = cap.length;\n          i = 0;\n\n          for (; i < l; i++) {\n            item = cap[i]; // Remove the list item's bullet\n            // so it is seen as the next token.\n\n            space = item.length;\n            item = item.replace(/^ *([*+-]|\\d+\\.) */, ''); // Outdent whatever the\n            // list item contains. Hacky.\n\n            if (~item.indexOf('\\n ')) {\n              space -= item.length;\n              item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n            } // Determine whether the next list item belongs here.\n            // Backpedal if it does not belong in this list.\n\n\n            if (i !== l - 1) {\n              b = block$1.bullet.exec(cap[i + 1])[0];\n\n              if (bull.length > 1 ? b.length === 1 : b.length > 1 || this.options.smartLists && b !== bull) {\n                src = cap.slice(i + 1).join('\\n') + src;\n                i = l - 1;\n              }\n            } // Determine whether item is loose or not.\n            // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n            // for discount behavior.\n\n\n            loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n            if (i !== l - 1) {\n              next = item.charAt(item.length - 1) === '\\n';\n              if (!loose) loose = next;\n            }\n\n            if (loose) {\n              listStart.loose = true;\n            } // Check for task list items\n\n\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n\n            t = {\n              type: 'list_item_start',\n              task: istask,\n              checked: ischecked,\n              loose: loose\n            };\n            listItems.push(t);\n            this.tokens.push(t); // Recurse.\n\n            this.token(item, false);\n            this.tokens.push({\n              type: 'list_item_end'\n            });\n          }\n\n          if (listStart.loose) {\n            l = listItems.length;\n            i = 0;\n\n            for (; i < l; i++) {\n              listItems[i].loose = true;\n            }\n          }\n\n          this.tokens.push({\n            type: 'list_end'\n          });\n          continue;\n        } // html\n\n\n        if (cap = this.rules.html.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: this.options.sanitize ? 'paragraph' : 'html',\n            pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n            text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape$1(cap[0]) : cap[0]\n          });\n          continue;\n        } // def\n\n\n        if (top && (cap = this.rules.def.exec(src))) {\n          src = src.substring(cap[0].length);\n          if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n          tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n\n          if (!this.tokens.links[tag]) {\n            this.tokens.links[tag] = {\n              href: cap[2],\n              title: cap[3]\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (cap = this.rules.table.exec(src)) {\n          item = {\n            type: 'table',\n            header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n            align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n            cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n          };\n\n          if (item.header.length === item.align.length) {\n            src = src.substring(cap[0].length);\n\n            for (i = 0; i < item.align.length; i++) {\n              if (/^ *-+: *$/.test(item.align[i])) {\n                item.align[i] = 'right';\n              } else if (/^ *:-+: *$/.test(item.align[i])) {\n                item.align[i] = 'center';\n              } else if (/^ *:-+ *$/.test(item.align[i])) {\n                item.align[i] = 'left';\n              } else {\n                item.align[i] = null;\n              }\n            }\n\n            for (i = 0; i < item.cells.length; i++) {\n              item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n            }\n\n            this.tokens.push(item);\n            continue;\n          }\n        } // lheading\n\n\n        if (cap = this.rules.lheading.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'heading',\n            depth: cap[2].charAt(0) === '=' ? 1 : 2,\n            text: cap[1]\n          });\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (cap = this.rules.paragraph.exec(src))) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'paragraph',\n            text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n          });\n          continue;\n        } // text\n\n\n        if (cap = this.rules.text.exec(src)) {\n          // Top-level should never reach here.\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'text',\n            text: cap[0]\n          });\n          continue;\n        }\n\n        if (src) {\n          throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n        }\n      }\n\n      return this.tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return block$1;\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$2 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$2(_code, true)) + '</code></pre>';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$2(lang, true) + '\">' + (escaped ? _code : escape$2(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    }; // span level renderer\n\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$2(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n  /**\n   * Slugger generates header id\n   */\n\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * Convert string to unique id\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.slug = function slug(value) {\n      var slug = value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n\n      if (this.seen.hasOwnProperty(slug)) {\n        var originalSlug = slug;\n\n        do {\n          this.seen[originalSlug]++;\n          slug = originalSlug + '-' + this.seen[originalSlug];\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      this.seen[slug] = 0;\n      return slug;\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var inline$1 = rules.inline;\n  var findClosingBracket$1 = helpers.findClosingBracket,\n      escape$3 = helpers.escape;\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  var InlineLexer_1 = /*#__PURE__*/function () {\n    function InlineLexer(links, options) {\n      this.options = options || defaults$3;\n      this.links = links;\n      this.rules = inline$1.normal;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n\n      if (!this.links) {\n        throw new Error('Tokens array requires a `links` property.');\n      }\n\n      if (this.options.pedantic) {\n        this.rules = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        if (this.options.breaks) {\n          this.rules = inline$1.breaks;\n        } else {\n          this.rules = inline$1.gfm;\n        }\n      }\n    }\n    /**\n     * Expose Inline Rules\n     */\n\n    /**\n     * Static Lexing/Compiling Method\n     */\n\n\n    InlineLexer.output = function output(src, links, options) {\n      var inline = new InlineLexer(links, options);\n      return inline.output(src);\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    var _proto = InlineLexer.prototype;\n\n    _proto.output = function output(src) {\n      var out = '',\n          link,\n          text,\n          href,\n          title,\n          cap,\n          prevCapZero;\n\n      while (src) {\n        // escape\n        if (cap = this.rules.escape.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += escape$3(cap[1]);\n          continue;\n        } // tag\n\n\n        if (cap = this.rules.tag.exec(src)) {\n          if (!this.inLink && /^<a /i.test(cap[0])) {\n            this.inLink = true;\n          } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n            this.inLink = false;\n          }\n\n          if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n            this.inRawBlock = true;\n          } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n            this.inRawBlock = false;\n          }\n\n          src = src.substring(cap[0].length);\n          out += this.renderer.html(this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape$3(cap[0]) : cap[0]);\n          continue;\n        } // link\n\n\n        if (cap = this.rules.link.exec(src)) {\n          var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n\n          src = src.substring(cap[0].length);\n          this.inLink = true;\n          href = cap[2];\n\n          if (this.options.pedantic) {\n            link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n            if (link) {\n              href = link[1];\n              title = link[3];\n            } else {\n              title = '';\n            }\n          } else {\n            title = cap[3] ? cap[3].slice(1, -1) : '';\n          }\n\n          href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n          out += this.outputLink(cap, {\n            href: InlineLexer.escapes(href),\n            title: InlineLexer.escapes(title)\n          });\n          this.inLink = false;\n          continue;\n        } // reflink, nolink\n\n\n        if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n          src = src.substring(cap[0].length);\n          link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n          link = this.links[link.toLowerCase()];\n\n          if (!link || !link.href) {\n            out += cap[0].charAt(0);\n            src = cap[0].substring(1) + src;\n            continue;\n          }\n\n          this.inLink = true;\n          out += this.outputLink(cap, link);\n          this.inLink = false;\n          continue;\n        } // strong\n\n\n        if (cap = this.rules.strong.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n          continue;\n        } // em\n\n\n        if (cap = this.rules.em.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n          continue;\n        } // code\n\n\n        if (cap = this.rules.code.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.codespan(escape$3(cap[2].trim(), true));\n          continue;\n        } // br\n\n\n        if (cap = this.rules.br.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.br();\n          continue;\n        } // del (gfm)\n\n\n        if (cap = this.rules.del.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.del(this.output(cap[1]));\n          continue;\n        } // autolink\n\n\n        if (cap = this.rules.autolink.exec(src)) {\n          src = src.substring(cap[0].length);\n\n          if (cap[2] === '@') {\n            text = escape$3(this.mangle(cap[1]));\n            href = 'mailto:' + text;\n          } else {\n            text = escape$3(cap[1]);\n            href = text;\n          }\n\n          out += this.renderer.link(href, null, text);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.inLink && (cap = this.rules.url.exec(src))) {\n          if (cap[2] === '@') {\n            text = escape$3(cap[0]);\n            href = 'mailto:' + text;\n          } else {\n            // do extended autolink path validation\n            do {\n              prevCapZero = cap[0];\n              cap[0] = this.rules._backpedal.exec(cap[0])[0];\n            } while (prevCapZero !== cap[0]);\n\n            text = escape$3(cap[0]);\n\n            if (cap[1] === 'www.') {\n              href = 'http://' + text;\n            } else {\n              href = text;\n            }\n          }\n\n          src = src.substring(cap[0].length);\n          out += this.renderer.link(href, null, text);\n          continue;\n        } // text\n\n\n        if (cap = this.rules.text.exec(src)) {\n          src = src.substring(cap[0].length);\n\n          if (this.inRawBlock) {\n            out += this.renderer.text(this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape$3(cap[0]) : cap[0]);\n          } else {\n            out += this.renderer.text(escape$3(this.smartypants(cap[0])));\n          }\n\n          continue;\n        }\n\n        if (src) {\n          throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n        }\n      }\n\n      return out;\n    };\n\n    InlineLexer.escapes = function escapes(text) {\n      return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n    }\n    /**\n     * Compile Link\n     */\n    ;\n\n    _proto.outputLink = function outputLink(cap, link) {\n      var href = link.href,\n          title = link.title ? escape$3(link.title) : null;\n      return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape$3(cap[1]));\n    }\n    /**\n     * Smartypants Transformations\n     */\n    ;\n\n    _proto.smartypants = function smartypants(text) {\n      if (!this.options.smartypants) return text;\n      return text // em-dashes\n      .replace(/---/g, \"\\u2014\") // en-dashes\n      .replace(/--/g, \"\\u2013\") // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n      .replace(/'/g, \"\\u2019\") // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n      .replace(/\"/g, \"\\u201D\") // ellipses\n      .replace(/\\.{3}/g, \"\\u2026\");\n    }\n    /**\n     * Mangle Links\n     */\n    ;\n\n    _proto.mangle = function mangle(text) {\n      if (!this.options.mangle) return text;\n      var l = text.length;\n      var out = '',\n          i = 0,\n          ch;\n\n      for (; i < l; i++) {\n        ch = text.charCodeAt(i);\n\n        if (Math.random() > 0.5) {\n          ch = 'x' + ch.toString(16);\n        }\n\n        out += '&#' + ch + ';';\n      }\n\n      return out;\n    };\n\n    _createClass(InlineLexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return inline$1;\n      }\n    }]);\n\n    return InlineLexer;\n  }();\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype; // no need for block level renderers\n\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var merge$2 = helpers.merge,\n      unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.tokens = [];\n      this.token = null;\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    };\n\n    var _proto = Parser.prototype;\n    /**\n     * Parse Loop\n     */\n\n    _proto.parse = function parse(tokens) {\n      this.inline = new InlineLexer_1(tokens.links, this.options); // use an InlineLexer with a TextRenderer to extract pure text\n\n      this.inlineText = new InlineLexer_1(tokens.links, merge$2({}, this.options, {\n        renderer: new TextRenderer_1()\n      }));\n      this.tokens = tokens.reverse();\n      var out = '';\n\n      while (this.next()) {\n        out += this.tok();\n      }\n\n      return out;\n    };\n    /**\n     * Next Token\n     */\n\n\n    _proto.next = function next() {\n      this.token = this.tokens.pop();\n      return this.token;\n    };\n    /**\n     * Preview Next Token\n     */\n\n\n    _proto.peek = function peek() {\n      return this.tokens[this.tokens.length - 1] || 0;\n    };\n    /**\n     * Parse Text Tokens\n     */\n\n\n    _proto.parseText = function parseText() {\n      var body = this.token.text;\n\n      while (this.peek().type === 'text') {\n        body += '\\n' + this.next().text;\n      }\n\n      return this.inline.output(body);\n    };\n    /**\n     * Parse Current Token\n     */\n\n\n    _proto.tok = function tok() {\n      var body = '';\n\n      switch (this.token.type) {\n        case 'space':\n          {\n            return '';\n          }\n\n        case 'hr':\n          {\n            return this.renderer.hr();\n          }\n\n        case 'heading':\n          {\n            return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, unescape$1(this.inlineText.output(this.token.text)), this.slugger);\n          }\n\n        case 'code':\n          {\n            return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n          }\n\n        case 'table':\n          {\n            var header = '',\n                i,\n                row,\n                cell,\n                j; // header\n\n            cell = '';\n\n            for (i = 0; i < this.token.header.length; i++) {\n              cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n                header: true,\n                align: this.token.align[i]\n              });\n            }\n\n            header += this.renderer.tablerow(cell);\n\n            for (i = 0; i < this.token.cells.length; i++) {\n              row = this.token.cells[i];\n              cell = '';\n\n              for (j = 0; j < row.length; j++) {\n                cell += this.renderer.tablecell(this.inline.output(row[j]), {\n                  header: false,\n                  align: this.token.align[j]\n                });\n              }\n\n              body += this.renderer.tablerow(cell);\n            }\n\n            return this.renderer.table(header, body);\n          }\n\n        case 'blockquote_start':\n          {\n            body = '';\n\n            while (this.next().type !== 'blockquote_end') {\n              body += this.tok();\n            }\n\n            return this.renderer.blockquote(body);\n          }\n\n        case 'list_start':\n          {\n            body = '';\n            var ordered = this.token.ordered,\n                start = this.token.start;\n\n            while (this.next().type !== 'list_end') {\n              body += this.tok();\n            }\n\n            return this.renderer.list(body, ordered, start);\n          }\n\n        case 'list_item_start':\n          {\n            body = '';\n            var loose = this.token.loose;\n            var checked = this.token.checked;\n            var task = this.token.task;\n\n            if (this.token.task) {\n              if (loose) {\n                if (this.peek().type === 'text') {\n                  var nextToken = this.peek();\n                  nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n                } else {\n                  this.tokens.push({\n                    type: 'text',\n                    text: this.renderer.checkbox(checked)\n                  });\n                }\n              } else {\n                body += this.renderer.checkbox(checked);\n              }\n            }\n\n            while (this.next().type !== 'list_item_end') {\n              body += !loose && this.token.type === 'text' ? this.parseText() : this.tok();\n            }\n\n            return this.renderer.listitem(body, task, checked);\n          }\n\n        case 'html':\n          {\n            // TODO parse inline content if parameter markdown=1\n            return this.renderer.html(this.token.text);\n          }\n\n        case 'paragraph':\n          {\n            return this.renderer.paragraph(this.inline.output(this.token.text));\n          }\n\n        case 'text':\n          {\n            return this.renderer.paragraph(this.parseText());\n          }\n\n        default:\n          {\n            var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n\n            if (this.options.silent) {\n              console.log(errMsg);\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n      }\n    };\n\n    return Parser;\n  }();\n\n  var merge$3 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$4 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (callback || typeof opt === 'function') {\n      var _ret = function () {\n        if (!callback) {\n          callback = opt;\n          opt = null;\n        }\n\n        opt = merge$3({}, marked.defaults, opt || {});\n        checkSanitizeDeprecation$1(opt);\n        var highlight = opt.highlight;\n        var tokens,\n            pending,\n            i = 0;\n\n        try {\n          tokens = Lexer_1.lex(src, opt);\n        } catch (e) {\n          return {\n            v: callback(e)\n          };\n        }\n\n        pending = tokens.length;\n\n        var done = function done(err) {\n          if (err) {\n            opt.highlight = highlight;\n            return callback(err);\n          }\n\n          var out;\n\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n\n          opt.highlight = highlight;\n          return err ? callback(err) : callback(null, out);\n        };\n\n        if (!highlight || highlight.length < 3) {\n          return {\n            v: done()\n          };\n        }\n\n        delete opt.highlight;\n        if (!pending) return {\n          v: done()\n        };\n\n        for (; i < tokens.length; i++) {\n          (function (token) {\n            if (token.type !== 'code') {\n              return --pending || done();\n            }\n\n            return highlight(token.text, token.lang, function (err, code) {\n              if (err) return done(err);\n\n              if (code == null || code === token.text) {\n                return --pending || done();\n              }\n\n              token.text = code;\n              token.escaped = true;\n              --pending || done();\n            });\n          })(tokens[i]);\n        }\n\n        return {\n          v: void 0\n        };\n      }();\n\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n\n    try {\n      opt = merge$3({}, marked.defaults, opt || {});\n      checkSanitizeDeprecation$1(opt);\n      return Parser_1.parse(Lexer_1.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occurred:</p><pre>' + escape$4(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$3(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.InlineLexer = InlineLexer_1;\n  marked.inlineLexer = InlineLexer_1.output;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n  return marked_1;\n});","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/node_modules/marked/lib/marked.js"],"names":["global","factory","exports","module","define","amd","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","createCommonjsModule","fn","defaults","getDefaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","xhtml","changeDefaults","newDefaults","defaults_1","defaults_2","defaults_3","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","test","replace","unescapeTest","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","name","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","call","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","splice","push","trim","c","invert","l","suffLen","currChar","substr","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","helpers","noopTest$1","edit$1","merge$1","block","newline","code","fences","hr","heading","blockquote","list","def","nptable","table","lheading","_paragraph","text","_label","_title","bullet","item","_tag","_comment","paragraph","normal","inline","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","rules","defaults$1","block$1","rtrim$1","splitCells$1","escape$1","Lexer_1","Lexer","options","tokens","links","create","lex","src","lexer","_proto","token","top","next","loose","cap","bull","listStart","listItems","t","space","isordered","istask","ischecked","type","lastToken","trimRight","codeBlockStyle","lang","depth","header","align","ordered","start","slice","join","undefined","task","checked","pre","title","Error","charCodeAt","get","defaults$2","cleanUrl$1","escape$2","Renderer_1","Renderer","_code","infostring","out","quote","_html","raw","slugger","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","codespan","image","_text","Slugger_1","Slugger","seen","value","originalSlug","defaults$3","inline$1","findClosingBracket$1","escape$3","InlineLexer_1","InlineLexer","output","prevCapZero","inLink","inRawBlock","lastParenIndex","linkLen","outputLink","escapes","Math","random","toString","TextRenderer_1","TextRenderer","defaults$4","merge$2","unescape$1","Parser_1","Parser","parse","parser","inlineText","reverse","tok","pop","peek","parseText","cell","j","nextToken","errMsg","log","merge$3","checkSanitizeDeprecation$1","escape$4","defaults$5","callback","_ret","pending","v","done","err","message","setOptions","inlineLexer","marked_1"],"mappings":"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","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2020, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n  var defaults_1 = defaults.defaults;\n  var defaults_2 = defaults.getDefaults;\n  var defaults_3 = defaults.changeDefaults;\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation\n  };\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n    em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n  }; // list of punctuation marks from common mark spec\n  // without ` and ] to workaround Rule 17 (inline code blocks/links)\n\n  inline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\n  inline.em = edit$1(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', block._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n\n  var defaults$1 = defaults.defaults;\n  var block$1 = rules.block;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      escape$1 = helpers.escape;\n  /**\n   * Block Lexer\n   */\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$1;\n      this.rules = block$1.normal;\n\n      if (this.options.pedantic) {\n        this.rules = block$1.pedantic;\n      } else if (this.options.gfm) {\n        this.rules = block$1.gfm;\n      }\n    }\n    /**\n     * Expose Block Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    };\n\n    var _proto = Lexer.prototype;\n\n    /**\n     * Preprocessing\n     */\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      return this.token(src, true);\n    };\n\n    /**\n     * Lexing\n     */\n    _proto.token = function token(src, top) {\n      src = src.replace(/^ +$/gm, '');\n      var next, loose, cap, bull, b, item, listStart, listItems, t, space, i, tag, l, isordered, istask, ischecked;\n\n      while (src) {\n        // newline\n        if (cap = this.rules.newline.exec(src)) {\n          src = src.substring(cap[0].length);\n\n          if (cap[0].length > 1) {\n            this.tokens.push({\n              type: 'space'\n            });\n          }\n        } // code\n\n\n        if (cap = this.rules.code.exec(src)) {\n          var lastToken = this.tokens[this.tokens.length - 1];\n          src = src.substring(cap[0].length); // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.text += '\\n' + cap[0].trimRight();\n          } else {\n            cap = cap[0].replace(/^ {4}/gm, '');\n            this.tokens.push({\n              type: 'code',\n              codeBlockStyle: 'indented',\n              text: !this.options.pedantic ? rtrim$1(cap, '\\n') : cap\n            });\n          }\n\n          continue;\n        } // fences\n\n\n        if (cap = this.rules.fences.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'code',\n            lang: cap[2] ? cap[2].trim() : cap[2],\n            text: cap[3] || ''\n          });\n          continue;\n        } // heading\n\n\n        if (cap = this.rules.heading.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'heading',\n            depth: cap[1].length,\n            text: cap[2]\n          });\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (cap = this.rules.nptable.exec(src)) {\n          item = {\n            type: 'table',\n            header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n            align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n            cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n          };\n\n          if (item.header.length === item.align.length) {\n            src = src.substring(cap[0].length);\n\n            for (i = 0; i < item.align.length; i++) {\n              if (/^ *-+: *$/.test(item.align[i])) {\n                item.align[i] = 'right';\n              } else if (/^ *:-+: *$/.test(item.align[i])) {\n                item.align[i] = 'center';\n              } else if (/^ *:-+ *$/.test(item.align[i])) {\n                item.align[i] = 'left';\n              } else {\n                item.align[i] = null;\n              }\n            }\n\n            for (i = 0; i < item.cells.length; i++) {\n              item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n            }\n\n            this.tokens.push(item);\n            continue;\n          }\n        } // hr\n\n\n        if (cap = this.rules.hr.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'hr'\n          });\n          continue;\n        } // blockquote\n\n\n        if (cap = this.rules.blockquote.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'blockquote_start'\n          });\n          cap = cap[0].replace(/^ *> ?/gm, ''); // Pass `top` to keep the current\n          // \"toplevel\" state. This is exactly\n          // how markdown.pl works.\n\n          this.token(cap, top);\n          this.tokens.push({\n            type: 'blockquote_end'\n          });\n          continue;\n        } // list\n\n\n        if (cap = this.rules.list.exec(src)) {\n          src = src.substring(cap[0].length);\n          bull = cap[2];\n          isordered = bull.length > 1;\n          listStart = {\n            type: 'list_start',\n            ordered: isordered,\n            start: isordered ? +bull : '',\n            loose: false\n          };\n          this.tokens.push(listStart); // Get each top-level item.\n\n          cap = cap[0].match(this.rules.item);\n          listItems = [];\n          next = false;\n          l = cap.length;\n          i = 0;\n\n          for (; i < l; i++) {\n            item = cap[i]; // Remove the list item's bullet\n            // so it is seen as the next token.\n\n            space = item.length;\n            item = item.replace(/^ *([*+-]|\\d+\\.) */, ''); // Outdent whatever the\n            // list item contains. Hacky.\n\n            if (~item.indexOf('\\n ')) {\n              space -= item.length;\n              item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n            } // Determine whether the next list item belongs here.\n            // Backpedal if it does not belong in this list.\n\n\n            if (i !== l - 1) {\n              b = block$1.bullet.exec(cap[i + 1])[0];\n\n              if (bull.length > 1 ? b.length === 1 : b.length > 1 || this.options.smartLists && b !== bull) {\n                src = cap.slice(i + 1).join('\\n') + src;\n                i = l - 1;\n              }\n            } // Determine whether item is loose or not.\n            // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n            // for discount behavior.\n\n\n            loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n            if (i !== l - 1) {\n              next = item.charAt(item.length - 1) === '\\n';\n              if (!loose) loose = next;\n            }\n\n            if (loose) {\n              listStart.loose = true;\n            } // Check for task list items\n\n\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n\n            t = {\n              type: 'list_item_start',\n              task: istask,\n              checked: ischecked,\n              loose: loose\n            };\n            listItems.push(t);\n            this.tokens.push(t); // Recurse.\n\n            this.token(item, false);\n            this.tokens.push({\n              type: 'list_item_end'\n            });\n          }\n\n          if (listStart.loose) {\n            l = listItems.length;\n            i = 0;\n\n            for (; i < l; i++) {\n              listItems[i].loose = true;\n            }\n          }\n\n          this.tokens.push({\n            type: 'list_end'\n          });\n          continue;\n        } // html\n\n\n        if (cap = this.rules.html.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: this.options.sanitize ? 'paragraph' : 'html',\n            pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n            text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape$1(cap[0]) : cap[0]\n          });\n          continue;\n        } // def\n\n\n        if (top && (cap = this.rules.def.exec(src))) {\n          src = src.substring(cap[0].length);\n          if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n          tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n\n          if (!this.tokens.links[tag]) {\n            this.tokens.links[tag] = {\n              href: cap[2],\n              title: cap[3]\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (cap = this.rules.table.exec(src)) {\n          item = {\n            type: 'table',\n            header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n            align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n            cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n          };\n\n          if (item.header.length === item.align.length) {\n            src = src.substring(cap[0].length);\n\n            for (i = 0; i < item.align.length; i++) {\n              if (/^ *-+: *$/.test(item.align[i])) {\n                item.align[i] = 'right';\n              } else if (/^ *:-+: *$/.test(item.align[i])) {\n                item.align[i] = 'center';\n              } else if (/^ *:-+ *$/.test(item.align[i])) {\n                item.align[i] = 'left';\n              } else {\n                item.align[i] = null;\n              }\n            }\n\n            for (i = 0; i < item.cells.length; i++) {\n              item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n            }\n\n            this.tokens.push(item);\n            continue;\n          }\n        } // lheading\n\n\n        if (cap = this.rules.lheading.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'heading',\n            depth: cap[2].charAt(0) === '=' ? 1 : 2,\n            text: cap[1]\n          });\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (cap = this.rules.paragraph.exec(src))) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'paragraph',\n            text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n          });\n          continue;\n        } // text\n\n\n        if (cap = this.rules.text.exec(src)) {\n          // Top-level should never reach here.\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'text',\n            text: cap[0]\n          });\n          continue;\n        }\n\n        if (src) {\n          throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n        }\n      }\n\n      return this.tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return block$1;\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$2 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$2(_code, true)) + '</code></pre>';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$2(lang, true) + '\">' + (escaped ? _code : escape$2(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    };\n\n    // span level renderer\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$2(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * Convert string to unique id\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.slug = function slug(value) {\n      var slug = value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n\n      if (this.seen.hasOwnProperty(slug)) {\n        var originalSlug = slug;\n\n        do {\n          this.seen[originalSlug]++;\n          slug = originalSlug + '-' + this.seen[originalSlug];\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      this.seen[slug] = 0;\n      return slug;\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var inline$1 = rules.inline;\n  var findClosingBracket$1 = helpers.findClosingBracket,\n      escape$3 = helpers.escape;\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  var InlineLexer_1 = /*#__PURE__*/function () {\n    function InlineLexer(links, options) {\n      this.options = options || defaults$3;\n      this.links = links;\n      this.rules = inline$1.normal;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n\n      if (!this.links) {\n        throw new Error('Tokens array requires a `links` property.');\n      }\n\n      if (this.options.pedantic) {\n        this.rules = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        if (this.options.breaks) {\n          this.rules = inline$1.breaks;\n        } else {\n          this.rules = inline$1.gfm;\n        }\n      }\n    }\n    /**\n     * Expose Inline Rules\n     */\n\n\n    /**\n     * Static Lexing/Compiling Method\n     */\n    InlineLexer.output = function output(src, links, options) {\n      var inline = new InlineLexer(links, options);\n      return inline.output(src);\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    var _proto = InlineLexer.prototype;\n\n    _proto.output = function output(src) {\n      var out = '',\n          link,\n          text,\n          href,\n          title,\n          cap,\n          prevCapZero;\n\n      while (src) {\n        // escape\n        if (cap = this.rules.escape.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += escape$3(cap[1]);\n          continue;\n        } // tag\n\n\n        if (cap = this.rules.tag.exec(src)) {\n          if (!this.inLink && /^<a /i.test(cap[0])) {\n            this.inLink = true;\n          } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n            this.inLink = false;\n          }\n\n          if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n            this.inRawBlock = true;\n          } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n            this.inRawBlock = false;\n          }\n\n          src = src.substring(cap[0].length);\n          out += this.renderer.html(this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape$3(cap[0]) : cap[0]);\n          continue;\n        } // link\n\n\n        if (cap = this.rules.link.exec(src)) {\n          var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n\n          src = src.substring(cap[0].length);\n          this.inLink = true;\n          href = cap[2];\n\n          if (this.options.pedantic) {\n            link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n            if (link) {\n              href = link[1];\n              title = link[3];\n            } else {\n              title = '';\n            }\n          } else {\n            title = cap[3] ? cap[3].slice(1, -1) : '';\n          }\n\n          href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n          out += this.outputLink(cap, {\n            href: InlineLexer.escapes(href),\n            title: InlineLexer.escapes(title)\n          });\n          this.inLink = false;\n          continue;\n        } // reflink, nolink\n\n\n        if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n          src = src.substring(cap[0].length);\n          link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n          link = this.links[link.toLowerCase()];\n\n          if (!link || !link.href) {\n            out += cap[0].charAt(0);\n            src = cap[0].substring(1) + src;\n            continue;\n          }\n\n          this.inLink = true;\n          out += this.outputLink(cap, link);\n          this.inLink = false;\n          continue;\n        } // strong\n\n\n        if (cap = this.rules.strong.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n          continue;\n        } // em\n\n\n        if (cap = this.rules.em.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n          continue;\n        } // code\n\n\n        if (cap = this.rules.code.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.codespan(escape$3(cap[2].trim(), true));\n          continue;\n        } // br\n\n\n        if (cap = this.rules.br.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.br();\n          continue;\n        } // del (gfm)\n\n\n        if (cap = this.rules.del.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.del(this.output(cap[1]));\n          continue;\n        } // autolink\n\n\n        if (cap = this.rules.autolink.exec(src)) {\n          src = src.substring(cap[0].length);\n\n          if (cap[2] === '@') {\n            text = escape$3(this.mangle(cap[1]));\n            href = 'mailto:' + text;\n          } else {\n            text = escape$3(cap[1]);\n            href = text;\n          }\n\n          out += this.renderer.link(href, null, text);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.inLink && (cap = this.rules.url.exec(src))) {\n          if (cap[2] === '@') {\n            text = escape$3(cap[0]);\n            href = 'mailto:' + text;\n          } else {\n            // do extended autolink path validation\n            do {\n              prevCapZero = cap[0];\n              cap[0] = this.rules._backpedal.exec(cap[0])[0];\n            } while (prevCapZero !== cap[0]);\n\n            text = escape$3(cap[0]);\n\n            if (cap[1] === 'www.') {\n              href = 'http://' + text;\n            } else {\n              href = text;\n            }\n          }\n\n          src = src.substring(cap[0].length);\n          out += this.renderer.link(href, null, text);\n          continue;\n        } // text\n\n\n        if (cap = this.rules.text.exec(src)) {\n          src = src.substring(cap[0].length);\n\n          if (this.inRawBlock) {\n            out += this.renderer.text(this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape$3(cap[0]) : cap[0]);\n          } else {\n            out += this.renderer.text(escape$3(this.smartypants(cap[0])));\n          }\n\n          continue;\n        }\n\n        if (src) {\n          throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n        }\n      }\n\n      return out;\n    };\n\n    InlineLexer.escapes = function escapes(text) {\n      return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n    }\n    /**\n     * Compile Link\n     */\n    ;\n\n    _proto.outputLink = function outputLink(cap, link) {\n      var href = link.href,\n          title = link.title ? escape$3(link.title) : null;\n      return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape$3(cap[1]));\n    }\n    /**\n     * Smartypants Transformations\n     */\n    ;\n\n    _proto.smartypants = function smartypants(text) {\n      if (!this.options.smartypants) return text;\n      return text // em-dashes\n      .replace(/---/g, \"\\u2014\") // en-dashes\n      .replace(/--/g, \"\\u2013\") // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n      .replace(/'/g, \"\\u2019\") // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n      .replace(/\"/g, \"\\u201D\") // ellipses\n      .replace(/\\.{3}/g, \"\\u2026\");\n    }\n    /**\n     * Mangle Links\n     */\n    ;\n\n    _proto.mangle = function mangle(text) {\n      if (!this.options.mangle) return text;\n      var l = text.length;\n      var out = '',\n          i = 0,\n          ch;\n\n      for (; i < l; i++) {\n        ch = text.charCodeAt(i);\n\n        if (Math.random() > 0.5) {\n          ch = 'x' + ch.toString(16);\n        }\n\n        out += '&#' + ch + ';';\n      }\n\n      return out;\n    };\n\n    _createClass(InlineLexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return inline$1;\n      }\n    }]);\n\n    return InlineLexer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var merge$2 = helpers.merge,\n      unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.tokens = [];\n      this.token = null;\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    };\n\n    var _proto = Parser.prototype;\n\n    /**\n     * Parse Loop\n     */\n    _proto.parse = function parse(tokens) {\n      this.inline = new InlineLexer_1(tokens.links, this.options); // use an InlineLexer with a TextRenderer to extract pure text\n\n      this.inlineText = new InlineLexer_1(tokens.links, merge$2({}, this.options, {\n        renderer: new TextRenderer_1()\n      }));\n      this.tokens = tokens.reverse();\n      var out = '';\n\n      while (this.next()) {\n        out += this.tok();\n      }\n\n      return out;\n    };\n\n    /**\n     * Next Token\n     */\n    _proto.next = function next() {\n      this.token = this.tokens.pop();\n      return this.token;\n    };\n\n    /**\n     * Preview Next Token\n     */\n    _proto.peek = function peek() {\n      return this.tokens[this.tokens.length - 1] || 0;\n    };\n\n    /**\n     * Parse Text Tokens\n     */\n    _proto.parseText = function parseText() {\n      var body = this.token.text;\n\n      while (this.peek().type === 'text') {\n        body += '\\n' + this.next().text;\n      }\n\n      return this.inline.output(body);\n    };\n\n    /**\n     * Parse Current Token\n     */\n    _proto.tok = function tok() {\n      var body = '';\n\n      switch (this.token.type) {\n        case 'space':\n          {\n            return '';\n          }\n\n        case 'hr':\n          {\n            return this.renderer.hr();\n          }\n\n        case 'heading':\n          {\n            return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, unescape$1(this.inlineText.output(this.token.text)), this.slugger);\n          }\n\n        case 'code':\n          {\n            return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n          }\n\n        case 'table':\n          {\n            var header = '',\n                i,\n                row,\n                cell,\n                j; // header\n\n            cell = '';\n\n            for (i = 0; i < this.token.header.length; i++) {\n              cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n                header: true,\n                align: this.token.align[i]\n              });\n            }\n\n            header += this.renderer.tablerow(cell);\n\n            for (i = 0; i < this.token.cells.length; i++) {\n              row = this.token.cells[i];\n              cell = '';\n\n              for (j = 0; j < row.length; j++) {\n                cell += this.renderer.tablecell(this.inline.output(row[j]), {\n                  header: false,\n                  align: this.token.align[j]\n                });\n              }\n\n              body += this.renderer.tablerow(cell);\n            }\n\n            return this.renderer.table(header, body);\n          }\n\n        case 'blockquote_start':\n          {\n            body = '';\n\n            while (this.next().type !== 'blockquote_end') {\n              body += this.tok();\n            }\n\n            return this.renderer.blockquote(body);\n          }\n\n        case 'list_start':\n          {\n            body = '';\n            var ordered = this.token.ordered,\n                start = this.token.start;\n\n            while (this.next().type !== 'list_end') {\n              body += this.tok();\n            }\n\n            return this.renderer.list(body, ordered, start);\n          }\n\n        case 'list_item_start':\n          {\n            body = '';\n            var loose = this.token.loose;\n            var checked = this.token.checked;\n            var task = this.token.task;\n\n            if (this.token.task) {\n              if (loose) {\n                if (this.peek().type === 'text') {\n                  var nextToken = this.peek();\n                  nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n                } else {\n                  this.tokens.push({\n                    type: 'text',\n                    text: this.renderer.checkbox(checked)\n                  });\n                }\n              } else {\n                body += this.renderer.checkbox(checked);\n              }\n            }\n\n            while (this.next().type !== 'list_item_end') {\n              body += !loose && this.token.type === 'text' ? this.parseText() : this.tok();\n            }\n\n            return this.renderer.listitem(body, task, checked);\n          }\n\n        case 'html':\n          {\n            // TODO parse inline content if parameter markdown=1\n            return this.renderer.html(this.token.text);\n          }\n\n        case 'paragraph':\n          {\n            return this.renderer.paragraph(this.inline.output(this.token.text));\n          }\n\n        case 'text':\n          {\n            return this.renderer.paragraph(this.parseText());\n          }\n\n        default:\n          {\n            var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n\n            if (this.options.silent) {\n              console.log(errMsg);\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n      }\n    };\n\n    return Parser;\n  }();\n\n  var merge$3 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$4 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (callback || typeof opt === 'function') {\n      var _ret = function () {\n        if (!callback) {\n          callback = opt;\n          opt = null;\n        }\n\n        opt = merge$3({}, marked.defaults, opt || {});\n        checkSanitizeDeprecation$1(opt);\n        var highlight = opt.highlight;\n        var tokens,\n            pending,\n            i = 0;\n\n        try {\n          tokens = Lexer_1.lex(src, opt);\n        } catch (e) {\n          return {\n            v: callback(e)\n          };\n        }\n\n        pending = tokens.length;\n\n        var done = function done(err) {\n          if (err) {\n            opt.highlight = highlight;\n            return callback(err);\n          }\n\n          var out;\n\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n\n          opt.highlight = highlight;\n          return err ? callback(err) : callback(null, out);\n        };\n\n        if (!highlight || highlight.length < 3) {\n          return {\n            v: done()\n          };\n        }\n\n        delete opt.highlight;\n        if (!pending) return {\n          v: done()\n        };\n\n        for (; i < tokens.length; i++) {\n          (function (token) {\n            if (token.type !== 'code') {\n              return --pending || done();\n            }\n\n            return highlight(token.text, token.lang, function (err, code) {\n              if (err) return done(err);\n\n              if (code == null || code === token.text) {\n                return --pending || done();\n              }\n\n              token.text = code;\n              token.escaped = true;\n              --pending || done();\n            });\n          })(tokens[i]);\n        }\n\n        return {\n          v: void 0\n        };\n      }();\n\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n\n    try {\n      opt = merge$3({}, marked.defaults, opt || {});\n      checkSanitizeDeprecation$1(opt);\n      return Parser_1.parse(Lexer_1.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occurred:</p><pre>' + escape$4(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$3(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.InlineLexer = InlineLexer_1;\n  marked.inlineLexer = InlineLexer_1.output;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n"]},"metadata":{},"sourceType":"script"}