{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\apps\\\\Tasks\\\\List\\\\Section.js\";\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Collapse, UncontrolledTooltip } from 'reactstrap';\nimport classNames from 'classnames';\n\nvar Task = function Task(props) {\n  var task = props.task,\n      selectTask = props.selectTask;\n\n  var _useState = useState(task.stage === 'Done'),\n      _useState2 = _slicedToArray(_useState, 2),\n      completed = _useState2[0],\n      setCompleted = _useState2[1];\n\n  var markCompleted = function markCompleted(e) {\n    setCompleted(e.target.checked);\n    selectTask(task);\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-sm-between mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    className: \"mb-2 mb-sm-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    id: \"task-\".concat(task.id),\n    checked: completed,\n    onChange: markCompleted,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"task-\".concat(task.id),\n    onClick: function onClick() {\n      return selectTask(task);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, task.title))), /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: task.assignee_avatar,\n    alt: \"\",\n    className: \"avatar-xs rounded-circle mr-1\",\n    id: \"task-avatar-\".concat(task.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    placement: \"right\",\n    target: \"task-avatar-\".concat(task.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Assigned to \", task.assigned_to)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline font-13 text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"uil uil-schedule font-16 mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }), \" \", task.due_date), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item ml-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"uil uil-align-alt font-16 mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }), ' ', task.checklists.filter(function (t) {\n    return t.completed;\n  }).length, \" / \", task.checklists.length), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item ml-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"uil uil-comment-message font-16 mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }), \" \", task.comments.length), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item ml-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames('badge', {\n      'badge-danger-lighten': task.priority === 'High',\n      'badge-info-lighten': task.priority === 'Medium',\n      'badge-success-lighten': task.priority === 'Low'\n    }, 'p-1'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, task.priority)))))));\n};\n\nvar TaskSection = function TaskSection(_ref) {\n  var title = _ref.title,\n      tasks = _ref.tasks,\n      selectTask = _ref.selectTask;\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      collapse = _useState4[0],\n      setCollapse = _useState4[1];\n\n  var toggle = function toggle() {\n    return setCollapse(!collapse);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"text-dark\",\n    to: \"#\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"m-0 pb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: classNames('uil', {\n      'uil-angle-down': collapse,\n      'uil-angle-right': !collapse\n    }, 'font-18'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }), title, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"(\", tasks.length, \")\"))), /*#__PURE__*/React.createElement(Collapse, {\n    isOpen: collapse,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"pb-1 pt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, tasks.map(function (task, idx) {\n    return /*#__PURE__*/React.createElement(Task, {\n      selectTask: selectTask,\n      task: task,\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    });\n  })))));\n};\n\nexport default TaskSection;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/apps/Tasks/List/Section.js"],"names":["React","useState","Link","Row","Col","Card","CardBody","Collapse","UncontrolledTooltip","classNames","Task","props","task","selectTask","stage","completed","setCompleted","markCompleted","e","target","checked","id","title","assignee_avatar","assigned_to","due_date","checklists","filter","t","length","comments","priority","TaskSection","tasks","collapse","setCollapse","toggle","map","idx"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Collapse, UncontrolledTooltip } from 'reactstrap';\nimport classNames from 'classnames';\n\nconst Task = props => {\n    const { task, selectTask } = props;\n\n    const [completed, setCompleted] = useState(task.stage === 'Done');\n    const markCompleted = e => {\n        setCompleted(e.target.checked);\n        selectTask(task);\n    };\n\n    return (\n        <Row className=\"justify-content-sm-between mt-2\">\n            <Col sm={6} className=\"mb-2 mb-sm-0\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input\n                        type=\"checkbox\"\n                        className=\"custom-control-input\"\n                        id={`task-${task.id}`}\n                        checked={completed}\n                        onChange={markCompleted}\n                    />\n                    <label\n                        className=\"custom-control-label\"\n                        htmlFor={`task-${task.id}`}\n                        onClick={() => selectTask(task)}>\n                        {task.title}\n                    </label>\n                </div>\n            </Col>\n            <Col sm={6}>\n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <img\n                            src={task.assignee_avatar}\n                            alt=\"\"\n                            className=\"avatar-xs rounded-circle mr-1\"\n                            id={`task-avatar-${task.id}`}\n                        />\n                        <UncontrolledTooltip placement=\"right\" target={`task-avatar-${task.id}`}>\n                            Assigned to {task.assigned_to}\n                        </UncontrolledTooltip>\n                    </div>\n                    <div>\n                        <ul className=\"list-inline font-13 text-right\">\n                            <li className=\"list-inline-item\">\n                                <i className=\"uil uil-schedule font-16 mr-1\"></i> {task.due_date}\n                            </li>\n                            <li className=\"list-inline-item ml-1\">\n                                <i className=\"uil uil-align-alt font-16 mr-1\"></i>{' '}\n                                {task.checklists.filter(t => t.completed).length} / {task.checklists.length}\n                            </li>\n                            <li className=\"list-inline-item ml-1\">\n                                <i className=\"uil uil-comment-message font-16 mr-1\"></i> {task.comments.length}\n                            </li>\n                            <li className=\"list-inline-item ml-2\">\n                                <span\n                                    className={classNames(\n                                        'badge',\n                                        {\n                                            'badge-danger-lighten': task.priority === 'High',\n                                            'badge-info-lighten': task.priority === 'Medium',\n                                            'badge-success-lighten': task.priority === 'Low',\n                                        },\n                                        'p-1'\n                                    )}>\n                                    {task.priority}\n                                </span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nconst TaskSection = ({ title, tasks, selectTask }) => {\n    const [collapse, setCollapse] = useState(true);\n    const toggle = () => setCollapse(!collapse);\n\n    return (\n        <React.Fragment>\n            <Link className=\"text-dark\" to=\"#\" onClick={toggle}>\n                <h5 className=\"m-0 pb-2\">\n                    <i\n                        className={classNames(\n                            'uil',\n                            { 'uil-angle-down': collapse, 'uil-angle-right': !collapse },\n                            'font-18'\n                        )}></i>\n                    {title} <span className=\"text-muted\">({tasks.length})</span>\n                </h5>\n            </Link>\n\n            <Collapse isOpen={collapse}>\n                <Card className=\"mb-0\">\n                    <CardBody className=\"pb-1 pt-2\">\n                        {tasks.map((task, idx) => (\n                            <Task selectTask={selectTask} task={task} key={idx} />\n                        ))}\n                    </CardBody>\n                </Card>\n            </Collapse>\n        </React.Fragment>\n    );\n};\n\nexport default TaskSection;\n"]},"metadata":{},"sourceType":"module"}