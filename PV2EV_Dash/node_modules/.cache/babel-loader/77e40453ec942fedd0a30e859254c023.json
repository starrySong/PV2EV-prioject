{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\apps\\\\Tasks\\\\Board\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, UncontrolledTooltip, Modal, ModalHeader, ModalBody, Button } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport PageTitle from '../../../../components/PageTitle';\nimport HyperDatepicker from '../../../../components/Datepicker';\nimport defaultAvatar from '../../../../assets/images/users/avatar-1.jpg';\nimport TaskItem from './Task';\nimport { tasks } from './Data'; // kanban\n\nvar Kanban = /*#__PURE__*/function (_Component) {\n  _inherits(Kanban, _Component);\n\n  var _super = _createSuper(Kanban);\n\n  function Kanban(props) {\n    var _this;\n\n    _classCallCheck(this, Kanban);\n\n    _this = _super.call(this, props);\n\n    _this.toggleNewTaskModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          newTaskModal: !prevState.newTaskModal\n        };\n      });\n    };\n\n    _this.newTask = function (status, queue) {\n      _this.setState({\n        newTask: {\n          dueDate: new Date(),\n          userAvatar: defaultAvatar,\n          status: status,\n          queue: queue\n        },\n        newTaskModal: true\n      });\n    };\n\n    _this.reorder = function (list, startIndex, endIndex) {\n      var result = Array.from(list);\n\n      var _result$splice = result.splice(startIndex, 1),\n          _result$splice2 = _slicedToArray(_result$splice, 1),\n          removed = _result$splice2[0];\n\n      result.splice(endIndex, 0, removed);\n      return result;\n    };\n\n    _this.move = function (source, destination, droppableSource, droppableDestination) {\n      var sourceClone = Array.from(source);\n      var destClone = Array.from(destination);\n\n      var _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n          _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n          removed = _sourceClone$splice2[0];\n\n      destClone.splice(droppableDestination.index, 0, removed);\n      var result = {};\n      result[droppableSource.droppableId] = sourceClone;\n      result[droppableDestination.droppableId] = destClone;\n      return result;\n    };\n\n    _this.getList = function (id) {\n      return _this.state[id];\n    };\n\n    _this.onDragEnd = function (result) {\n      var source = result.source,\n          destination = result.destination; // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        var items = _this.reorder(_this.getList(source.droppableId), source.index, destination.index);\n\n        var state = _objectSpread({}, _this.state);\n\n        state[source.droppableId] = items;\n\n        _this.setState(state);\n      } else {\n        var _result = _this.move(_this.getList(source.droppableId), _this.getList(destination.droppableId), source, destination);\n\n        var _state = _objectSpread(_objectSpread({}, _this.state), _result);\n\n        _this.setState(_state);\n      }\n    };\n\n    _this.state = {\n      todoTasks: tasks.filter(function (t) {\n        return t.status === 'Pending';\n      }),\n      inprogressTasks: tasks.filter(function (t) {\n        return t.status === 'Inprogress';\n      }),\n      reviewTasks: tasks.filter(function (t) {\n        return t.status === 'Review';\n      }),\n      doneTasks: tasks.filter(function (t) {\n        return t.status === 'Done';\n      }),\n      totalTasks: tasks.length,\n      newTaskModal: false,\n      newTask: null\n    };\n    _this.getList = _this.getList.bind(_assertThisInitialized(_this));\n    _this.onDragEnd = _this.onDragEnd.bind(_assertThisInitialized(_this));\n    _this.toggleNewTaskModal = _this.toggleNewTaskModal.bind(_assertThisInitialized(_this));\n    _this.handleDateChange = _this.handleDateChange.bind(_assertThisInitialized(_this));\n    _this.handleNewTask = _this.handleNewTask.bind(_assertThisInitialized(_this));\n    _this.newTask = _this.newTask.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * Toggles the new task modal\n   */\n\n\n  _createClass(Kanban, [{\n    key: \"handleDateChange\",\n\n    /**\n     * When date changes\n     * @param {} date\n     */\n    value: function handleDateChange(date) {\n      if (this.state.newTask) {\n        this.setState({\n          newTask: _objectSpread(_objectSpread({}, this.state.newTask), {}, {\n            dueDate: date\n          })\n        });\n      }\n    } // a little function to help us with reordering the result\n\n  }, {\n    key: \"handleNewTask\",\n\n    /**\n     * Handles the new task form submission\n     */\n    value: function handleNewTask(event, values) {\n      var newTask = _objectSpread(_objectSpread(_objectSpread({}, this.state.newTask), values), {}, {\n        id: this.state.totalTasks + 1,\n        dueDate: this.state.newTask.dueDate.toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric'\n        }),\n        totalComments: 0\n      });\n\n      var state = _objectSpread({}, this.state);\n\n      var tasks = state[newTask.queue];\n      tasks.push(newTask);\n      state[newTask.queue] = tasks;\n      state['newTask'] = null;\n      state['newTaskModal'] = false;\n      state['totalTasks'] = state.totalTasks + 1;\n      this.setState(state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PageTitle, {\n        breadCrumbItems: [{\n          label: 'Apps',\n          path: '/apps/kanban'\n        }, {\n          label: 'Kanban',\n          path: '/apps/kanban',\n          active: true\n        }],\n        title: 'Kanban',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"todoTasks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 33\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tasks\",\n          ref: provided.innerRef,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-link p-0 text-secondary float-right px-0 py-2\",\n          id: \"addNewTodo\",\n          onClick: function onClick() {\n            return _this2.newTask('Pending', 'todoTasks');\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"mdi mdi-plus\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 49\n          }\n        })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n          placement: \"bottom\",\n          target: \"addNewTodo\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 45\n          }\n        }, \"Add New Todo Task\"), /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mt-0 task-header\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 45\n          }\n        }, \"TODO (\", _this2.state.todoTasks.length, \")\"), _this2.state.todoTasks.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center text-muted pt-2 mb-0\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 49\n          }\n        }, \"No Tasks\"), _this2.state.todoTasks.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id + '',\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 49\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 57\n              }\n            }), /*#__PURE__*/React.createElement(TaskItem, {\n              task: item,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 61\n              }\n            }));\n          });\n        }), provided.placeholder);\n      }), /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"inprogressTasks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          ref: provided.innerRef,\n          className: \"tasks\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-link p-0 text-secondary float-right px-0 py-2\",\n          id: \"addInprogressTask\",\n          onClick: function onClick() {\n            return _this2.newTask('Inprogress', 'inprogressTasks');\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"mdi mdi-plus\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 49\n          }\n        })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n          placement: \"bottom\",\n          target: \"addInprogressTask\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 45\n          }\n        }, \"Add New In-progress Task\"), /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mt-0 task-header text-uppercase\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 45\n          }\n        }, \"In Progress (\", _this2.state.inprogressTasks.length, \")\"), _this2.state.inprogressTasks.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center text-muted pt-2 mb-0\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 49\n          }\n        }, \"No Tasks\"), _this2.state.inprogressTasks.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id + '',\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 49\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 57\n              }\n            }), /*#__PURE__*/React.createElement(TaskItem, {\n              task: item,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 61\n              }\n            }));\n          });\n        }), provided.placeholder);\n      }), /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"reviewTasks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 33\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          ref: provided.innerRef,\n          className: \"tasks\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-link p-0 text-secondary float-right px-0 py-2\",\n          id: \"addReviewTask\",\n          onClick: function onClick() {\n            return _this2.newTask('Review', 'reviewTasks');\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"mdi mdi-plus\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 49\n          }\n        })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n          placement: \"bottom\",\n          target: \"addReviewTask\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 45\n          }\n        }, \"Add New Review Task\"), /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mt-0 task-header text-uppercase\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 45\n          }\n        }, \"Review (\", _this2.state.reviewTasks.length, \")\"), _this2.state.reviewTasks.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center text-muted pt-2 mb-0\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 49\n          }\n        }, \"No Tasks\"), _this2.state.reviewTasks.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id + '',\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 49\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 57\n              }\n            }), /*#__PURE__*/React.createElement(TaskItem, {\n              task: item,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 61\n              }\n            }));\n          });\n        }), provided.placeholder);\n      }), /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"doneTasks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 33\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          ref: provided.innerRef,\n          className: \"tasks\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-link p-0 text-secondary float-right px-0 py-2\",\n          id: \"addNewDone\",\n          onClick: function onClick() {\n            return _this2.newTask('Done', 'doneTasks');\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"mdi mdi-plus\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 49\n          }\n        })), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n          placement: \"bottom\",\n          target: \"addNewDone\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 45\n          }\n        }, \"Add Completed Task\"), /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"mt-0 task-header text-uppercase\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 45\n          }\n        }, \"Done (\", _this2.state.doneTasks.length, \")\"), _this2.state.doneTasks.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center text-muted pt-2 mb-0\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 49\n          }\n        }, \"No Tasks\"), _this2.state.doneTasks.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id + '',\n            index: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 49\n            }\n          }, function (provided, snapshot) {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 57\n              }\n            }), /*#__PURE__*/React.createElement(TaskItem, {\n              task: item,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 61\n              }\n            }));\n          });\n        }), provided.placeholder);\n      }))))), this.state.newTask && /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.newTaskModal,\n        toggle: this.toggleNewTaskModal,\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggleNewTaskModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 25\n        }\n      }, \"Create New Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(AvForm, {\n        className: \"p-2\",\n        onValidSubmit: this.handleNewTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(AvField, {\n        name: \"project\",\n        label: \"Project\",\n        type: \"select\",\n        required: true,\n        className: \"custom-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 37\n        }\n      }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 37\n        }\n      }, \"Hyper\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 37\n        }\n      }, \"CRM\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 37\n        }\n      }, \"iOS App\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(AvField, {\n        name: \"title\",\n        label: \"Title\",\n        type: \"text\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(AvField, {\n        name: \"priority\",\n        label: \"Priority\",\n        type: \"select\",\n        required: true,\n        className: \"custom-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 45\n        }\n      }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 45\n        }\n      }, \"Low\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 45\n        }\n      }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 45\n        }\n      }, \"High\")))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(AvField, {\n        name: \"user\",\n        label: \"Assign To\",\n        type: \"select\",\n        required: true,\n        className: \"custom-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 45\n        }\n      }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 45\n        }\n      }, \"Coderthemes\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 45\n        }\n      }, \"Robert Carlile\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 45\n        }\n      }, \"Louis Allen\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 45\n        }\n      }, \"Sean White\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 45\n        }\n      }, \"Riley Steele\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 45\n        }\n      }, \"Zak Turnbull\"))), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 45\n        }\n      }, \"Due Date\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 69\n        }\n      }), /*#__PURE__*/React.createElement(HyperDatepicker, {\n        hideAddon: true,\n        dateFormat: \"yyyy-MM-dd\",\n        selected: this.state.newTask.dueDate,\n        onChange: this.handleDateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 45\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"light\",\n        type: \"button\",\n        className: \"mr-1\",\n        onClick: this.toggleNewTaskModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 37\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 37\n        }\n      }, \"Create\"))))));\n    }\n  }]);\n\n  return Kanban;\n}(Component);\n\nexport default Kanban;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/apps/Tasks/Board/index.js"],"names":["React","Component","Row","Col","UncontrolledTooltip","Modal","ModalHeader","ModalBody","Button","AvForm","AvField","DragDropContext","Droppable","Draggable","PageTitle","HyperDatepicker","defaultAvatar","TaskItem","tasks","Kanban","props","toggleNewTaskModal","setState","prevState","newTaskModal","newTask","status","queue","dueDate","Date","userAvatar","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getList","id","state","onDragEnd","items","todoTasks","filter","t","inprogressTasks","reviewTasks","doneTasks","totalTasks","length","bind","handleDateChange","handleNewTask","date","event","values","toLocaleDateString","year","month","day","totalComments","push","label","path","active","provided","snapshot","innerRef","map","item","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, UncontrolledTooltip, Modal, ModalHeader, ModalBody, Button } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport PageTitle from '../../../../components/PageTitle';\nimport HyperDatepicker from '../../../../components/Datepicker';\nimport defaultAvatar from '../../../../assets/images/users/avatar-1.jpg';\n\nimport TaskItem from './Task';\nimport { tasks } from './Data';\n\n// kanban\nclass Kanban extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            todoTasks: tasks.filter(t => t.status === 'Pending'),\n            inprogressTasks: tasks.filter(t => t.status === 'Inprogress'),\n            reviewTasks: tasks.filter(t => t.status === 'Review'),\n            doneTasks: tasks.filter(t => t.status === 'Done'),\n            totalTasks: tasks.length,\n            newTaskModal: false,\n            newTask: null,\n        };\n\n        this.getList = this.getList.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n        this.toggleNewTaskModal = this.toggleNewTaskModal.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleNewTask = this.handleNewTask.bind(this);\n        this.newTask = this.newTask.bind(this);\n    }\n\n    /**\n     * Toggles the new task modal\n     */\n    toggleNewTaskModal = () => {\n        this.setState(prevState => ({\n            newTaskModal: !prevState.newTaskModal,\n        }));\n    };\n\n    /**\n     * Creates new empty task with given status\n     */\n    newTask = (status, queue) => {\n        this.setState({\n            newTask: { dueDate: new Date(), userAvatar: defaultAvatar, status: status, queue: queue },\n            newTaskModal: true,\n        });\n    };\n\n    /**\n     * When date changes\n     * @param {} date\n     */\n    handleDateChange(date) {\n        if (this.state.newTask) {\n            this.setState({\n                newTask: { ...this.state.newTask, dueDate: date },\n            });\n        }\n    }\n\n    // a little function to help us with reordering the result\n    reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n\n    /**\n     * Moves an item from one list to another list.\n     */\n    move = (source, destination, droppableSource, droppableDestination) => {\n        const sourceClone = Array.from(source);\n        const destClone = Array.from(destination);\n        const [removed] = sourceClone.splice(droppableSource.index, 1);\n        destClone.splice(droppableDestination.index, 0, removed);\n        const result = {};\n        result[droppableSource.droppableId] = sourceClone;\n        result[droppableDestination.droppableId] = destClone;\n\n        return result;\n    };\n\n    /**\n     * Gets the list\n     */\n    getList = id => this.state[id];\n\n    /**\n     * On drag end\n     */\n    onDragEnd = result => {\n        const { source, destination } = result;\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n        if (source.droppableId === destination.droppableId) {\n            const items = this.reorder(this.getList(source.droppableId), source.index, destination.index);\n\n            let state = { ...this.state };\n            state[source.droppableId] = items;\n            this.setState(state);\n        } else {\n            const result = this.move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n            const state = { ...this.state, ...result };\n            this.setState(state);\n        }\n    };\n\n    /**\n     * Handles the new task form submission\n     */\n    handleNewTask(event, values) {\n        const newTask = {\n            ...this.state.newTask,\n            ...values,\n            id: this.state.totalTasks + 1,\n            dueDate: this.state.newTask.dueDate.toLocaleDateString('en-US', {\n                year: 'numeric',\n                month: 'short',\n                day: 'numeric',\n            }),\n            totalComments: 0,\n        };\n\n        var state = { ...this.state };\n        var tasks = state[newTask.queue];\n        tasks.push(newTask);\n        state[newTask.queue] = tasks;\n        state['newTask'] = null;\n        state['newTaskModal'] = false;\n        state['totalTasks'] = state.totalTasks + 1;\n        this.setState(state);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageTitle\n                    breadCrumbItems={[\n                        { label: 'Apps', path: '/apps/kanban' },\n                        { label: 'Kanban', path: '/apps/kanban', active: true },\n                    ]}\n                    title={'Kanban'}\n                />\n\n                <Row>\n                    <Col>\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            <div className=\"board\">\n                                {/* todo */}\n                                <Droppable droppableId=\"todoTasks\">\n                                    {(provided, snapshot) => (\n                                        <div className=\"tasks\" ref={provided.innerRef}>\n                                            <button\n                                                className=\"btn btn-link p-0 text-secondary float-right px-0 py-2\"\n                                                id=\"addNewTodo\"\n                                                onClick={() => this.newTask('Pending', 'todoTasks')}>\n                                                <i className=\"mdi mdi-plus\"></i>\n                                            </button>\n                                            <UncontrolledTooltip placement=\"bottom\" target=\"addNewTodo\">\n                                                Add New Todo Task\n                                            </UncontrolledTooltip>\n\n                                            <h5 className=\"mt-0 task-header\">TODO ({this.state.todoTasks.length})</h5>\n\n                                            {this.state.todoTasks.length === 0 && (\n                                                <p className=\"text-center text-muted pt-2 mb-0\">No Tasks</p>\n                                            )}\n\n                                            {this.state.todoTasks.map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id + ''} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}>\n                                                            <TaskItem task={item} />\n                                                        </div>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n\n                                {/* in progress */}\n\n                                <Droppable droppableId=\"inprogressTasks\">\n                                    {(provided, snapshot) => (\n                                        <div ref={provided.innerRef} className=\"tasks\">\n                                            <button\n                                                className=\"btn btn-link p-0 text-secondary float-right px-0 py-2\"\n                                                id=\"addInprogressTask\"\n                                                onClick={() => this.newTask('Inprogress', 'inprogressTasks')}>\n                                                <i className=\"mdi mdi-plus\"></i>\n                                            </button>\n                                            <UncontrolledTooltip placement=\"bottom\" target=\"addInprogressTask\">\n                                                Add New In-progress Task\n                                            </UncontrolledTooltip>\n                                            <h5 className=\"mt-0 task-header text-uppercase\">\n                                                In Progress ({this.state.inprogressTasks.length})\n                                            </h5>\n                                            {this.state.inprogressTasks.length === 0 && (\n                                                <p className=\"text-center text-muted pt-2 mb-0\">No Tasks</p>\n                                            )}\n\n                                            {this.state.inprogressTasks.map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id + ''} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}>\n                                                            <TaskItem task={item} />\n                                                        </div>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n\n                                {/* review */}\n\n                                <Droppable droppableId=\"reviewTasks\">\n                                    {(provided, snapshot) => (\n                                        <div ref={provided.innerRef} className=\"tasks\">\n                                            <button\n                                                className=\"btn btn-link p-0 text-secondary float-right px-0 py-2\"\n                                                id=\"addReviewTask\"\n                                                onClick={() => this.newTask('Review', 'reviewTasks')}>\n                                                <i className=\"mdi mdi-plus\"></i>\n                                            </button>\n                                            <UncontrolledTooltip placement=\"bottom\" target=\"addReviewTask\">\n                                                Add New Review Task\n                                            </UncontrolledTooltip>\n                                            <h5 className=\"mt-0 task-header text-uppercase\">\n                                                Review ({this.state.reviewTasks.length})\n                                            </h5>\n                                            {this.state.reviewTasks.length === 0 && (\n                                                <p className=\"text-center text-muted pt-2 mb-0\">No Tasks</p>\n                                            )}\n\n                                            {this.state.reviewTasks.map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id + ''} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}>\n                                                            <TaskItem task={item} />\n                                                        </div>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n\n                                {/* done */}\n\n                                <Droppable droppableId=\"doneTasks\">\n                                    {(provided, snapshot) => (\n                                        <div ref={provided.innerRef} className=\"tasks\">\n                                            <button\n                                                className=\"btn btn-link p-0 text-secondary float-right px-0 py-2\"\n                                                id=\"addNewDone\"\n                                                onClick={() => this.newTask('Done', 'doneTasks')}>\n                                                <i className=\"mdi mdi-plus\"></i>\n                                            </button>\n                                            <UncontrolledTooltip placement=\"bottom\" target=\"addNewDone\">\n                                                Add Completed Task\n                                            </UncontrolledTooltip>\n\n                                            <h5 className=\"mt-0 task-header text-uppercase\">\n                                                Done ({this.state.doneTasks.length})\n                                            </h5>\n                                            {this.state.doneTasks.length === 0 && (\n                                                <p className=\"text-center text-muted pt-2 mb-0\">No Tasks</p>\n                                            )}\n\n                                            {this.state.doneTasks.map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id + ''} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}>\n                                                            <TaskItem task={item} />\n                                                        </div>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                            </div>\n                        </DragDropContext>\n                    </Col>\n                </Row>\n\n                {/* new task model */}\n                {this.state.newTask && (\n                    <Modal isOpen={this.state.newTaskModal} toggle={this.toggleNewTaskModal} size=\"lg\">\n                        <ModalHeader toggle={this.toggleNewTaskModal}>Create New Task</ModalHeader>\n                        <ModalBody>\n                            <AvForm className=\"p-2\" onValidSubmit={this.handleNewTask}>\n                                <AvField\n                                    name=\"project\"\n                                    label=\"Project\"\n                                    type=\"select\"\n                                    required\n                                    className=\"custom-select\">\n                                    <option>Select</option>\n                                    <option>Hyper</option>\n                                    <option>CRM</option>\n                                    <option>iOS App</option>\n                                </AvField>\n\n                                <Row>\n                                    <Col md={8}>\n                                        <AvField name=\"title\" label=\"Title\" type=\"text\" required />\n                                    </Col>\n                                    <Col md={4}>\n                                        <AvField\n                                            name=\"priority\"\n                                            label=\"Priority\"\n                                            type=\"select\"\n                                            required\n                                            className=\"custom-select\">\n                                            <option>Select</option>\n                                            <option>Low</option>\n                                            <option>Medium</option>\n                                            <option>High</option>\n                                        </AvField>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col md={6}>\n                                        <AvField\n                                            name=\"user\"\n                                            label=\"Assign To\"\n                                            type=\"select\"\n                                            required\n                                            className=\"custom-select\">\n                                            <option>Select</option>\n                                            <option>Coderthemes</option>\n                                            <option>Robert Carlile</option>\n                                            <option>Louis Allen</option>\n                                            <option>Sean White</option>\n                                            <option>Riley Steele</option>\n                                            <option>Zak Turnbull</option>\n                                        </AvField>\n                                    </Col>\n                                    <Col md={6}>\n                                        <div className=\"form-group\">\n                                            <label>Due Date</label> <br />\n                                            <HyperDatepicker\n                                                hideAddon={true}\n                                                dateFormat=\"yyyy-MM-dd\"\n                                                selected={this.state.newTask.dueDate}\n                                                onChange={this.handleDateChange}\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <div className=\"text-right\">\n                                    <Button\n                                        color=\"light\"\n                                        type=\"button\"\n                                        className=\"mr-1\"\n                                        onClick={this.toggleNewTaskModal}>\n                                        Cancel\n                                    </Button>\n                                    <Button color=\"primary\" type=\"submit\">\n                                        Create\n                                    </Button>\n                                </div>\n                            </AvForm>\n                        </ModalBody>\n                    </Modal>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Kanban;\n"]},"metadata":{},"sourceType":"module"}