{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\components\\\\ChatList.js\";\n\nimport React, { Component } from 'react';\nimport { Card, CardBody, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Row, Col } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport SimpleBar from 'simplebar-react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n/* Chat Item Avatar */\n\nvar ChatItemAvatar = function ChatItemAvatar(_ref) {\n  var userAvatar = _ref.userAvatar,\n      postedOn = _ref.postedOn;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-avatar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: userAvatar,\n    alt: userAvatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, postedOn));\n};\n/* Chat Item Text */\n\n\nvar ChatItemText = function ChatItemText(_ref2) {\n  var userName = _ref2.userName,\n      text = _ref2.text;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ctext-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, userName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, text)));\n};\n/* Chat Item */\n\n\nvar chatItemDefaultProps = {\n  placement: '',\n  children: PropTypes.object,\n  className: ''\n};\n\nvar ChatItem = function ChatItem(_ref3) {\n  var children = _ref3.children,\n      placement = _ref3.placement,\n      className = _ref3.className;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: classNames('clearfix', {\n      odd: placement === 'left'\n    }, className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, children);\n};\n\nChatItem.defaultProps = chatItemDefaultProps;\n/**\n * ChatForm\n */\n\n/**\n * Renders the ChatList\n */\nvar ChatForm = /*#__PURE__*/function (_Component) {\n  _inherits(ChatForm, _Component);\n\n  var _super = _createSuper(ChatForm);\n\n  function ChatForm(props) {\n    var _this2;\n\n    _classCallCheck(this, ChatForm);\n\n    _this2 = _super.call(this, props);\n\n    _this2.handleValidMessageSubmit = function (event, values) {\n      _this2.props.onNewMessagesPosted(values);\n    };\n\n    _this2.handleValidMessageSubmit = _this2.handleValidMessageSubmit.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n  /**\n   * Handle valid form submission\n   */\n\n\n  _createClass(ChatForm, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(AvForm, {\n        onValidSubmit: this.handleValidMessageSubmit,\n        className: \"needs-validation mt-2\",\n        noValidate: true,\n        name: \"chat-form\",\n        id: \"chat-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        form: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(AvField, {\n        name: \"text\",\n        type: \"text\",\n        errorMessage: \"Please enter your message\",\n        validate: {\n          required: {\n            value: true\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        className: \"col-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-danger chat-send btn-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, \"Send\"))));\n    }\n  }]);\n\n  return ChatForm;\n}(Component);\n/**\n * ChatList\n */\n\n\n/**\n * Renders the ChatList\n */\nvar ChatList = /*#__PURE__*/function (_Component2) {\n  _inherits(ChatList, _Component2);\n\n  var _super2 = _createSuper(ChatList);\n\n  function ChatList(props) {\n    var _this3;\n\n    _classCallCheck(this, ChatList);\n\n    _this3 = _super2.call(this, props);\n\n    _this3.handleNewMessagePosted = function (message) {\n      // save new message\n      _this3.setState({\n        messages: _this3.state.messages.concat({\n          id: _this3.state.messages.length + 1,\n          userName: 'Geneva',\n          text: message.text,\n          postedOn: '10:00'\n        })\n      });\n    };\n\n    _this3.state = {\n      messages: _this3.props.messages\n    };\n    _this3.handleNewMessagePosted = _this3.handleNewMessagePosted.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n  /**\n   * Handle new message posted\n   */\n\n\n  _createClass(ChatList, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        tag: \"button\",\n        className: \"btn btn-link arrow-none card-drop p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-dots-vertical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(DropdownMenu, {\n        right: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }, \"Refresh\"), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }, \"Settings\"))), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"header-title mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, \"Chat\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-conversation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(SimpleBar, {\n        style: {\n          maxHeight: '330px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: classNames('conversation-list', this.props.className),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, this.state.messages.map(function (message, i) {\n        return /*#__PURE__*/React.createElement(ChatItem, {\n          key: i,\n          placement: i > 0 ? i % 2 === 0 ? '' : 'left' : 'right',\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 41\n          }\n        }, message.userPic && /*#__PURE__*/React.createElement(ChatItemAvatar, {\n          userAvatar: message.userPic,\n          postedOn: message.postedOn,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 49\n          }\n        }), /*#__PURE__*/React.createElement(ChatItemText, {\n          userName: message.userName,\n          text: message.text,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 45\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(ChatForm, {\n        onNewMessagesPosted: this.handleNewMessagePosted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return ChatList;\n}(Component);\n\nexport default ChatList;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/components/ChatList.js"],"names":["React","Component","Card","CardBody","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Row","Col","AvForm","AvField","SimpleBar","classNames","PropTypes","ChatItemAvatar","userAvatar","postedOn","ChatItemText","userName","text","chatItemDefaultProps","placement","children","object","className","ChatItem","odd","defaultProps","ChatForm","props","handleValidMessageSubmit","event","values","onNewMessagesPosted","bind","required","value","ChatList","handleNewMessagePosted","message","setState","messages","state","concat","id","length","maxHeight","width","map","i","userPic"],"mappings":"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","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport { Card, CardBody, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Row, Col } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport SimpleBar from 'simplebar-react';\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n/* Chat Item Avatar */\nconst ChatItemAvatar = ({ userAvatar, postedOn }) => {\n    return (\n        <div className=\"chat-avatar\">\n            <img src={userAvatar} alt={userAvatar} />\n            <i>{postedOn}</i>\n        </div>\n    );\n};\n\n/* Chat Item Text */\nconst ChatItemText = ({ userName, text }) => {\n    return (\n        <div className=\"conversation-text\">\n            <div className=\"ctext-wrap\">\n                <i>{userName}</i>\n                <p>{text}</p>\n            </div>\n        </div>\n    );\n};\n\n/* Chat Item */\nconst chatItemDefaultProps = {\n    placement: '',\n    children: PropTypes.object,\n    className: '',\n};\n\nconst ChatItem = ({ children, placement, className }) => {\n    return <li className={classNames('clearfix', { odd: placement === 'left' }, className)}>{children}</li>;\n};\n\nChatItem.defaultProps = chatItemDefaultProps;\n\n/**\n * ChatForm\n */\n\ntype ChatFormProps = {\n    onNewMessagesPosted: PropTypes.func,\n};\n\n/**\n * Renders the ChatList\n */\nclass ChatForm extends Component<ChatFormProps> {\n    constructor(props: ChatFormProps) {\n        super(props);\n        this.handleValidMessageSubmit = this.handleValidMessageSubmit.bind(this);\n    }\n\n    /**\n     * Handle valid form submission\n     */\n    handleValidMessageSubmit = (event: PropTypes.object, values: PropTypes.object) => {\n        this.props.onNewMessagesPosted(values);\n    };\n\n    render() {\n        return (\n            <AvForm\n                onValidSubmit={this.handleValidMessageSubmit}\n                className=\"needs-validation mt-2\"\n                noValidate\n                name=\"chat-form\"\n                id=\"chat-form\">\n                <Row form>\n                    <Col>\n                        <AvField\n                            name=\"text\"\n                            type=\"text\"\n                            errorMessage=\"Please enter your message\"\n                            validate={{ required: { value: true } }}\n                        />\n                    </Col>\n                    <Col className=\"col-auto\">\n                        <button type=\"submit\" className=\"btn btn-danger chat-send btn-block\">\n                            Send\n                        </button>\n                    </Col>\n                </Row>\n            </AvForm>\n        );\n    }\n}\n\n/**\n * ChatList\n */\n\ntype ChatListProps = {\n    className?: string,\n    messages: PropTypes.object,\n};\n\ntype ChatListState = {\n    messages: PropTypes.object,\n};\n\n/**\n * Renders the ChatList\n */\nclass ChatList extends Component<ChatListProps, ChatListState> {\n    constructor(props: ChatListProps) {\n        super(props);\n        this.state = {\n            messages: this.props.messages,\n        };\n        this.handleNewMessagePosted = this.handleNewMessagePosted.bind(this);\n    }\n\n    /**\n     * Handle new message posted\n     */\n    handleNewMessagePosted = (message: PropTypes.object) => {\n        // save new message\n        this.setState({\n            messages: this.state.messages.concat({\n                id: this.state.messages.length + 1,\n                userName: 'Geneva',\n                text: message.text,\n                postedOn: '10:00',\n            }),\n        });\n    };\n\n    render() {\n        return (\n            <Card>\n                <CardBody>\n                    <UncontrolledDropdown className=\"float-right\">\n                        <DropdownToggle tag=\"button\" className=\"btn btn-link arrow-none card-drop p-0\">\n                            <i className=\"mdi mdi-dots-vertical\"></i>\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem>Refresh</DropdownItem>\n                            <DropdownItem>Settings</DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n\n                    <h4 className=\"header-title mb-3\">Chat</h4>\n\n                    <div className=\"chat-conversation\">\n                        <SimpleBar style={{ maxHeight: '330px', width: '100%' }}>\n                            <ul className={classNames('conversation-list', this.props.className)}>\n                                {this.state.messages.map((message, i) => {\n                                    return (\n                                        <ChatItem key={i} placement={i > 0 ? (i % 2 === 0 ? '' : 'left') : 'right'}>\n                                            {message.userPic && (\n                                                <ChatItemAvatar\n                                                    userAvatar={message.userPic}\n                                                    postedOn={message.postedOn}\n                                                />\n                                            )}\n                                            <ChatItemText userName={message.userName} text={message.text} />\n                                        </ChatItem>\n                                    );\n                                })}\n                            </ul>\n                        </SimpleBar>\n\n                        {/* chat form */}\n                        <ChatForm onNewMessagesPosted={this.handleNewMessagePosted} />\n                    </div>\n                </CardBody>\n            </Card>\n        );\n    }\n}\n\nexport default ChatList;\n"]},"metadata":{},"sourceType":"module"}