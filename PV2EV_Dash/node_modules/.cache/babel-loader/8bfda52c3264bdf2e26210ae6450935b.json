{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\components\\\\AppsDropdown\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'; // apps\n\nimport slackIcon from './icons/slack.png';\nimport bitbucketIcon from './icons/bitbucket.png';\nimport dribbbleIcon from './icons/dribbble.png';\nimport dropboxIcon from './icons/dropbox.png';\nimport githubIcon from './icons/github.png';\nimport gSuiteIcon from './icons/g-suite.png';\nvar Apps = [{\n  name: 'Slack',\n  icon: slackIcon,\n  redirectTo: '/'\n}, {\n  name: 'GitHub',\n  icon: githubIcon,\n  redirectTo: '/'\n}, {\n  name: 'Dribbble',\n  icon: dribbbleIcon,\n  redirectTo: '/'\n}, {\n  name: 'Bitbucket',\n  icon: bitbucketIcon,\n  redirectTo: '/'\n}, {\n  name: 'Dropbox',\n  icon: dropboxIcon,\n  redirectTo: '/'\n}, {\n  name: 'G Suite',\n  icon: gSuiteIcon,\n  redirectTo: '/'\n}];\n\nvar AppsDropdown = /*#__PURE__*/function (_Component) {\n  _inherits(AppsDropdown, _Component);\n\n  var _super = _createSuper(AppsDropdown);\n\n  function AppsDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, AppsDropdown);\n\n    _this = _super.call(this, props);\n    _this.toggleDropdown = _this.toggleDropdown.bind(_assertThisInitialized(_this));\n    _this.state = {\n      dropdownOpen: false\n    };\n    return _this;\n  }\n  /*:: toggleDropdown: () => void */\n\n\n  _createClass(AppsDropdown, [{\n    key: \"toggleDropdown\",\n    value: function toggleDropdown() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var apps = Apps || [];\n      var chunk_size = 3;\n      var appsChunks = Array(Math.ceil(apps.length / chunk_size)).fill().map(function (_, index) {\n        return index * chunk_size;\n      }).map(function (begin) {\n        return apps.slice(begin, begin + chunk_size);\n      });\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggleDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        \"data-toggle\": \"dropdown\",\n        tag: \"button\",\n        className: \"btn btn-link nav-link dropdown-toggle arrow-none mr-0\",\n        onClick: this.toggleDropdown,\n        \"aria-expanded\": this.state.dropdownOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"mdi mdi-apps noti-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(DropdownMenu, {\n        right: true,\n        className: \"dropdown-menu-animated dropdown-lg p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, appsChunks.map(function (chunk, idx) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row no-gutters\",\n          key: idx,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }\n        }, chunk.map(function (item, i) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col\",\n            key: i,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            className: \"dropdown-icon-item\",\n            to: item.redirectTo,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: item.icon,\n            alt: \"\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 45\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 45\n            }\n          }, item.name)));\n        }));\n      }))));\n    }\n  }]);\n\n  return AppsDropdown;\n}(Component);\n\nexport default AppsDropdown;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/components/AppsDropdown/index.js"],"names":["React","Component","Link","Dropdown","DropdownMenu","DropdownToggle","slackIcon","bitbucketIcon","dribbbleIcon","dropboxIcon","githubIcon","gSuiteIcon","Apps","name","icon","redirectTo","AppsDropdown","props","toggleDropdown","bind","state","dropdownOpen","setState","apps","chunk_size","appsChunks","Array","Math","ceil","length","fill","map","_","index","begin","slice","chunk","idx","item","i"],"mappings":"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","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\n\n// apps\nimport slackIcon from './icons/slack.png';\nimport bitbucketIcon from './icons/bitbucket.png';\nimport dribbbleIcon from './icons/dribbble.png';\nimport dropboxIcon from './icons/dropbox.png';\nimport githubIcon from './icons/github.png';\nimport gSuiteIcon from './icons/g-suite.png';\n\nconst Apps = [\n    {\n        name: 'Slack',\n        icon: slackIcon,\n        redirectTo: '/'\n\n    },\n    {\n        name: 'GitHub',\n        icon: githubIcon,\n        redirectTo: '/'\n    },\n    {\n        name: 'Dribbble',\n        icon: dribbbleIcon,\n        redirectTo: '/'\n    },\n    {\n        name: 'Bitbucket',\n        icon: bitbucketIcon,\n        redirectTo: '/'\n    },\n    {\n        name: 'Dropbox',\n        icon: dropboxIcon,\n        redirectTo: '/'\n    },\n    {\n        name: 'G Suite',\n        icon: gSuiteIcon,\n        redirectTo: '/'\n    },\n];\n\n\ntype AppsDropdownProps = {};\n\ntype AppsDropdownState = {\n    dropdownOpen?: boolean,\n};\n\nclass AppsDropdown extends Component<AppsDropdownProps, AppsDropdownState> {\n    constructor(props: AppsDropdownProps) {\n        super(props);\n\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n        this.state = {\n            dropdownOpen: false,\n        };\n    }\n\n    /*:: toggleDropdown: () => void */\n    toggleDropdown() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen,\n        });\n    }\n\n    render() {\n        const apps = Apps || [];\n        const chunk_size = 3;\n        const appsChunks = Array(Math.ceil(apps.length / chunk_size)).fill().map((_, index) => index * chunk_size).map(begin => apps.slice(begin, begin + chunk_size));\n\n        return (\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\n                <DropdownToggle\n                    data-toggle=\"dropdown\"\n                    tag=\"button\"\n                    className=\"btn btn-link nav-link dropdown-toggle arrow-none mr-0\"\n                    onClick={this.toggleDropdown}\n                    aria-expanded={this.state.dropdownOpen}>\n                    <i className=\"mdi mdi-apps noti-icon\"></i>\n                </DropdownToggle>\n                <DropdownMenu right className=\"dropdown-menu-animated dropdown-lg p-0\">\n                    <div className=\"p-2\">\n                        {appsChunks.map((chunk, idx) => (\n                            <div className=\"row no-gutters\" key={idx}>\n                                {chunk.map((item, i) => (\n                                    <div className=\"col\" key={i}>\n                                        <Link className=\"dropdown-icon-item\" to={item.redirectTo}>\n                                            <img src={item.icon} alt=\"\" />\n                                            <span>{item.name}</span>\n                                        </Link>\n                                    </div>\n                                ))}\n                            </div>\n                        ))}\n                    </div>\n                </DropdownMenu>\n            </Dropdown>\n        );\n    }\n}\n\nexport default AppsDropdown;\n"]},"metadata":{},"sourceType":"module"}