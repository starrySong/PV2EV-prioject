{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\uikit\\\\RangeSliders.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport Nouislider from 'nouislider-react';\nimport 'nouislider/distribute/nouislider.css';\nimport PageTitle from '../../components/PageTitle'; // RangeSliders\n\nvar RangeSliders = /*#__PURE__*/function (_Component) {\n  _inherits(RangeSliders, _Component);\n\n  var _super = _createSuper(RangeSliders);\n\n  function RangeSliders(props) {\n    var _this;\n\n    _classCallCheck(this, RangeSliders);\n\n    _this = _super.call(this, props);\n\n    _this.onSlide = function (index, value, percent) {\n      var selectedVals = _objectSpread({}, _this.state.selectedVals);\n\n      selectedVals[index] = {\n        textValue: value[0].toFixed(2),\n        percent: percent[0].toFixed(2)\n      };\n\n      _this.setState({\n        selectedVals: selectedVals\n      });\n    };\n\n    _this.onSlide2 = function (index, value) {\n      var selectedRanges = _objectSpread({}, _this.state.selectedRanges);\n\n      selectedRanges[index] = value[0].toFixed(2) + '-' + value[1].toFixed(2);\n\n      _this.setState({\n        selectedRanges: selectedRanges\n      });\n    };\n\n    _this.state = {\n      selectedVals: {\n        1: {\n          textValue: 20,\n          percent: 20\n        },\n        2: {\n          textValue: 20,\n          percent: 20\n        }\n      },\n      selectedRanges: {\n        1: '20-45',\n        2: '20-45'\n      }\n    };\n    _this.onSlide = _this.onSlide.bind(_assertThisInitialized(_this));\n    _this.onSlide2 = _this.onSlide2.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RangeSliders, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PageTitle, {\n        breadCrumbItems: [{\n          label: 'UI',\n          path: '/ui/rangesliders'\n        }, {\n          label: 'Extended UI',\n          path: '/ui/rangesliders'\n        }, {\n          label: 'Range Sliders',\n          path: '/ui/rangesliders',\n          active: true\n        }],\n        title: 'Range Sliders',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }, \"Single\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted font-14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }, \"Slider with single selecrtor\"), /*#__PURE__*/React.createElement(Nouislider, {\n        range: {\n          min: 0,\n          max: 100\n        },\n        start: [20],\n        connect: true,\n        onSlide: function onSlide(render, handle, value, un, percent) {\n          return _this2.onSlide(1, value, percent);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mt-2 mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, \"Value:\", ' ', this.state.selectedVals ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 41\n        }\n      }, this.state.selectedVals[1]['textValue'], \", \\xA0\", this.state.selectedVals[1]['percent'], \"%\") : null)))), /*#__PURE__*/React.createElement(Col, {\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }, \"Range\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted font-14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }, \"Slider with range selecrtor\"), /*#__PURE__*/React.createElement(Nouislider, {\n        range: {\n          min: 10,\n          max: 150\n        },\n        start: [20, 45],\n        connect: true,\n        onSlide: function onSlide(render, handle, value, un, percent) {\n          return _this2.onSlide2(1, value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mt-2 mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }, \"Value:\", ' ', this.state.selectedRanges ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 66\n        }\n      }, this.state.selectedRanges[1]) : null))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }\n      }, \"Slider Step\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted font-14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }, \"Slider with step value\"), /*#__PURE__*/React.createElement(Nouislider, {\n        range: {\n          min: 0,\n          max: 100\n        },\n        start: [20],\n        step: 10,\n        connect: true,\n        onSlide: function onSlide(render, handle, value, un, percent) {\n          return _this2.onSlide(2, value, percent);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mt-2 mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, \"Value:\", ' ', this.state.selectedVals ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 41\n        }\n      }, this.state.selectedVals[2]['textValue'], \", \\xA0\", this.state.selectedVals[2]['percent'], \"%\") : null)))), /*#__PURE__*/React.createElement(Col, {\n        xl: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 33\n        }\n      }, \"Range Slider with Steps\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted font-14\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }\n      }, \"Slider with range selecrtor with fixed step value\"), /*#__PURE__*/React.createElement(Nouislider, {\n        range: {\n          min: 10,\n          max: 150\n        },\n        start: [20, 45],\n        step: 15,\n        connect: true,\n        onSlide: function onSlide(render, handle, value, un, percent) {\n          return _this2.onSlide2(2, value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mt-2 mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }, \"Value:\", ' ', this.state.selectedRanges ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 66\n        }\n      }, this.state.selectedRanges[2]) : null))))));\n    }\n  }]);\n\n  return RangeSliders;\n}(Component);\n\nexport default RangeSliders;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/uikit/RangeSliders.js"],"names":["React","Component","Row","Col","Card","CardBody","Nouislider","PageTitle","RangeSliders","props","onSlide","index","value","percent","selectedVals","state","textValue","toFixed","setState","onSlide2","selectedRanges","bind","label","path","active","min","max","render","handle","un"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport Nouislider from 'nouislider-react';\nimport 'nouislider/distribute/nouislider.css';\n\nimport PageTitle from '../../components/PageTitle';\n\n// RangeSliders\nclass RangeSliders extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedVals: { 1: { textValue: 20, percent: 20 }, 2: { textValue: 20, percent: 20 } },\n            selectedRanges: { 1: '20-45', 2: '20-45' },\n        };\n\n        this.onSlide = this.onSlide.bind(this);\n        this.onSlide2 = this.onSlide2.bind(this);\n    }\n\n    onSlide = (index, value, percent) => {\n        let selectedVals = { ...this.state.selectedVals };\n        selectedVals[index] = {\n            textValue: value[0].toFixed(2),\n            percent: percent[0].toFixed(2),\n        };\n        this.setState({ selectedVals: selectedVals });\n    };\n\n    onSlide2 = (index, value) => {\n        let selectedRanges = { ...this.state.selectedRanges };\n        selectedRanges[index] = value[0].toFixed(2) + '-' + value[1].toFixed(2);\n        this.setState({ selectedRanges: selectedRanges });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageTitle\n                    breadCrumbItems={[\n                        { label: 'UI', path: '/ui/rangesliders' },\n                        { label: 'Extended UI', path: '/ui/rangesliders' },\n                        { label: 'Range Sliders', path: '/ui/rangesliders', active: true },\n                    ]}\n                    title={'Range Sliders'}\n                />\n\n                <Row>\n                    <Col xl={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title\">Single</h4>\n                                <p className=\"text-muted font-14\">Slider with single selecrtor</p>\n\n                                <Nouislider\n                                    range={{ min: 0, max: 100 }}\n                                    start={[20]}\n                                    connect\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide(1, value, percent)}\n                                />\n                                <p className=\"mt-2 mb-0\">\n                                    Value:{' '}\n                                    {this.state.selectedVals ? (\n                                        <span>\n                                            {this.state.selectedVals[1]['textValue']}, &nbsp;\n                                            {this.state.selectedVals[1]['percent']}%\n                                        </span>\n                                    ) : null}\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    <Col xl={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title\">Range</h4>\n                                <p className=\"text-muted font-14\">Slider with range selecrtor</p>\n\n                                <Nouislider\n                                    range={{ min: 10, max: 150 }}\n                                    start={[20, 45]}\n                                    connect\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide2(1, value)}\n                                />\n                                <p className=\"mt-2 mb-0\">\n                                    Value:{' '}\n                                    {this.state.selectedRanges ? <span>{this.state.selectedRanges[1]}</span> : null}\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title\">Slider Step</h4>\n                                <p className=\"text-muted font-14\">Slider with step value</p>\n\n                                <Nouislider\n                                    range={{ min: 0, max: 100 }}\n                                    start={[20]}\n                                    step={10}\n                                    connect\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide(2, value, percent)}\n                                />\n                                <p className=\"mt-2 mb-0\">\n                                    Value:{' '}\n                                    {this.state.selectedVals ? (\n                                        <span>\n                                            {this.state.selectedVals[2]['textValue']}, &nbsp;\n                                            {this.state.selectedVals[2]['percent']}%\n                                        </span>\n                                    ) : null}\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n                    <Col xl={6}>\n                        <Card>\n                            <CardBody>\n                                <h4 className=\"header-title\">Range Slider with Steps</h4>\n                                <p className=\"text-muted font-14\">Slider with range selecrtor with fixed step value</p>\n\n                                <Nouislider\n                                    range={{ min: 10, max: 150 }}\n                                    start={[20, 45]}\n                                    step={15}\n                                    connect\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide2(2, value)}\n                                />\n                                <p className=\"mt-2 mb-0\">\n                                    Value:{' '}\n                                    {this.state.selectedRanges ? <span>{this.state.selectedRanges[2]}</span> : null}\n                                </p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default RangeSliders;\n"]},"metadata":{},"sourceType":"module"}