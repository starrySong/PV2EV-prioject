{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\dashboards\\\\CRM\\\\KakaoMap.js\";\n\n/*global kakao*/\nimport React, { useEffect } from 'react';\n\nvar Location = function Location() {\n  useEffect(function () {\n    var markers = [];\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div\n    mapOption = {\n      center: new kakao.maps.LatLng(37.566826, 126.9786567),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n\n    }; // 지도를 생성합니다\n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 장소 검색 객체를 생성합니다\n\n    var ps = new kakao.maps.services.Places(); // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n\n    var infowindow = new kakao.maps.InfoWindow({\n      zIndex: 1\n    }); // 키워드로 장소를 검색합니다\n\n    searchPlaces(); // 키워드 검색을 요청하는 함수입니다\n\n    function searchPlaces() {\n      var keyword = document.getElementById('keyword').value;\n\n      if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\n        alert('키워드를 입력해주세요!');\n        return false;\n      } // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n\n\n      ps.keywordSearch(keyword, placesSearchCB);\n    } // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        // 정상적으로 검색이 완료됐으면\n        // 검색 목록과 마커를 표출합니다\n        displayPlaces(data); // 페이지 번호를 표출합니다\n\n        displayPagination(pagination);\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n        alert('검색 결과가 존재하지 않습니다.');\n        return;\n      } else if (status === kakao.maps.services.Status.ERROR) {\n        alert('검색 결과 중 오류가 발생했습니다.');\n        return;\n      }\n    } // 검색 결과 목록과 마커를 표출하는 함수입니다\n\n\n    function displayPlaces(places) {\n      var listEl = document.getElementById('placesList'),\n          menuEl = document.getElementById('menu_wrap'),\n          fragment = document.createDocumentFragment(),\n          bounds = new kakao.maps.LatLngBounds(),\n          listStr = ''; // 검색 결과 목록에 추가된 항목들을 제거합니다\n\n      removeAllChildNods(listEl); // 지도에 표시되고 있는 마커를 제거합니다\n\n      removeMarker();\n\n      for (var i = 0; i < places.length; i++) {\n        // 마커를 생성하고 지도에 표시합니다\n        var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\n            marker = addMarker(placePosition, i),\n            itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n        // LatLngBounds 객체에 좌표를 추가합니다\n\n        bounds.extend(placePosition); // 마커와 검색결과 항목에 mouseover 했을때\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\n        // mouseout 했을 때는 인포윈도우를 닫습니다\n\n        (function (marker, title) {\n          kakao.maps.event.addListener(marker, 'mouseover', function () {\n            displayInfowindow(marker, title);\n          });\n          kakao.maps.event.addListener(marker, 'mouseout', function () {\n            infowindow.close();\n          });\n\n          itemEl.onmouseover = function () {\n            displayInfowindow(marker, title);\n          };\n\n          itemEl.onmouseout = function () {\n            infowindow.close();\n          };\n        })(marker, places[i].place_name);\n\n        fragment.appendChild(itemEl);\n      } // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\n\n\n      listEl.appendChild(fragment);\n      menuEl.scrollTop = 0; // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n\n      map.setBounds(bounds);\n    } // 검색결과 항목을 Element로 반환하는 함수입니다\n\n\n    function getListItem(index, places) {\n      var el = document.createElement('li'),\n          itemStr = '<span class=\"markerbg marker_' + (index + 1) + '\"></span>' + '<div class=\"info\">' + '   <h5>' + places.place_name + '</h5>';\n\n      if (places.road_address_name) {\n        itemStr += '    <span>' + places.road_address_name + '</span>' + '   <span class=\"jibun gray\">' + places.address_name + '</span>';\n      } else {\n        itemStr += '    <span>' + places.address_name + '</span>';\n      }\n\n      itemStr += '  <span class=\"tel\">' + places.phone + '</span>' + '</div>';\n      el.innerHTML = itemStr;\n      el.className = 'item';\n      return el;\n    } // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n\n\n    function addMarker(position, idx, title) {\n      var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png',\n          // 마커 이미지 url, 스프라이트 이미지를 씁니다\n      imageSize = new kakao.maps.Size(36, 37),\n          // 마커 이미지의 크기\n      imgOptions = {\n        spriteSize: new kakao.maps.Size(36, 691),\n        // 스프라이트 이미지의 크기\n        spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10),\n        // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n        offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n\n      },\n          markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n          marker = new kakao.maps.Marker({\n        position: position,\n        // 마커의 위치\n        image: markerImage\n      });\n      marker.setMap(map); // 지도 위에 마커를 표출합니다\n\n      markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n      return marker;\n    } // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n\n\n    function removeMarker() {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n\n      markers = [];\n    } // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\n\n\n    function displayPagination(pagination) {\n      var paginationEl = document.getElementById('pagination'),\n          fragment = document.createDocumentFragment(),\n          i; // 기존에 추가된 페이지번호를 삭제합니다\n\n      while (paginationEl.hasChildNodes()) {\n        paginationEl.removeChild(paginationEl.lastChild);\n      }\n\n      for (i = 1; i <= pagination.last; i++) {\n        var el = document.createElement('a');\n        el.href = \"#\";\n        el.innerHTML = i;\n\n        if (i === pagination.current) {\n          el.className = 'on';\n        } else {\n          el.onclick = function (i) {\n            return function () {\n              pagination.gotoPage(i);\n            };\n          }(i);\n        }\n\n        fragment.appendChild(el);\n      }\n\n      paginationEl.appendChild(fragment);\n    } // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n    // 인포윈도우에 장소명을 표시합니다\n\n\n    function displayInfowindow(marker, title) {\n      var content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\n      infowindow.setContent(content);\n      infowindow.open(map, marker);\n    } // 검색결과 목록의 자식 Element를 제거하는 함수입니다\n\n\n    function removeAllChildNods(el) {\n      while (el.hasChildNodes()) {\n        el.removeChild(el.lastChild);\n      }\n    }\n\n    marker.setMap(map);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"500px\",\n      height: \"400px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Location;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/dashboards/CRM/KakaoMap.js"],"names":["React","useEffect","Location","markers","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","map","Map","ps","services","Places","infowindow","InfoWindow","zIndex","searchPlaces","keyword","value","replace","alert","keywordSearch","placesSearchCB","data","status","pagination","Status","OK","displayPlaces","displayPagination","ZERO_RESULT","ERROR","places","listEl","menuEl","fragment","createDocumentFragment","bounds","LatLngBounds","listStr","removeAllChildNods","removeMarker","i","length","placePosition","y","x","marker","addMarker","itemEl","getListItem","extend","title","event","addListener","displayInfowindow","close","onmouseover","onmouseout","place_name","appendChild","scrollTop","setBounds","index","el","createElement","itemStr","road_address_name","address_name","phone","innerHTML","className","position","idx","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","image","setMap","push","paginationEl","hasChildNodes","removeChild","lastChild","last","href","current","onclick","gotoPage","content","setContent","open","width","height"],"mappings":"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","sourcesContent":["/*global kakao*/\r\nimport React, { useEffect } from 'react'\r\n\r\n\r\n\r\nconst Location=()=>{\r\n\r\n  useEffect(()=>{\r\n    var markers = [];\r\n\r\nvar mapContainer = document.getElementById('map'), // 지도를 표시할 div\r\n    mapOption = {\r\n        center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n        level: 3 // 지도의 확대 레벨\r\n    };\r\n\r\n// 지도를 생성합니다\r\nvar map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n// 장소 검색 객체를 생성합니다\r\nvar ps = new kakao.maps.services.Places();\r\n\r\n// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\nvar infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n\r\n// 키워드로 장소를 검색합니다\r\nsearchPlaces();\r\n\r\n// 키워드 검색을 요청하는 함수입니다\r\nfunction searchPlaces() {\r\n\r\n    var keyword = document.getElementById('keyword').value;\r\n\r\n    if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\r\n        alert('키워드를 입력해주세요!');\r\n        return false;\r\n    }\r\n\r\n    // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n    ps.keywordSearch( keyword, placesSearchCB);\r\n}\r\n\r\n// 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\nfunction placesSearchCB(data, status, pagination) {\r\n    if (status === kakao.maps.services.Status.OK) {\r\n\r\n        // 정상적으로 검색이 완료됐으면\r\n        // 검색 목록과 마커를 표출합니다\r\n        displayPlaces(data);\r\n\r\n        // 페이지 번호를 표출합니다\r\n        displayPagination(pagination);\r\n\r\n    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n\r\n        alert('검색 결과가 존재하지 않습니다.');\r\n        return;\r\n\r\n    } else if (status === kakao.maps.services.Status.ERROR) {\r\n\r\n        alert('검색 결과 중 오류가 발생했습니다.');\r\n        return;\r\n\r\n    }\r\n}\r\n\r\n// 검색 결과 목록과 마커를 표출하는 함수입니다\r\nfunction displayPlaces(places) {\r\n\r\n    var listEl = document.getElementById('placesList'),\r\n    menuEl = document.getElementById('menu_wrap'),\r\n    fragment = document.createDocumentFragment(),\r\n    bounds = new kakao.maps.LatLngBounds(),\r\n    listStr = '';\r\n\r\n    // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n    removeAllChildNods(listEl);\r\n\r\n    // 지도에 표시되고 있는 마커를 제거합니다\r\n    removeMarker();\r\n\r\n    for ( var i=0; i<places.length; i++ ) {\r\n\r\n        // 마커를 생성하고 지도에 표시합니다\r\n        var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n            marker = addMarker(placePosition, i),\r\n            itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n\r\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        bounds.extend(placePosition);\r\n\r\n        // 마커와 검색결과 항목에 mouseover 했을때\r\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n        // mouseout 했을 때는 인포윈도우를 닫습니다\r\n        (function(marker, title) {\r\n            kakao.maps.event.addListener(marker, 'mouseover', function() {\r\n                displayInfowindow(marker, title);\r\n            });\r\n\r\n            kakao.maps.event.addListener(marker, 'mouseout', function() {\r\n                infowindow.close();\r\n            });\r\n\r\n            itemEl.onmouseover =  function () {\r\n                displayInfowindow(marker, title);\r\n            };\r\n\r\n            itemEl.onmouseout =  function () {\r\n                infowindow.close();\r\n            };\r\n        })(marker, places[i].place_name);\r\n\r\n        fragment.appendChild(itemEl);\r\n    }\r\n\r\n    // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n    listEl.appendChild(fragment);\r\n    menuEl.scrollTop = 0;\r\n\r\n    // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n    map.setBounds(bounds);\r\n}\r\n\r\n// 검색결과 항목을 Element로 반환하는 함수입니다\r\nfunction getListItem(index, places) {\r\n\r\n    var el = document.createElement('li'),\r\n    itemStr = '<span class=\"markerbg marker_' + (index+1) + '\"></span>' +\r\n                '<div class=\"info\">' +\r\n                '   <h5>' + places.place_name + '</h5>';\r\n\r\n    if (places.road_address_name) {\r\n        itemStr += '    <span>' + places.road_address_name + '</span>' +\r\n                    '   <span class=\"jibun gray\">' +  places.address_name  + '</span>';\r\n    } else {\r\n        itemStr += '    <span>' +  places.address_name  + '</span>';\r\n    }\r\n\r\n      itemStr += '  <span class=\"tel\">' + places.phone  + '</span>' +\r\n                '</div>';\r\n\r\n    el.innerHTML = itemStr;\r\n    el.className = 'item';\r\n\r\n    return el;\r\n}\r\n\r\n// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\nfunction addMarker(position, idx, title) {\r\n    var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n        imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기\r\n        imgOptions =  {\r\n            spriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n            spriteOrigin : new kakao.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n            offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n        },\r\n        markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n            marker = new kakao.maps.Marker({\r\n            position: position, // 마커의 위치\r\n            image: markerImage\r\n        });\r\n\r\n    marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n    markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n\r\n    return marker;\r\n}\r\n\r\n// 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\nfunction removeMarker() {\r\n    for ( var i = 0; i < markers.length; i++ ) {\r\n        markers[i].setMap(null);\r\n    }\r\n    markers = [];\r\n}\r\n\r\n// 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\nfunction displayPagination(pagination) {\r\n    var paginationEl = document.getElementById('pagination'),\r\n        fragment = document.createDocumentFragment(),\r\n        i;\r\n\r\n    // 기존에 추가된 페이지번호를 삭제합니다\r\n    while (paginationEl.hasChildNodes()) {\r\n        paginationEl.removeChild (paginationEl.lastChild);\r\n    }\r\n\r\n    for (i=1; i<=pagination.last; i++) {\r\n        var el = document.createElement('a');\r\n        el.href = \"#\";\r\n        el.innerHTML = i;\r\n\r\n        if (i===pagination.current) {\r\n            el.className = 'on';\r\n        } else {\r\n            el.onclick = (function(i) {\r\n                return function() {\r\n                    pagination.gotoPage(i);\r\n                }\r\n            })(i);\r\n        }\r\n\r\n        fragment.appendChild(el);\r\n    }\r\n    paginationEl.appendChild(fragment);\r\n}\r\n\r\n// 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n// 인포윈도우에 장소명을 표시합니다\r\nfunction displayInfowindow(marker, title) {\r\n    var content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\r\n\r\n    infowindow.setContent(content);\r\n    infowindow.open(map, marker);\r\n}\r\n\r\n // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\nfunction removeAllChildNods(el) {\r\n    while (el.hasChildNodes()) {\r\n        el.removeChild (el.lastChild);\r\n    }\r\n}\r\n  marker.setMap(map);\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div id=\"map\" style={{width:\"500px\", height:\"400px\"}}></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Location;"]},"metadata":{},"sourceType":"module"}