{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\uikit\\\\Popovers.js\";\n\nimport React from 'react';\nimport { Row, Col, Card, CardBody, UncontrolledPopover, PopoverHeader, PopoverBody, Button } from 'reactstrap';\nimport PageTitle from '../../components/PageTitle';\n\nvar Basic = function Basic() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"Simple Popover\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-14\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Popover is a component which displays a box with a content after a click on an element - similar to the tooltip but can contain more content.\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"UncontrolledPopover\",\n    type: \"button\",\n    color: \"danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Launch Popover\"), /*#__PURE__*/React.createElement(UncontrolledPopover, {\n    placement: \"right\",\n    target: \"UncontrolledPopover\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Title goes here\"), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"And here's some amazing content. It's very engaging. Right?\"))));\n};\n\nvar Direction = function Direction() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Four Directions\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-14\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Four options are available: top, right, bottom, and left aligned.\"), [{\n    placement: 'top',\n    text: 'Top'\n  }, {\n    placement: 'bottom',\n    text: 'Bottom'\n  }, {\n    placement: 'left',\n    text: 'Left'\n  }, {\n    placement: 'right',\n    text: 'Right'\n  }].map(function (popover, i) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"popover-\".concat(popover.placement),\n      type: \"button\",\n      color: \"primary\",\n      className: \"mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, popover.text), /*#__PURE__*/React.createElement(UncontrolledPopover, {\n      placement: popover.placement,\n      target: \"popover-\".concat(popover.placement),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, popover.text), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, \"And here's some amazing content. It's very engaging. Right?\")));\n  })));\n};\n\nvar DimissibleOnClick = function DimissibleOnClick() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Dismissible popover\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-14\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"trigger\"), \" attribute with value \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 71\n    }\n  }, \"legacy\"), \" to dismiss popovers on the user's next click of a different element than the toggle element.\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"UncontrolledPopover2\",\n    type: \"button\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Dismiss on click\"), /*#__PURE__*/React.createElement(UncontrolledPopover, {\n    placement: \"right\",\n    target: \"UncontrolledPopover2\",\n    trigger: \"legacy\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Title goes here\"), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"And here's some amazing content. It's very engaging. Right?\"))));\n};\n\nvar HoverPopover = function HoverPopover() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Hover\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-14\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"trigger\"), \" attribute with value \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 71\n    }\n  }, \"hover\"), \" to show popover on hovering the element.\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"UncontrolledPopover3\",\n    type: \"button\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Show on hover\"), /*#__PURE__*/React.createElement(UncontrolledPopover, {\n    placement: \"right\",\n    target: \"UncontrolledPopover3\",\n    trigger: \"hover\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Title goes here\"), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"And here's some amazing content. It's very engaging. Right?\"))));\n};\n\nvar Popovers = function Popovers() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    breadCrumbItems: [{\n      label: 'UI',\n      path: '/ui/popovers'\n    }, {\n      label: 'Base UI',\n      path: '/ui/popovers'\n    }, {\n      label: 'Popovers',\n      path: '/ui/popovers',\n      active: true\n    }],\n    title: 'Popovers',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Basic, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Direction, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DimissibleOnClick, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(HoverPopover, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Popovers;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/uikit/Popovers.js"],"names":["React","Row","Col","Card","CardBody","UncontrolledPopover","PopoverHeader","PopoverBody","Button","PageTitle","Basic","Direction","placement","text","map","popover","i","DimissibleOnClick","HoverPopover","Popovers","label","path","active"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, CardBody, UncontrolledPopover, PopoverHeader, PopoverBody, Button } from 'reactstrap';\n\nimport PageTitle from '../../components/PageTitle';\n\nconst Basic = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Simple Popover</h4>\n                <p className=\"text-muted font-14\">\n                    Popover is a component which displays a box with a content after a click on an element - similar to\n                    the tooltip but can contain more content.\n                </p>\n\n                <Button id=\"UncontrolledPopover\" type=\"button\" color=\"danger\">\n                    Launch Popover\n                </Button>\n                <UncontrolledPopover placement=\"right\" target=\"UncontrolledPopover\">\n                    <PopoverHeader>Title goes here</PopoverHeader>\n                    <PopoverBody>And here's some amazing content. It's very engaging. Right?</PopoverBody>\n                </UncontrolledPopover>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Direction = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Four Directions</h4>\n                <p className=\"text-muted font-14\">Four options are available: top, right, bottom, and left aligned.</p>\n\n                {[\n                    {\n                        placement: 'top',\n                        text: 'Top',\n                    },\n                    {\n                        placement: 'bottom',\n                        text: 'Bottom',\n                    },\n                    {\n                        placement: 'left',\n                        text: 'Left',\n                    },\n                    {\n                        placement: 'right',\n                        text: 'Right',\n                    },\n                ].map((popover, i) => {\n                    return (\n                        <React.Fragment key={i}>\n                            <Button id={`popover-${popover.placement}`} type=\"button\" color=\"primary\" className=\"mr-1\">\n                                {popover.text}\n                            </Button>\n                            <UncontrolledPopover placement={popover.placement} target={`popover-${popover.placement}`}>\n                                <PopoverHeader>{popover.text}</PopoverHeader>\n                                <PopoverBody>And here's some amazing content. It's very engaging. Right?</PopoverBody>\n                            </UncontrolledPopover>\n                        </React.Fragment>\n                    );\n                })}\n            </CardBody>\n        </Card>\n    );\n};\n\nconst DimissibleOnClick = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Dismissible popover</h4>\n                <p className=\"text-muted font-14\">\n                    Use the <code>trigger</code> attribute with value <code>legacy</code> to dismiss popovers on the\n                    user's next click of a different element than the toggle element.\n                </p>\n\n                <Button id=\"UncontrolledPopover2\" type=\"button\" color=\"primary\">\n                    Dismiss on click\n                </Button>\n                <UncontrolledPopover placement=\"right\" target=\"UncontrolledPopover2\" trigger=\"legacy\">\n                    <PopoverHeader>Title goes here</PopoverHeader>\n                    <PopoverBody>And here's some amazing content. It's very engaging. Right?</PopoverBody>\n                </UncontrolledPopover>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst HoverPopover = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Hover</h4>\n                <p className=\"text-muted font-14\">\n                    Use the <code>trigger</code> attribute with value <code>hover</code> to show popover on hovering the\n                    element.\n                </p>\n\n                <Button id=\"UncontrolledPopover3\" type=\"button\" color=\"primary\">\n                    Show on hover\n                </Button>\n                <UncontrolledPopover placement=\"right\" target=\"UncontrolledPopover3\" trigger=\"hover\">\n                    <PopoverHeader>Title goes here</PopoverHeader>\n                    <PopoverBody>And here's some amazing content. It's very engaging. Right?</PopoverBody>\n                </UncontrolledPopover>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Popovers = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'UI', path: '/ui/popovers' },\n                    { label: 'Base UI', path: '/ui/popovers' },\n                    { label: 'Popovers', path: '/ui/popovers', active: true },\n                ]}\n                title={'Popovers'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <Basic />\n                </Col>\n                <Col xl={6}>\n                    <Direction />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <DimissibleOnClick />\n                </Col>\n                <Col xl={6}>\n                    <HoverPopover />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Popovers;\n"]},"metadata":{},"sourceType":"module"}