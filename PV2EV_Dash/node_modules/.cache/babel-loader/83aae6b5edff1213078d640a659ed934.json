{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\dashboards\\\\MyAnalytics\\\\GoogleMaps.js\";\n\nimport React from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport PageTitle from '../../../components/PageTitle';\n\nvar BasicMap = function BasicMap(props) {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Basic Google Map\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gmaps\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    google: props.google,\n    zoom: 14,\n    initialCenter: {\n      lat: 21.569874,\n      lng: 71.5893798\n    },\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar MapWithMarker = function MapWithMarker(props) {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Google Map with Marker\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gmaps\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    google: props.google,\n    zoom: 18,\n    initialCenter: {\n      lat: 21.569874,\n      lng: 71.5893798\n    },\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    title: 'This is sweet home.',\n    name: 'Home sweet home!',\n    position: {\n      lat: 21.569874,\n      lng: 71.5893798\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  })))));\n};\n\nvar StreetViewMap = function StreetViewMap(props) {\n  var mapRef = {\n    map: {}\n  };\n  /**\n   * Activate the street view\n   */\n\n  var activateStreetView = function activateStreetView(position) {\n    if (mapRef) {\n      var mapObj = mapRef.map.getStreetView();\n      mapObj.setPov({\n        heading: 34,\n        pitch: 10\n      });\n      mapObj.setPosition(position);\n      mapObj.setVisible(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Street View Panoramas Google Map\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gmaps\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    google: props.google,\n    ref: function ref(map) {\n      return mapRef = map;\n    },\n    zoom: 14,\n    initialCenter: {\n      lat: 40.7295174,\n      lng: -73.9986496\n    },\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    },\n    streetViewControl: true,\n    onReady: function onReady() {\n      activateStreetView({\n        lat: 40.7295174,\n        lng: -73.9986496\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar LightStyledMap = function LightStyledMap(props) {\n  var mapStyles = [{\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#e9e9e9'\n    }, {\n      lightness: 17\n    }]\n  }, {\n    featureType: 'landscape',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#f5f5f5'\n    }, {\n      lightness: 20\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: '#ffffff'\n    }, {\n      lightness: 17\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry.stroke',\n    stylers: [{\n      color: '#ffffff'\n    }, {\n      lightness: 29\n    }, {\n      weight: 0.2\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#ffffff'\n    }, {\n      lightness: 18\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#ffffff'\n    }, {\n      lightness: 16\n    }]\n  }, {\n    featureType: 'poi',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#f5f5f5'\n    }, {\n      lightness: 21\n    }]\n  }, {\n    featureType: 'poi.park',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#dedede'\n    }, {\n      lightness: 21\n    }]\n  }, {\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      visibility: 'on'\n    }, {\n      color: '#ffffff'\n    }, {\n      lightness: 16\n    }]\n  }, {\n    elementType: 'labels.text.fill',\n    stylers: [{\n      saturation: 36\n    }, {\n      color: '#333333'\n    }, {\n      lightness: 40\n    }]\n  }, {\n    elementType: 'labels.icon',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'transit',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#f2f2f2'\n    }, {\n      lightness: 19\n    }]\n  }, {\n    featureType: 'administrative',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: '#fefefe'\n    }, {\n      lightness: 20\n    }]\n  }, {\n    featureType: 'administrative',\n    elementType: 'geometry.stroke',\n    stylers: [{\n      color: '#fefefe'\n    }, {\n      lightness: 17\n    }, {\n      weight: 1.2\n    }]\n  }];\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Ultra Light with Labels\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gmaps\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    google: props.google,\n    zoom: 14,\n    initialCenter: {\n      lat: 40.7295174,\n      lng: -73.9986496\n    },\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    },\n    styles: mapStyles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar DarkStyledMap = function DarkStyledMap(props) {\n  var mapStyles = [{\n    featureType: 'all',\n    elementType: 'labels',\n    stylers: [{\n      visibility: 'on'\n    }]\n  }, {\n    featureType: 'all',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      saturation: 36\n    }, {\n      color: '#000000'\n    }, {\n      lightness: 40\n    }]\n  }, {\n    featureType: 'all',\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      visibility: 'on'\n    }, {\n      color: '#000000'\n    }, {\n      lightness: 16\n    }]\n  }, {\n    featureType: 'all',\n    elementType: 'labels.icon',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 20\n    }]\n  }, {\n    featureType: 'administrative',\n    elementType: 'geometry.stroke',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 17\n    }, {\n      weight: 1.2\n    }]\n  }, {\n    featureType: 'administrative.country',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#e5c163'\n    }]\n  }, {\n    featureType: 'administrative.locality',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#c4c4c4'\n    }]\n  }, {\n    featureType: 'administrative.neighborhood',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#e5c163'\n    }]\n  }, {\n    featureType: 'landscape',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 20\n    }]\n  }, {\n    featureType: 'poi',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 21\n    }, {\n      visibility: 'on'\n    }]\n  }, {\n    featureType: 'poi.business',\n    elementType: 'geometry',\n    stylers: [{\n      visibility: 'on'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: '#e5c163'\n    }, {\n      lightness: '0'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry.stroke',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#ffffff'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      color: '#e5c163'\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 18\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: '#575757'\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#ffffff'\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      color: '#2c2c2c'\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 16\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#999999'\n    }]\n  }, {\n    featureType: 'transit',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 19\n    }]\n  }, {\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 17\n    }]\n  }];\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, \"Dark\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gmaps\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    google: props.google,\n    zoom: 14,\n    initialCenter: {\n      lat: 40.7295174,\n      lng: -73.9986496\n    },\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    },\n    styles: mapStyles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar GoogleMaps = function GoogleMaps(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    breadCrumbItems: [{\n      label: 'Maps',\n      path: '/features/googlemaps'\n    }, {\n      label: 'Google Maps',\n      path: '/features/googlemaps',\n      active: true\n    }],\n    title: 'Google Maps',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BasicMap, {\n    google: props.google,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MapWithMarker, {\n    google: props.google,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StreetViewMap, {\n    google: props.google,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LightStyledMap, {\n    google: props.google,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DarkStyledMap, {\n    google: props.google,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA'\n})(GoogleMaps);","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/dashboards/MyAnalytics/GoogleMaps.js"],"names":["React","Row","Col","Card","CardBody","Map","Marker","GoogleApiWrapper","PageTitle","BasicMap","props","google","lat","lng","width","height","position","MapWithMarker","StreetViewMap","mapRef","map","activateStreetView","mapObj","getStreetView","setPov","heading","pitch","setPosition","setVisible","LightStyledMap","mapStyles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyledMap","GoogleMaps","label","path","active","apiKey"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\n\nimport PageTitle from '../../../components/PageTitle';\n\nconst BasicMap = props => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mb-3\">Basic Google Map</h4>\n\n                <div className=\"gmaps\">\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}></Map>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst MapWithMarker = props => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mb-3\">Google Map with Marker</h4>\n                <div className=\"gmaps\">\n                    <Map\n                        google={props.google}\n                        zoom={18}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}>\n                        <Marker\n                            title={'This is sweet home.'}\n                            name={'Home sweet home!'}\n                            position={{ lat: 21.569874, lng: 71.5893798 }}></Marker>\n                    </Map>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst StreetViewMap = props => {\n    let mapRef = { map: {} };\n\n    /**\n     * Activate the street view\n     */\n    const activateStreetView = position => {\n        if (mapRef) {\n            const mapObj = mapRef.map.getStreetView();\n            mapObj.setPov({ heading: 34, pitch: 10 });\n            mapObj.setPosition(position);\n            mapObj.setVisible(true);\n        }\n    };\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mb-3\">Street View Panoramas Google Map</h4>\n\n                <div className=\"gmaps\">\n                    <Map\n                        google={props.google}\n                        ref={map => (mapRef = map)}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        streetViewControl={true}\n                        onReady={() => {\n                            activateStreetView({ lat: 40.7295174, lng: -73.9986496 });\n                        }}></Map>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst LightStyledMap = props => {\n    const mapStyles = [\n        { featureType: 'water', elementType: 'geometry', stylers: [{ color: '#e9e9e9' }, { lightness: 17 }] },\n        { featureType: 'landscape', elementType: 'geometry', stylers: [{ color: '#f5f5f5' }, { lightness: 20 }] },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#ffffff' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#ffffff' }, { lightness: 29 }, { weight: 0.2 }],\n        },\n        { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: '#ffffff' }, { lightness: 18 }] },\n        { featureType: 'road.local', elementType: 'geometry', stylers: [{ color: '#ffffff' }, { lightness: 16 }] },\n        { featureType: 'poi', elementType: 'geometry', stylers: [{ color: '#f5f5f5' }, { lightness: 21 }] },\n        { featureType: 'poi.park', elementType: 'geometry', stylers: [{ color: '#dedede' }, { lightness: 21 }] },\n        { elementType: 'labels.text.stroke', stylers: [{ visibility: 'on' }, { color: '#ffffff' }, { lightness: 16 }] },\n        { elementType: 'labels.text.fill', stylers: [{ saturation: 36 }, { color: '#333333' }, { lightness: 40 }] },\n        { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n        { featureType: 'transit', elementType: 'geometry', stylers: [{ color: '#f2f2f2' }, { lightness: 19 }] },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#fefefe' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#fefefe' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mb-3\">Ultra Light with Labels</h4>\n\n                <div className=\"gmaps\">\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}></Map>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst DarkStyledMap = props => {\n    const mapStyles = [\n        { featureType: 'all', elementType: 'labels', stylers: [{ visibility: 'on' }] },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#000000' }, { lightness: 40 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#000000' }, { lightness: 16 }],\n        },\n        { featureType: 'all', elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#000000' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n        { featureType: 'administrative.country', elementType: 'labels.text.fill', stylers: [{ color: '#e5c163' }] },\n        { featureType: 'administrative.locality', elementType: 'labels.text.fill', stylers: [{ color: '#c4c4c4' }] },\n        {\n            featureType: 'administrative.neighborhood',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        { featureType: 'landscape', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 20 }] },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 21 }, { visibility: 'on' }],\n        },\n        { featureType: 'poi.business', elementType: 'geometry', stylers: [{ visibility: 'on' }] },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#e5c163' }, { lightness: '0' }],\n        },\n        { featureType: 'road.highway', elementType: 'geometry.stroke', stylers: [{ visibility: 'off' }] },\n        { featureType: 'road.highway', elementType: 'labels.text.fill', stylers: [{ color: '#ffffff' }] },\n        { featureType: 'road.highway', elementType: 'labels.text.stroke', stylers: [{ color: '#e5c163' }] },\n        { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 18 }] },\n        { featureType: 'road.arterial', elementType: 'geometry.fill', stylers: [{ color: '#575757' }] },\n        { featureType: 'road.arterial', elementType: 'labels.text.fill', stylers: [{ color: '#ffffff' }] },\n        { featureType: 'road.arterial', elementType: 'labels.text.stroke', stylers: [{ color: '#2c2c2c' }] },\n        { featureType: 'road.local', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 16 }] },\n        { featureType: 'road.local', elementType: 'labels.text.fill', stylers: [{ color: '#999999' }] },\n        { featureType: 'transit', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 19 }] },\n        { featureType: 'water', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 17 }] },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mb-3\">Dark</h4>\n\n                <div className=\"gmaps\">\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}></Map>\n                </div>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst GoogleMaps = props => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Maps', path: '/features/googlemaps' },\n                    { label: 'Google Maps', path: '/features/googlemaps', active: true },\n                ]}\n                title={'Google Maps'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <BasicMap google={props.google} />\n                </Col>\n\n                <Col lg={6}>\n                    <MapWithMarker google={props.google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <StreetViewMap google={props.google} />\n                </Col>\n\n                <Col lg={6}>\n                    <LightStyledMap google={props.google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <DarkStyledMap google={props.google} />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA',\n})(GoogleMaps);\n"]},"metadata":{},"sourceType":"module"}