{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\dashboards\\\\PV2EVDash2\\\\Widgets.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport StatisticsWidget from '../../../components/StatisticsWidget';\n\nvar Widgets = function Widgets(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalEVParked = _useState2[0],\n      setTotalEVParked = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      predictSales = _useState4[0],\n      setPredictSales = _useState4[1];\n\n  useEffect(function () {\n    // POST request using fetch inside useEffect React hook\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        totalEVParked: totalEVParked\n      })\n    };\n    fetch('http://127.0.0.1:5000/predictsales', requestOptions).then(function (response) {\n      // 서버 요청에 대한 응답받는 코드\n      response.json().then(function (data) {\n        console.log(data);\n        setPredictSales(data.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n      });\n    });\n  }, []); // 계속 실행되어야할 것 같아서 []파라미터 안씀\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n    icon: \"mdi mdi-account-multiple\",\n    description: \"Number of Customers\",\n    title: \"\\uC608\\uC0C1\\uAE30\\uB300\\uC218\\uC775\",\n    stats: predictSales + \" 원\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Widgets;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/dashboards/PV2EVDash2/Widgets.js"],"names":["React","useEffect","useState","Row","Col","StatisticsWidget","Widgets","props","totalEVParked","setTotalEVParked","predictSales","setPredictSales","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","console","log","toString","replace"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACIC,GADJ,EAEIC,GAFJ,QAGO,YAHP;AAKA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,kBACkBL,QAAQ,CAAC,CAAD,CAD1B;AAAA;AAAA,MAChBM,aADgB;AAAA,MACFC,gBADE;;AAAA,mBAEiBP,QAAQ,CAAC,CAAD,CAFzB;AAAA;AAAA,MAEhBQ,YAFgB;AAAA,MAEFC,eAFE;;AAGvBV,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA,QAAMW,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAET,QAAAA,aAAa,EAAEA;AAAjB,OAAf;AAHa,KAAvB;AAKAU,IAAAA,KAAK,CAAC,oCAAD,EAAuCN,cAAvC,CAAL,CACKO,IADL,CACU,UAACC,QAAD,EAAc;AAAE;AAClBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAASG,IAAT,EAAe;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAX,QAAAA,eAAe,CAACW,IAAI,CAACG,QAAL,GAAgBC,OAAhB,CAAwB,uBAAxB,EAAiD,GAAjD,CAAD,CAAf;AACH,OAHG;AAIP,KAND;AAOH,GAdQ,EAcP,EAdO,CAAT,CAHuB,CAiBhB;;AAEP,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,IAAI,EAAC,0BADT;AAEI,IAAA,WAAW,EAAC,qBAFhB;AAGI,IAAA,KAAK,EAAC,sCAHV;AAII,IAAA,KAAK,EAAEhB,YAAY,GAAG,IAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFJ,CADJ;AAgBH,CAnCD;;AAqCA,eAAeJ,OAAf","sourcesContent":["// @flow\r\nimport React, {useEffect, useState} from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n} from 'reactstrap';\r\n\r\nimport StatisticsWidget from '../../../components/StatisticsWidget';\r\n\r\n\r\nconst Widgets = (props) => {\r\n    const [totalEVParked,setTotalEVParked] = useState(0);\r\n    const [predictSales, setPredictSales] = useState(0);\r\n    useEffect(() => {\r\n        // POST request using fetch inside useEffect React hook\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ totalEVParked: totalEVParked})\r\n        };\r\n        fetch('http://127.0.0.1:5000/predictsales', requestOptions)\r\n            .then((response) => { // 서버 요청에 대한 응답받는 코드\r\n                response.json().then(function(data) {\r\n                console.log(data);\r\n                setPredictSales(data.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\r\n            })\r\n        })\r\n    },[]); // 계속 실행되어야할 것 같아서 []파라미터 안씀\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* StatisticsWidget */}\r\n            <Row>\r\n                <Col>\r\n                    <StatisticsWidget\r\n                        icon=\"mdi mdi-account-multiple\"\r\n                        description=\"Number of Customers\"\r\n                        title=\"예상기대수익\"\r\n                        stats={predictSales + \" 원\"}\r\n                        ></StatisticsWidget>\r\n                </Col>\r\n            </Row>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Widgets;"]},"metadata":{},"sourceType":"module"}