{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\components\\\\Spinner.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n/**\n * Spinner\n */\nvar Spinner = function Spinner(props) {\n  var children = props.children || null;\n  var Tag = props.tag;\n  return /*#__PURE__*/React.createElement(Tag, {\n    role: \"status\",\n    className: classNames({\n      'spinner-border': props.type === 'bordered',\n      'spinner-grow': props.type === 'grow'\n    }, [\"text-\".concat(props.color)], {\n      [\"avatar-\".concat(props.size)]: props.size\n    }, props.className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nSpinner.defaultProps = {\n  tag: 'div',\n  type: 'bordered',\n  color: 'primary'\n};\nexport default Spinner;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/components/Spinner.js"],"names":["React","PropTypes","classNames","Spinner","props","children","Tag","tag","type","color","size","className","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAWA;;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAyB;AACrC,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAN,IAAkB,IAAnC;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,GAAlB;AAEA,sBACI,oBAAC,GAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAEL,UAAU,CACjB;AAAE,wBAAkBE,KAAK,CAACI,IAAN,KAAe,UAAnC;AAA+C,sBAAgBJ,KAAK,CAACI,IAAN,KAAe;AAA9E,KADiB,EAEjB,gBAASJ,KAAK,CAACK,KAAf,EAFiB,EAGjB;AAAE,wBAAWL,KAAK,CAACM,IAAjB,IAA0BN,KAAK,CAACM;AAAlC,KAHiB,EAIjBN,KAAK,CAACO,SAJW,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKN,QARL,CADJ;AAYH,CAhBD;;AAkBAF,OAAO,CAACS,YAAR,GAAuB;AACnBL,EAAAA,GAAG,EAAE,KADc;AAEnBC,EAAAA,IAAI,EAAE,UAFa;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAAvB;AAMA,eAAeN,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm' | null,\n    type: 'bordered' | 'grow',\n    color: string,\n    children?: PropTypes.object,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps) => {\n    const children = props.children || null;\n    const Tag = props.tag;\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                { 'spinner-border': props.type === 'bordered', 'spinner-grow': props.type === 'grow' },\n                [`text-${props.color}`],\n                { [`avatar-${props.size}`]: props.size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n    color: 'primary',\n};\n\nexport default Spinner;\n"]},"metadata":{},"sourceType":"module"}