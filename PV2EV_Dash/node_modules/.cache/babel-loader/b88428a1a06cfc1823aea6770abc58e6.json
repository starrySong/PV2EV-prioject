{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\dashboards\\\\PV2EVDash1\\\\Widgets.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport StatisticsWidget from '../../../components/StatisticsWidget';\n\nvar Widgets = function Widgets(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      peckTime = _useState2[0],\n      setPeckTime = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      startTime = _useState4[0],\n      setStartTime = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      endTime = _useState6[0],\n      setEndTime = _useState6[1];\n\n  useEffect(function () {\n    // POST request using fetch inside useEffect React hook\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        totalEVParked: props.totalEVParked\n      })\n    };\n    fetch('http://127.0.0.1:5000/widget', requestOptions).then(function (response) {\n      // 서버 요청에 대한 응답받는 코드\n      response.json().then(function (data) {\n        console.log(data);\n        var Info = data[0]['endTime'] == 0 ? '피크시간 없음' : Math.floor(data[0]['endTime'] / 100) + '시' + data[0]['endTime'] % 100 + '분까지';\n        setEndTime(Info); // type = Object로 들고온다.\n\n        setStartTime(temp.toFixed(0) + '시' + data[0]['startTime'] % 100 + '분 부터');\n        setPeckTime(data[0]['predictPeck'] + '분간'); // 피크시간이 지속되는 시간(분)\n      });\n    });\n  }, []); // 계속 실행되어야할 것 같아서 []파라미터 안씀\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n    icon: \"mdi mdi-account-multiple\",\n    description: \"Number of Customers\",\n    title: \"\\uC1FC\\uD551\\uD53C\\uD06C\\uC2DC\\uAC04\",\n    stats: endTime,\n    trend: {\n      textClass: 'text-success',\n      icon: 'mdi mdi-arrow-up-bold',\n      value: peckTime,\n      time: startTime\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Widgets;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/dashboards/PV2EVDash1/Widgets.js"],"names":["React","useEffect","useState","Row","Col","StatisticsWidget","Widgets","props","peckTime","setPeckTime","startTime","setStartTime","endTime","setEndTime","requestOptions","method","headers","body","JSON","stringify","totalEVParked","fetch","then","response","json","data","console","log","Info","Math","floor","temp","toFixed","textClass","icon","value","time"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACIC,GADJ,EAEIC,GAFJ,QAGO,YAHP;AAKA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,kBAESL,QAAQ,CAAC,CAAD,CAFjB;AAAA;AAAA,MAEhBM,QAFgB;AAAA,MAENC,WAFM;;AAAA,mBAGWP,QAAQ,CAAC,EAAD,CAHnB;AAAA;AAAA,MAGhBQ,SAHgB;AAAA,MAGLC,YAHK;;AAAA,mBAIOT,QAAQ,CAAC,EAAD,CAJf;AAAA;AAAA,MAIhBU,OAJgB;AAAA,MAIPC,UAJO;;AAMvBZ,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA,QAAMa,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,aAAa,EAAEb,KAAK,CAACa;AAAvB,OAAf;AAHa,KAAvB;AAKAC,IAAAA,KAAK,CAAC,8BAAD,EAAiCP,cAAjC,CAAL,CACKQ,IADL,CACU,UAACC,QAAD,EAAc;AAAE;AAClBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAASG,IAAT,EAAe;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,IAAI,GAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQ,SAAR,KAAsB,CAAtB,GAAyB,SAAzB,GAAoCI,IAAI,CAACC,KAAL,CAAWL,IAAI,CAAC,CAAD,CAAJ,CAAQ,SAAR,IAAmB,GAA9B,IAAqC,GAArC,GAA0CA,IAAI,CAAC,CAAD,CAAJ,CAAQ,SAAR,IAAmB,GAA7D,GAAmE,KAApH;AACAZ,QAAAA,UAAU,CAACe,IAAD,CAAV,CAHoC,CAGnB;;AACjBjB,QAAAA,YAAY,CAACoB,IAAI,CAACC,OAAL,CAAa,CAAb,IAAkB,GAAlB,GAAuBP,IAAI,CAAC,CAAD,CAAJ,CAAQ,WAAR,IAAqB,GAA5C,GAAkD,MAAnD,CAAZ;AACAhB,QAAAA,WAAW,CAACgB,IAAI,CAAC,CAAD,CAAJ,CAAQ,aAAR,IAAuB,IAAxB,CAAX,CALoC,CAKM;AAC7C,OANG;AAOP,KATD;AAUH,GAjBQ,EAiBP,EAjBO,CAAT,CANuB,CAuBhB;;AAEP,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,IAAI,EAAC,0BADT;AAEI,IAAA,WAAW,EAAC,qBAFhB;AAGI,IAAA,KAAK,EAAC,sCAHV;AAII,IAAA,KAAK,EAAEb,OAJX;AAKI,IAAA,KAAK,EAAE;AACHqB,MAAAA,SAAS,EAAE,cADR;AAEHC,MAAAA,IAAI,EAAE,uBAFH;AAGHC,MAAAA,KAAK,EAAE3B,QAHJ;AAIH4B,MAAAA,IAAI,EAAE1B;AAJH,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFJ,CADJ;AAqBH,CA9CD;;AAgDA,eAAeJ,OAAf","sourcesContent":["// @flow\r\nimport React, {useEffect, useState} from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n} from 'reactstrap';\r\n\r\nimport StatisticsWidget from '../../../components/StatisticsWidget'\r\n\r\n\r\nconst Widgets = (props) => {\r\n\r\n    const [peckTime, setPeckTime] = useState(0)\r\n    const [startTime, setStartTime] = useState('')\r\n    const [endTime, setEndTime] = useState('')\r\n\r\n    useEffect(() => {\r\n        // POST request using fetch inside useEffect React hook\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ totalEVParked: props.totalEVParked})\r\n        };\r\n        fetch('http://127.0.0.1:5000/widget', requestOptions)\r\n            .then((response) => { // 서버 요청에 대한 응답받는 코드\r\n                response.json().then(function(data) {\r\n                console.log(data);\r\n                const Info = data[0]['endTime'] == 0? '피크시간 없음': Math.floor(data[0]['endTime']/100) + '시'+ data[0]['endTime']%100 + '분까지';\r\n                setEndTime(Info);// type = Object로 들고온다.\r\n                setStartTime(temp.toFixed(0) + '시'+ data[0]['startTime']%100 + '분 부터');\r\n                setPeckTime(data[0]['predictPeck']+'분간'); // 피크시간이 지속되는 시간(분)\r\n            })\r\n        })\r\n    },[]); // 계속 실행되어야할 것 같아서 []파라미터 안씀\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* StatisticsWidget */}\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <StatisticsWidget\r\n                        icon=\"mdi mdi-account-multiple\"\r\n                        description=\"Number of Customers\"\r\n                        title=\"쇼핑피크시간\"\r\n                        stats={endTime}\r\n                        trend={{\r\n                            textClass: 'text-success',\r\n                            icon: 'mdi mdi-arrow-up-bold',\r\n                            value: peckTime,\r\n                            time: startTime,\r\n                        }}></StatisticsWidget>\r\n                </Col>\r\n            </Row>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Widgets;\r\n"]},"metadata":{},"sourceType":"module"}