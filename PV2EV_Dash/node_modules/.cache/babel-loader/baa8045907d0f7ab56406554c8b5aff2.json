{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport React, { forwardRef } from 'react';\nimport Typeahead from '../core/Typeahead';\nimport { optionType } from '../propTypes';\nimport { getDisplayName, isFunction } from '../utils';\nvar propTypes = {\n  /**\n   * Delay, in milliseconds, before performing search.\n   */\n  delay: PropTypes.number,\n\n  /**\n   * Whether or not a request is currently pending. Necessary for the\n   * container to know when new results are available.\n   */\n  isLoading: PropTypes.bool.isRequired,\n\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * Callback to perform when the search is executed.\n   */\n  onSearch: PropTypes.func.isRequired,\n\n  /**\n   * Options to be passed to the typeahead. Will typically be the query\n   * results, but can also be initial default options.\n   */\n  options: PropTypes.arrayOf(optionType),\n\n  /**\n   * Message displayed in the menu when there is no user input.\n   */\n  promptText: PropTypes.node,\n\n  /**\n   * Message displayed in the menu while the request is pending.\n   */\n  searchText: PropTypes.node,\n\n  /**\n   * Whether or not the component should cache query results.\n   */\n  useCache: PropTypes.bool\n};\nvar defaultProps = {\n  delay: 200,\n  minLength: 2,\n  options: [],\n  promptText: 'Type to search...',\n  searchText: 'Searching...',\n  useCache: true\n};\n/**\n * HoC that encapsulates common behavior and functionality for doing\n * asynchronous searches, including:\n *\n *  - Debouncing user input\n *  - Optional query caching\n *  - Search prompt and empty results behaviors\n */\n\nvar asyncContainer = function asyncContainer(TypeaheadComponent) {\n  var AsyncTypeahead = /*#__PURE__*/function (_React$Component) {\n    _inheritsLoose(AsyncTypeahead, _React$Component);\n\n    function AsyncTypeahead() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n      _defineProperty(_assertThisInitialized(_this), \"_cache\", {});\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleSearchDebounced\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_query\", _this.props.defaultInputValue || '');\n\n      _defineProperty(_assertThisInitialized(_this), \"_getEmptyLabel\", function () {\n        var _this$props = _this.props,\n            emptyLabel = _this$props.emptyLabel,\n            isLoading = _this$props.isLoading,\n            promptText = _this$props.promptText,\n            searchText = _this$props.searchText;\n\n        if (!_this._query.length) {\n          return promptText;\n        }\n\n        if (isLoading) {\n          return searchText;\n        }\n\n        return emptyLabel;\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleInputChange\", function (query, e) {\n        _this.props.onInputChange && _this.props.onInputChange(query, e);\n\n        _this._handleSearchDebounced(query);\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleSearch\", function (query) {\n        _this._query = query;\n        var _this$props2 = _this.props,\n            minLength = _this$props2.minLength,\n            onSearch = _this$props2.onSearch,\n            useCache = _this$props2.useCache;\n\n        if (!query || minLength && query.length < minLength) {\n          return;\n        } // Use cached results, if applicable.\n\n\n        if (useCache && _this._cache[query]) {\n          // Re-render the component with the cached results.\n          _this.forceUpdate();\n\n          return;\n        } // Perform the search.\n\n\n        onSearch(query);\n      });\n\n      return _this;\n    }\n\n    var _proto = AsyncTypeahead.prototype;\n\n    _proto.componentDidMount = function componentDidMount() {\n      this._handleSearchDebounced = debounce(this._handleSearch, this.props.delay);\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          isLoading = _this$props3.isLoading,\n          options = _this$props3.options,\n          useCache = _this$props3.useCache; // Ensure that we've gone from a loading to a completed state. Otherwise\n      // an empty response could get cached if the component updates during the\n      // request (eg: if the parent re-renders for some reason).\n\n      if (!isLoading && prevProps.isLoading && useCache) {\n        this._cache[this._query] = options;\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._cache = {};\n      this._query = '';\n      this._handleSearchDebounced && this._handleSearchDebounced.cancel();\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          allowNew = _this$props4.allowNew,\n          instanceRef = _this$props4.instanceRef,\n          isLoading = _this$props4.isLoading,\n          options = _this$props4.options,\n          useCache = _this$props4.useCache,\n          props = _objectWithoutPropertiesLoose(_this$props4, [\"allowNew\", \"instanceRef\", \"isLoading\", \"options\", \"useCache\"]);\n\n      var cachedQuery = this._cache[this._query];\n      return /*#__PURE__*/React.createElement(TypeaheadComponent, _extends({}, props, {\n        allowNew: // Disable custom selections during a search unless\n        // `allowNew` is a function.\n        isFunction(allowNew) ? allowNew : allowNew && !isLoading,\n        emptyLabel: this._getEmptyLabel(),\n        isLoading: isLoading,\n        onInputChange: this._handleInputChange,\n        options: useCache && cachedQuery ? cachedQuery : options,\n        ref: instanceRef\n      }));\n    };\n\n    return AsyncTypeahead;\n  }(React.Component);\n\n  _defineProperty(AsyncTypeahead, \"displayName\", \"asyncContainer(\" + getDisplayName(Typeahead) + \")\");\n\n  _defineProperty(AsyncTypeahead, \"propTypes\", propTypes);\n\n  _defineProperty(AsyncTypeahead, \"defaultProps\", defaultProps);\n\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(AsyncTypeahead, _extends({}, props, {\n      instanceRef: ref\n    }));\n  });\n};\n\nexport default asyncContainer;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/node_modules/react-bootstrap-typeahead/es/containers/asyncContainer.js"],"names":["_extends","_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","_defineProperty","debounce","PropTypes","React","forwardRef","Typeahead","optionType","getDisplayName","isFunction","propTypes","delay","number","isLoading","bool","isRequired","minLength","onSearch","func","options","arrayOf","promptText","node","searchText","useCache","defaultProps","asyncContainer","TypeaheadComponent","AsyncTypeahead","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","props","defaultInputValue","_this$props","emptyLabel","_query","query","e","onInputChange","_handleSearchDebounced","_this$props2","_cache","forceUpdate","_proto","prototype","componentDidMount","_handleSearch","componentDidUpdate","prevProps","_this$props3","componentWillUnmount","cancel","render","_this$props4","allowNew","instanceRef","cachedQuery","createElement","_getEmptyLabel","_handleInputChange","ref","Component"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport React, { forwardRef } from 'react';\nimport Typeahead from '../core/Typeahead';\nimport { optionType } from '../propTypes';\nimport { getDisplayName, isFunction } from '../utils';\nvar propTypes = {\n  /**\n   * Delay, in milliseconds, before performing search.\n   */\n  delay: PropTypes.number,\n\n  /**\n   * Whether or not a request is currently pending. Necessary for the\n   * container to know when new results are available.\n   */\n  isLoading: PropTypes.bool.isRequired,\n\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * Callback to perform when the search is executed.\n   */\n  onSearch: PropTypes.func.isRequired,\n\n  /**\n   * Options to be passed to the typeahead. Will typically be the query\n   * results, but can also be initial default options.\n   */\n  options: PropTypes.arrayOf(optionType),\n\n  /**\n   * Message displayed in the menu when there is no user input.\n   */\n  promptText: PropTypes.node,\n\n  /**\n   * Message displayed in the menu while the request is pending.\n   */\n  searchText: PropTypes.node,\n\n  /**\n   * Whether or not the component should cache query results.\n   */\n  useCache: PropTypes.bool\n};\nvar defaultProps = {\n  delay: 200,\n  minLength: 2,\n  options: [],\n  promptText: 'Type to search...',\n  searchText: 'Searching...',\n  useCache: true\n};\n\n/**\n * HoC that encapsulates common behavior and functionality for doing\n * asynchronous searches, including:\n *\n *  - Debouncing user input\n *  - Optional query caching\n *  - Search prompt and empty results behaviors\n */\nvar asyncContainer = function asyncContainer(TypeaheadComponent) {\n  var AsyncTypeahead = /*#__PURE__*/function (_React$Component) {\n    _inheritsLoose(AsyncTypeahead, _React$Component);\n\n    function AsyncTypeahead() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n      _defineProperty(_assertThisInitialized(_this), \"_cache\", {});\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleSearchDebounced\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_query\", _this.props.defaultInputValue || '');\n\n      _defineProperty(_assertThisInitialized(_this), \"_getEmptyLabel\", function () {\n        var _this$props = _this.props,\n            emptyLabel = _this$props.emptyLabel,\n            isLoading = _this$props.isLoading,\n            promptText = _this$props.promptText,\n            searchText = _this$props.searchText;\n\n        if (!_this._query.length) {\n          return promptText;\n        }\n\n        if (isLoading) {\n          return searchText;\n        }\n\n        return emptyLabel;\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleInputChange\", function (query, e) {\n        _this.props.onInputChange && _this.props.onInputChange(query, e);\n\n        _this._handleSearchDebounced(query);\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleSearch\", function (query) {\n        _this._query = query;\n        var _this$props2 = _this.props,\n            minLength = _this$props2.minLength,\n            onSearch = _this$props2.onSearch,\n            useCache = _this$props2.useCache;\n\n        if (!query || minLength && query.length < minLength) {\n          return;\n        } // Use cached results, if applicable.\n\n\n        if (useCache && _this._cache[query]) {\n          // Re-render the component with the cached results.\n          _this.forceUpdate();\n\n          return;\n        } // Perform the search.\n\n\n        onSearch(query);\n      });\n\n      return _this;\n    }\n\n    var _proto = AsyncTypeahead.prototype;\n\n    _proto.componentDidMount = function componentDidMount() {\n      this._handleSearchDebounced = debounce(this._handleSearch, this.props.delay);\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          isLoading = _this$props3.isLoading,\n          options = _this$props3.options,\n          useCache = _this$props3.useCache; // Ensure that we've gone from a loading to a completed state. Otherwise\n      // an empty response could get cached if the component updates during the\n      // request (eg: if the parent re-renders for some reason).\n\n      if (!isLoading && prevProps.isLoading && useCache) {\n        this._cache[this._query] = options;\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._cache = {};\n      this._query = '';\n      this._handleSearchDebounced && this._handleSearchDebounced.cancel();\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          allowNew = _this$props4.allowNew,\n          instanceRef = _this$props4.instanceRef,\n          isLoading = _this$props4.isLoading,\n          options = _this$props4.options,\n          useCache = _this$props4.useCache,\n          props = _objectWithoutPropertiesLoose(_this$props4, [\"allowNew\", \"instanceRef\", \"isLoading\", \"options\", \"useCache\"]);\n\n      var cachedQuery = this._cache[this._query];\n      return /*#__PURE__*/React.createElement(TypeaheadComponent, _extends({}, props, {\n        allowNew: // Disable custom selections during a search unless\n        // `allowNew` is a function.\n        isFunction(allowNew) ? allowNew : allowNew && !isLoading,\n        emptyLabel: this._getEmptyLabel(),\n        isLoading: isLoading,\n        onInputChange: this._handleInputChange,\n        options: useCache && cachedQuery ? cachedQuery : options,\n        ref: instanceRef\n      }));\n    };\n\n    return AsyncTypeahead;\n  }(React.Component);\n\n  _defineProperty(AsyncTypeahead, \"displayName\", \"asyncContainer(\" + getDisplayName(Typeahead) + \")\");\n\n  _defineProperty(AsyncTypeahead, \"propTypes\", propTypes);\n\n  _defineProperty(AsyncTypeahead, \"defaultProps\", defaultProps);\n\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(AsyncTypeahead, _extends({}, props, {\n      instanceRef: ref\n    }));\n  });\n};\n\nexport default asyncContainer;"]},"metadata":{},"sourceType":"module"}