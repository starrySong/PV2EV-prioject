{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\uikit\\\\Alerts.js\";\n\nimport React from 'react';\nimport { Row, Col, Card, CardBody, Alert, UncontrolledAlert } from 'reactstrap';\nimport classNames from 'classnames';\nimport PageTitle from '../../components/PageTitle';\nvar colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nvar DefaultAlerts = function DefaultAlerts() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \"Default Alert\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-14\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"Alerts are available for any length of text, as well as an optional dismiss button. Just use\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"Alert\")), colors.map(function (color, index) {\n    return /*#__PURE__*/React.createElement(Alert, {\n      color: color,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    }, color, \" - \"), \" A simple \", color, \" alert\\u2014check it out!\");\n  })));\n};\n\nvar DismissibleAlerts = function DismissibleAlerts() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Dismissing Alert\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-14\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Alerts are available for any length of text, as well as an optional dismiss button. Just use\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"UncontrolledAlert\")), colors.map(function (color, index) {\n    return /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      color: color,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, color, \" - \"), \" A simple \", color, \" alert\\u2014check it out!\");\n  })));\n};\n\nvar AlertsWithIcon = function AlertsWithIcon() {\n  var icons = ['dripicons-checkmark', 'dripicons-checkmark', 'dripicons-checkmark', 'dripicons-wrong', 'dripicons-warning', 'dripicons-information', 'dripicons-checkmark', 'dripicons-checkmark'];\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Alerts with Icon\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-14\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Display alert with icon on left.\"), colors.map(function (color, index) {\n    return /*#__PURE__*/React.createElement(UncontrolledAlert, {\n      color: color,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: classNames(icons[index], 'mr-2'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 82\n      }\n    }, color, \" - \"), \" A simple\", ' ', color, \" alert\\u2014check it out!\");\n  })));\n};\n\nvar AlertsWithRichContent = function AlertsWithRichContent() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Additional content\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-14\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Alerts can also contain additional HTML elements like headings, paragraphs and dividers.\"), /*#__PURE__*/React.createElement(Alert, {\n    color: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"alert-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Well done!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"))));\n};\n\nvar CustomAlerts = function CustomAlerts() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Custom Alert\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-14\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Display alert with transparent background and with contextual text color. Use classes\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \".bg-white\"), \", and \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 49\n    }\n  }, \".text-*\"), \". E.g. \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 76\n    }\n  }, \"bg-white text-primary\"), \".\"), colors.map(function (color, index) {\n    return /*#__PURE__*/React.createElement(Alert, {\n      color: color,\n      className: classNames('bg-white', 'text-' + color),\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, color, \" - \"), \" A simple \", color, \" alert\\u2014check it out!\");\n  })));\n};\n\nvar AlertsWithLink = function AlertsWithLink() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Link Color\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted font-14\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, \".alert-link\"), \" utility class to quickly provide matching colored links within any alert.\"), colors.map(function (color, index) {\n    return /*#__PURE__*/React.createElement(Alert, {\n      color: color,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, color, \" - \"), \" A simple \", color, \" alert with\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      className: \"alert-link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, \"an example link\"), \"!\");\n  })));\n};\n\nvar Alerts = function Alerts() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    breadCrumbItems: [{\n      label: 'UI',\n      path: '/ui/alerts'\n    }, {\n      label: 'Base UI',\n      path: '/ui/alerts'\n    }, {\n      label: 'Alerts',\n      path: '/ui/alerts',\n      active: true\n    }],\n    title: 'Alerts',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DefaultAlerts, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DismissibleAlerts, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomAlerts, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AlertsWithLink, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AlertsWithIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AlertsWithRichContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Alerts;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/uikit/Alerts.js"],"names":["React","Row","Col","Card","CardBody","Alert","UncontrolledAlert","classNames","PageTitle","colors","DefaultAlerts","map","color","index","DismissibleAlerts","AlertsWithIcon","icons","AlertsWithRichContent","CustomAlerts","AlertsWithLink","Alerts","label","path","active"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, CardBody, Alert, UncontrolledAlert } from 'reactstrap';\nimport classNames from 'classnames';\n\nimport PageTitle from '../../components/PageTitle';\n\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nconst DefaultAlerts = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Default Alert</h4>\n                <p className=\"text-muted font-14\">\n                    Alerts are available for any length of text, as well as an optional dismiss button. Just use{' '}\n                    <code>Alert</code>\n                </p>\n\n                {colors.map((color, index) => {\n                    return (\n                        <Alert color={color} key={index}>\n                            <strong>{color} - </strong> A simple {color} alert—check it out!\n                        </Alert>\n                    );\n                })}\n            </CardBody>\n        </Card>\n    );\n};\n\nconst DismissibleAlerts = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Dismissing Alert</h4>\n                <p className=\"text-muted font-14\">\n                    Alerts are available for any length of text, as well as an optional dismiss button. Just use{' '}\n                    <code>UncontrolledAlert</code>\n                </p>\n\n                {colors.map((color, index) => {\n                    return (\n                        <UncontrolledAlert color={color} key={index}>\n                            <strong>{color} - </strong> A simple {color} alert—check it out!\n                        </UncontrolledAlert>\n                    );\n                })}\n            </CardBody>\n        </Card>\n    );\n};\n\nconst AlertsWithIcon = () => {\n    const icons = [\n        'dripicons-checkmark',\n        'dripicons-checkmark',\n        'dripicons-checkmark',\n        'dripicons-wrong',\n        'dripicons-warning',\n        'dripicons-information',\n        'dripicons-checkmark',\n        'dripicons-checkmark',\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Alerts with Icon</h4>\n                <p className=\"text-muted font-14\">Display alert with icon on left.</p>\n\n                {colors.map((color, index) => {\n                    return (\n                        <UncontrolledAlert color={color} key={index}>\n                            <i className={classNames(icons[index], 'mr-2')}></i> <strong>{color} - </strong> A simple{' '}\n                            {color} alert—check it out!\n                        </UncontrolledAlert>\n                    );\n                })}\n            </CardBody>\n        </Card>\n    );\n};\n\nconst AlertsWithRichContent = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Additional content</h4>\n                <p className=\"text-muted font-14\">\n                    Alerts can also contain additional HTML elements like headings, paragraphs and dividers.\n                </p>\n\n                <Alert color=\"success\">\n                    <h4 className=\"alert-heading\">Well done!</h4>\n                    <p>\n                        Aww yeah, you successfully read this important alert message. This example text is going to run\n                        a bit longer so that you can see how spacing within an alert works with this kind of content.\n                    </p>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\n                    </p>\n                </Alert>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst CustomAlerts = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Custom Alert</h4>\n                <p className=\"text-muted font-14\">\n                    Display alert with transparent background and with contextual text color. Use classes{' '}\n                    <code>.bg-white</code>, and <code>.text-*</code>. E.g. <code>bg-white text-primary</code>.\n                </p>\n\n                {colors.map((color, index) => {\n                    return (\n                        <Alert color={color} className={classNames('bg-white', 'text-' + color)} key={index}>\n                            <strong>{color} - </strong> A simple {color} alert—check it out!\n                        </Alert>\n                    );\n                })}\n            </CardBody>\n        </Card>\n    );\n};\n\nconst AlertsWithLink = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Link Color</h4>\n                <p className=\"text-muted font-14\">\n                    Use the <code>.alert-link</code> utility class to quickly provide matching colored links within any\n                    alert.\n                </p>\n\n                {colors.map((color, index) => {\n                    return (\n                        <Alert color={color} key={index}>\n                            <strong>{color} - </strong> A simple {color} alert with{' '}\n                            <a href=\"/\" className=\"alert-link\">\n                                an example link\n                            </a>\n                            !\n                        </Alert>\n                    );\n                })}\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Alerts = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'UI', path: '/ui/alerts' },\n                    { label: 'Base UI', path: '/ui/alerts' },\n                    { label: 'Alerts', path: '/ui/alerts', active: true },\n                ]}\n                title={'Alerts'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <DefaultAlerts />\n                </Col>\n\n                <Col lg={6}>\n                    <DismissibleAlerts />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <CustomAlerts />\n                </Col>\n                <Col lg={6}>\n                    <AlertsWithLink />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <AlertsWithIcon />\n                </Col>\n                <Col>\n                    <AlertsWithRichContent />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Alerts;\n"]},"metadata":{},"sourceType":"module"}