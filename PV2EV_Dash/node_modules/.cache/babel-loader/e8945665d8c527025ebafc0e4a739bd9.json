{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\dashboards\\\\PV2EVDash1\\\\ParkCount.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardBody, Table } from 'reactstrap';\n\nvar BasicTable = function BasicTable(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      records = _useState2[0],\n      setRecord = _useState2[1];\n\n  useEffect(function () {\n    // POST request using fetch inside useEffect React hook\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        totalEVParked: props.totalEVParked\n      })\n    };\n    fetch('http://127.0.0.1:5000/parkedcount', requestOptions).then(function (response) {\n      // 서버 요청에 대한 응답받는 코드\n      response.json().then(function (data) {\n        console.log(data);\n        var Info = data; // type = Object로 들고온다.\n\n        setRecord(Info);\n        console.log(records);\n      });\n    });\n  }, []); // 계속 실행되어야할 것 같아서 []파라미터 안씀\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"\\uC8FC\\uCC28\\uC7A5 \\uD604\\uD669\"), /*#__PURE__*/React.createElement(Table, {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, records.map(function (record, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 37\n      }\n    }, record.topic), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }\n    }, record.num + '대'));\n  })))));\n};\n\nvar ParkedCountTables = function ParkedCountTables(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BasicTable, {\n    totalEVParked: props.totalEVParked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ParkedCountTables;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/dashboards/PV2EVDash1/ParkCount.js"],"names":["React","useEffect","useState","Card","CardBody","Table","BasicTable","props","records","setRecord","requestOptions","method","headers","body","JSON","stringify","totalEVParked","fetch","then","response","json","data","console","log","Info","map","record","index","topic","num","ParkedCountTables"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,KAAzB,QAAsC,YAAtC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,kBACEL,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,MACnBM,OADmB;AAAA,MACXC,SADW;;AAE1BR,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA,QAAMS,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,aAAa,EAAET,KAAK,CAACS;AAAvB,OAAf;AAHa,KAAvB;AAKAC,IAAAA,KAAK,CAAC,mCAAD,EAAsCP,cAAtC,CAAL,CACKQ,IADL,CACU,UAACC,QAAD,EAAc;AAAE;AAClBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAASG,IAAT,EAAe;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,IAAI,GAAGH,IAAb,CAFoC,CAEjB;;AACnBZ,QAAAA,SAAS,CAACe,IAAD,CAAT;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACH,OALG;AAMP,KARD;AASH,GAhBQ,EAgBP,EAhBO,CAAT,CAF0B,CAkBnB;;AAEP,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,eAGI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OAAO,CAACiB,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC5B,wBACI;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,MAAM,CAACE,KAAxB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAM,CAACG,GAAP,GAAa,GAAlB,CAFJ,CADJ;AAMH,GAPA,CADL,CADJ,CAHJ,CADJ,CADJ;AAoBH,CAxCD;;AA0CA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACvB,KAAD,EAAW;AACjC,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,aAAa,EAAIA,KAAK,CAACS,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAND;;AAQA,eAAec,iBAAf","sourcesContent":["// @flow\r\nimport React, {useEffect, useState} from 'react';\r\nimport { Card, CardBody, Table } from 'reactstrap';\r\n\r\nconst BasicTable = (props) => {\r\n    const [records,setRecord] = useState([])\r\n    useEffect(() => {\r\n        // POST request using fetch inside useEffect React hook\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ totalEVParked: props.totalEVParked})\r\n        };\r\n        fetch('http://127.0.0.1:5000/parkedcount', requestOptions)\r\n            .then((response) => { // 서버 요청에 대한 응답받는 코드\r\n                response.json().then(function(data) {\r\n                console.log(data);\r\n                const Info = data; // type = Object로 들고온다.\r\n                setRecord(Info)\r\n                console.log(records);\r\n            })\r\n        })\r\n    },[]); // 계속 실행되어야할 것 같아서 []파라미터 안씀\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">주차장 현황</h4>\r\n\r\n                <Table className=\"mb-0\">\r\n                    <tbody>\r\n                        {records.map((record, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <th scope=\"row\">{record.topic}</th>\r\n                                    <td>{record.num + '대'}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst ParkedCountTables = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <BasicTable totalEVParked = {props.totalEVParked}/>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ParkedCountTables;"]},"metadata":{},"sourceType":"module"}