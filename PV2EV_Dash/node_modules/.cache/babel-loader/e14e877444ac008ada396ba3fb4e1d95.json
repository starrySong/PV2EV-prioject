{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\songt\\\\PycharmProjects\\\\PV2EV_Dash\\\\src\\\\pages\\\\apps\\\\Chat\\\\ChatArea.js\";\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardBody, UncontrolledDropdown, Row, Col, DropdownToggle, DropdownItem, DropdownMenu } from 'reactstrap';\nimport { AvForm, AvInput } from 'availity-reactstrap-validation';\nimport classnames from 'classnames';\nimport SimpleBar from 'simplebar-react';\nimport Loader from '../../../components/Loader';\nimport { messages } from './data';\n\nvar UserMessage = function UserMessage(_ref) {\n  var message = _ref.message,\n      toUser = _ref.toUser;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: classnames('clearfix', {\n      odd: message.from.id === toUser.id\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-avatar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: message.from.avatar,\n    className: \"rounded\",\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, message.sendOn)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ctext-wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, message.from.name), message.message.type === 'text' && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 57\n    }\n  }, message.message.value)), message.message.type === 'file' && /*#__PURE__*/React.createElement(Card, {\n    className: \"mt-2 mb-1 shadow-none border text-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"col-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"avatar-title rounded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"uil uil-file-upload-alt font-20\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    className: \"pl-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"text-muted font-weight-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 37\n    }\n  }, message.message.value.file), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }, message.message.value.size)), /*#__PURE__*/React.createElement(Col, {\n    className: \"col-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"btn btn-link btn-lg text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"dripicons-download\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 41\n    }\n  }))))))), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"conversation-actions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    tag: \"button\",\n    className: \"btn btn-sm btn-link no-arrow p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"uil uil-ellipsis-v\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Copy Message\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Delete\"))));\n}; // ChatArea\n\n\nvar ChatArea = /*#__PURE__*/function (_Component) {\n  _inherits(ChatArea, _Component);\n\n  var _super = _createSuper(ChatArea);\n\n  function ChatArea(props) {\n    var _this2;\n\n    _classCallCheck(this, ChatArea);\n\n    _this2 = _super.call(this, props);\n\n    _this2.getMessagesForUser = function () {\n      if (_this2.props.selectedUser) {\n        _this2.setState({\n          loading: true\n        });\n\n        setTimeout(function () {\n          _this2.setState({\n            userMessages: _toConsumableArray(messages.filter(function (m) {\n              return m.to.id === _this2.state.toUser.id && m.from.id === _this2.props.selectedUser.id || _this2.state.toUser.id === m.from.id && m.to.id === _this2.props.selectedUser.id;\n            })),\n            loading: false\n          });\n        }, 750);\n      }\n    };\n\n    _this2.state = {\n      loading: false,\n      userMessages: [],\n      toUser: {\n        id: 9,\n        name: 'Shreyu N',\n        avatar: 'assets/images/users/avatar-7.jpg',\n        email: 'support@coderthemes.com',\n        phone: '+1 456 9595 9594',\n        location: 'California, USA',\n        languages: 'English, German, Spanish',\n        groups: 'Work, Friends'\n      },\n      newMessage: ''\n    };\n    _this2.getMessagesForUser = _this2.getMessagesForUser.bind(_assertThisInitialized(_this2));\n    _this2.sendChatMessage = _this2.sendChatMessage.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(ChatArea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMessagesForUser();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps !== this.props && this.props.selectedUser) {\n        this.getMessagesForUser();\n      }\n    }\n    /**\n     * Fetches the messages for given user\n     */\n\n  }, {\n    key: \"sendChatMessage\",\n\n    /**\n     * sends the chat message\n     */\n    value: function sendChatMessage(e, values) {\n      var userMessages = _toConsumableArray(this.state.userMessages);\n\n      userMessages.push({\n        id: this.state.userMessages.length + 1,\n        from: this.state.toUser,\n        to: this.state.selectedUser,\n        message: {\n          type: 'text',\n          value: values.newMessage\n        },\n        sendOn: new Date().getHours() + ':' + new Date().getMinutes()\n      });\n      this.setState({\n        userMessages\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, this.state.loading && /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 48\n        }\n      }), /*#__PURE__*/React.createElement(SimpleBar, {\n        style: {\n          maxHeight: '556px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"conversation-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }, this.state.userMessages.map(function (message, index) {\n        return /*#__PURE__*/React.createElement(UserMessage, {\n          key: index,\n          message: message,\n          toUser: _this3.state.toUser,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 44\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-2 bg-light p-3 rounded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(AvForm, {\n        className: \"needs-validation\",\n        noValidate: true,\n        name: \"chat-form\",\n        id: \"chat-form\",\n        onValidSubmit: this.sendChatMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-2 mb-sm-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(AvInput, {\n        type: \"text\",\n        name: \"newMessage\",\n        className: \"border-0\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        className: \"col-sm-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"#\",\n        className: \"btn btn-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"uil uil-paperclip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(Link, {\n        to: \"#\",\n        className: \"btn btn-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 53\n        }\n      }, ' ', /*#__PURE__*/React.createElement(\"i\", {\n        className: \"uil uil-smile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 57\n        }\n      }), ' '), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success chat-send btn-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"uil uil-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 57\n        }\n      }))))))))))));\n    }\n  }]);\n\n  return ChatArea;\n}(Component);\n\nexport default ChatArea;","map":{"version":3,"sources":["C:/Users/songt/PycharmProjects/PV2EV_Dash/src/pages/apps/Chat/ChatArea.js"],"names":["React","Component","Link","Card","CardBody","UncontrolledDropdown","Row","Col","DropdownToggle","DropdownItem","DropdownMenu","AvForm","AvInput","classnames","SimpleBar","Loader","messages","UserMessage","message","toUser","odd","from","id","avatar","sendOn","name","type","value","file","size","ChatArea","props","getMessagesForUser","selectedUser","setState","loading","setTimeout","userMessages","filter","m","to","state","email","phone","location","languages","groups","newMessage","bind","sendChatMessage","prevProps","e","values","push","length","Date","getHours","getMinutes","maxHeight","width","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardBody, UncontrolledDropdown, Row, Col, DropdownToggle, DropdownItem, DropdownMenu } from 'reactstrap';\nimport { AvForm, AvInput } from 'availity-reactstrap-validation';\nimport classnames from 'classnames';\nimport SimpleBar from 'simplebar-react';\n\nimport Loader from '../../../components/Loader';\nimport { messages } from './data';\n\nconst UserMessage = ({ message, toUser }) => {\n    return (\n        <li className={classnames('clearfix', { odd: message.from.id === toUser.id })}>\n            <div className=\"chat-avatar\">\n                <img src={message.from.avatar} className=\"rounded\" alt=\"\" />\n                <i>{message.sendOn}</i>\n            </div>\n            <div className=\"conversation-text\">\n                <div className=\"ctext-wrap\">\n                    <i>{message.from.name}</i>\n                    {message.message.type === 'text' && <p>{message.message.value}</p>}\n                </div>\n\n                {message.message.type === 'file' && (\n                    <Card className=\"mt-2 mb-1 shadow-none border text-left\">\n                        <div className=\"p-2\">\n                            <Row className=\"align-items-center\">\n                                <Col className=\"col-auto\">\n                                    <div className=\"avatar-sm\">\n                                        <span className=\"avatar-title rounded\">\n                                            <i className=\"uil uil-file-upload-alt font-20\"></i>\n                                        </span>\n                                    </div>\n                                </Col>\n                                <Col className=\"pl-0\">\n                                    <Link to=\"#\" className=\"text-muted font-weight-bold\">\n                                        {message.message.value.file}\n                                    </Link>\n                                    <p className=\"mb-0\">{message.message.value.size}</p>\n                                </Col>\n                                <Col className=\"col-auto\">\n                                    <Link to=\"#\" className=\"btn btn-link btn-lg text-muted\">\n                                        <i className=\"dripicons-download\"></i>\n                                    </Link>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Card>\n                )}\n            </div>\n\n            <UncontrolledDropdown className=\"conversation-actions\">\n                <DropdownToggle tag=\"button\" className=\"btn btn-sm btn-link no-arrow p-0\">\n                    <i className=\"uil uil-ellipsis-v\"></i>\n                </DropdownToggle>\n\n                <DropdownMenu>\n                    <DropdownItem>Copy Message</DropdownItem>\n                    <DropdownItem>Edit</DropdownItem>\n                    <DropdownItem>Delete</DropdownItem>\n                </DropdownMenu>\n            </UncontrolledDropdown>\n        </li>\n    );\n};\n\n// ChatArea\nclass ChatArea extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            userMessages: [],\n            toUser: {\n                id: 9,\n                name: 'Shreyu N',\n                avatar: 'assets/images/users/avatar-7.jpg',\n                email: 'support@coderthemes.com',\n                phone: '+1 456 9595 9594',\n                location: 'California, USA',\n                languages: 'English, German, Spanish',\n                groups: 'Work, Friends',\n            },\n            newMessage: '',\n        };\n\n        this.getMessagesForUser = this.getMessagesForUser.bind(this);\n        this.sendChatMessage = this.sendChatMessage.bind(this);\n    }\n\n    componentDidMount() {\n        this.getMessagesForUser();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps !== this.props && this.props.selectedUser) {\n            this.getMessagesForUser();\n        }\n    }\n\n    /**\n     * Fetches the messages for given user\n     */\n    getMessagesForUser = () => {\n        if (this.props.selectedUser) {\n            this.setState({ loading: true });\n            setTimeout(() => {\n                this.setState({\n                    userMessages: [\n                        ...messages.filter(\n                            m =>\n                                (m.to.id === this.state.toUser.id && m.from.id === this.props.selectedUser.id) ||\n                                (this.state.toUser.id === m.from.id && m.to.id === this.props.selectedUser.id)\n                        ),\n                    ],\n                    loading: false,\n                });\n            }, 750);\n        }\n    };\n\n    /**\n     * sends the chat message\n     */\n    sendChatMessage(e, values) {\n        let userMessages = [...this.state.userMessages];\n\n        userMessages.push({\n            id: this.state.userMessages.length + 1,\n            from: this.state.toUser,\n            to: this.state.selectedUser,\n            message: { type: 'text', value: values.newMessage },\n            sendOn: new Date().getHours() + ':' + new Date().getMinutes(),\n        });\n        this.setState({ userMessages });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Card>\n                    <CardBody className=\"position-relative\">\n                        {this.state.loading && <Loader />}\n\n                        <SimpleBar style={{ maxHeight: '556px', width: '100%' }}>\n                            <ul className=\"conversation-list\">\n                                {this.state.userMessages.map((message, index) => {\n                                    return <UserMessage key={index} message={message} toUser={this.state.toUser} />;\n                                })}\n                            </ul>\n                        </SimpleBar>\n\n                        <Row>\n                            <Col>\n                                <div className=\"mt-2 bg-light p-3 rounded\">\n                                    <AvForm\n                                        className=\"needs-validation\"\n                                        noValidate\n                                        name=\"chat-form\"\n                                        id=\"chat-form\"\n                                        onValidSubmit={this.sendChatMessage}>\n                                        <Row>\n                                            <Col className=\"mb-2 mb-sm-0\">\n                                                <AvInput\n                                                    type=\"text\"\n                                                    name=\"newMessage\"\n                                                    className=\"border-0\"\n                                                    required></AvInput>\n                                            </Col>\n                                            <Col className=\"col-sm-auto\">\n                                                <div className=\"btn-group\">\n                                                    <Link to=\"#\" className=\"btn btn-light\">\n                                                        <i className=\"uil uil-paperclip\"></i>\n                                                    </Link>\n                                                    <Link to=\"#\" className=\"btn btn-light\">\n                                                        {' '}\n                                                        <i className=\"uil uil-smile\"></i>{' '}\n                                                    </Link>\n                                                    <button\n                                                        type=\"submit\"\n                                                        className=\"btn btn-success chat-send btn-block\">\n                                                        <i className=\"uil uil-message\"></i>\n                                                    </button>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </AvForm>\n                                </div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ChatArea;\n"]},"metadata":{},"sourceType":"module"}